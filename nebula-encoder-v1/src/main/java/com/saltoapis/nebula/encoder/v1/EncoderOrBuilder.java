// Generated by the protocol buffer compiler.  DO NOT EDIT!
// NO CHECKED-IN PROTOBUF GENCODE
// source: salto/nebula/encoder/v1/encoder.proto
// Protobuf Java Version: 4.29.2

package com.saltoapis.nebula.encoder.v1;

public interface EncoderOrBuilder extends
    // @@protoc_insertion_point(interface_extends:salto.nebula.encoder.v1.Encoder)
    com.google.protobuf.MessageOrBuilder {

  /**
   * <pre>
   * Output only. Resource name of the encoder. It must have the format of
   * `installations/&#42;&#47;encoders/&#42;`. For example:
   * `installations/surelock-homes-hq/encoders/dancing-men`.
   * </pre>
   *
   * <code>string name = 1;</code>
   * @return The name.
   */
  java.lang.String getName();
  /**
   * <pre>
   * Output only. Resource name of the encoder. It must have the format of
   * `installations/&#42;&#47;encoders/&#42;`. For example:
   * `installations/surelock-homes-hq/encoders/dancing-men`.
   * </pre>
   *
   * <code>string name = 1;</code>
   * @return The bytes for name.
   */
  com.google.protobuf.ByteString
      getNameBytes();

  /**
   * <pre>
   * Display name of the encoder.
   * </pre>
   *
   * <code>string display_name = 2;</code>
   * @return The displayName.
   */
  java.lang.String getDisplayName();
  /**
   * <pre>
   * Display name of the encoder.
   * </pre>
   *
   * <code>string display_name = 2;</code>
   * @return The bytes for displayName.
   */
  com.google.protobuf.ByteString
      getDisplayNameBytes();

  /**
   * <pre>
   * Globally unique identifier that is used across all devices manufactured
   * by SALTO, including gateways, extenders, encoders and so on.
   * </pre>
   *
   * <code>optional string device_id = 3;</code>
   * @return Whether the deviceId field is set.
   */
  boolean hasDeviceId();
  /**
   * <pre>
   * Globally unique identifier that is used across all devices manufactured
   * by SALTO, including gateways, extenders, encoders and so on.
   * </pre>
   *
   * <code>optional string device_id = 3;</code>
   * @return The deviceId.
   */
  java.lang.String getDeviceId();
  /**
   * <pre>
   * Globally unique identifier that is used across all devices manufactured
   * by SALTO, including gateways, extenders, encoders and so on.
   * </pre>
   *
   * <code>optional string device_id = 3;</code>
   * @return The bytes for deviceId.
   */
  com.google.protobuf.ByteString
      getDeviceIdBytes();

  /**
   * <pre>
   * Parent name, when encoder is connected to a gateway
   * </pre>
   *
   * <code>string gateway = 4;</code>
   * @return Whether the gateway field is set.
   */
  boolean hasGateway();
  /**
   * <pre>
   * Parent name, when encoder is connected to a gateway
   * </pre>
   *
   * <code>string gateway = 4;</code>
   * @return The gateway.
   */
  java.lang.String getGateway();
  /**
   * <pre>
   * Parent name, when encoder is connected to a gateway
   * </pre>
   *
   * <code>string gateway = 4;</code>
   * @return The bytes for gateway.
   */
  com.google.protobuf.ByteString
      getGatewayBytes();

  /**
   * <pre>
   * Parent name, when encoder is connected to an extender
   * </pre>
   *
   * <code>string extender = 5;</code>
   * @return Whether the extender field is set.
   */
  boolean hasExtender();
  /**
   * <pre>
   * Parent name, when encoder is connected to an extender
   * </pre>
   *
   * <code>string extender = 5;</code>
   * @return The extender.
   */
  java.lang.String getExtender();
  /**
   * <pre>
   * Parent name, when encoder is connected to an extender
   * </pre>
   *
   * <code>string extender = 5;</code>
   * @return The bytes for extender.
   */
  com.google.protobuf.ByteString
      getExtenderBytes();

  /**
   * <pre>
   * Indicates whether this encoder has been initialized or not. This
   * field cannot be modified using a standard
   * [`UpdateEncoder`][salto.nebula.encoder.v1.EncoderService.UpdateEncoder]
   * operation. To change the value of this field, you must call
   * [`InitializeEncoder`][salto.nebula.encoder.v1.EncoderService.InitializeEncoder].
   *
   * If the value is `false` also applies to the case where the
   * initialization process has been initiated but where it has not finished.
   * </pre>
   *
   * <code>bool initialized = 6;</code>
   * @return The initialized.
   */
  boolean getInitialized();

  /**
   * <pre>
   * Indicates whether this encoder is connected or not. It's considered
   * connected if there has been at least one communication with it within the
   * last 10 minutes.
   * </pre>
   *
   * <code>bool connected = 7;</code>
   * @return The connected.
   */
  boolean getConnected();

  /**
   * <pre>
   * The last time an event was received.
   * </pre>
   *
   * <code>.google.protobuf.Timestamp last_event_time = 8;</code>
   * @return Whether the lastEventTime field is set.
   */
  boolean hasLastEventTime();
  /**
   * <pre>
   * The last time an event was received.
   * </pre>
   *
   * <code>.google.protobuf.Timestamp last_event_time = 8;</code>
   * @return The lastEventTime.
   */
  com.google.protobuf.Timestamp getLastEventTime();
  /**
   * <pre>
   * The last time an event was received.
   * </pre>
   *
   * <code>.google.protobuf.Timestamp last_event_time = 8;</code>
   */
  com.google.protobuf.TimestampOrBuilder getLastEventTimeOrBuilder();

  /**
   * <pre>
   * Indicates whether this encoder has pending updates or not. This could be
   * because there was a pending configuration or a firmware update and is
   * conditionally set based on the current installation settings.
   * </pre>
   *
   * <code>bool outdated = 9;</code>
   * @return The outdated.
   */
  boolean getOutdated();

  /**
   * <pre>
   * Disables the sound emitted by the encoder during operation.
   * </pre>
   *
   * <code>bool disable_sound = 10;</code>
   * @return The disableSound.
   */
  boolean getDisableSound();

  com.saltoapis.nebula.encoder.v1.Encoder.ParentDeviceCase getParentDeviceCase();
}
