// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: salto/nebula/user/v1/user.proto

// Protobuf Java Version: 3.25.1
package com.saltoapis.nebula.user.v1;

/**
 * <pre>
 * The request message for [`EncodeCardKey`][salto.nebula.user.v1.UserService.EncodeCardKey]
 * </pre>
 *
 * Protobuf type {@code salto.nebula.user.v1.EncodeCardKeyRequest}
 */
public  final class EncodeCardKeyRequest extends
    com.google.protobuf.GeneratedMessageLite<
        EncodeCardKeyRequest, EncodeCardKeyRequest.Builder> implements
    // @@protoc_insertion_point(message_implements:salto.nebula.user.v1.EncodeCardKeyRequest)
    EncodeCardKeyRequestOrBuilder {
  private EncodeCardKeyRequest() {
    name_ = "";
  }
  private int deviceCase_ = 0;
  private java.lang.Object device_;
  public enum DeviceCase {
    ENCODER(2),
    ELECTRONIC_LOCK(3),
    CONTROLLER(4),
    DEVICE_NOT_SET(0);
    private final int value;
    private DeviceCase(int value) {
      this.value = value;
    }
    /**
     * @deprecated Use {@link #forNumber(int)} instead.
     */
    @java.lang.Deprecated
    public static DeviceCase valueOf(int value) {
      return forNumber(value);
    }

    public static DeviceCase forNumber(int value) {
      switch (value) {
        case 2: return ENCODER;
        case 3: return ELECTRONIC_LOCK;
        case 4: return CONTROLLER;
        case 0: return DEVICE_NOT_SET;
        default: return null;
      }
    }
    public int getNumber() {
      return this.value;
    }
  };

  @java.lang.Override
  public DeviceCase
  getDeviceCase() {
    return DeviceCase.forNumber(
        deviceCase_);
  }

  private void clearDevice() {
    deviceCase_ = 0;
    device_ = null;
  }

  public static final int NAME_FIELD_NUMBER = 1;
  private java.lang.String name_;
  /**
   * <pre>
   * The name of the requested user's card key to be encoded. For example:
   * `installations/surelock-homes-hq/users/john-watson/card-key`.
   * </pre>
   *
   * <code>string name = 1;</code>
   * @return The name.
   */
  @java.lang.Override
  public java.lang.String getName() {
    return name_;
  }
  /**
   * <pre>
   * The name of the requested user's card key to be encoded. For example:
   * `installations/surelock-homes-hq/users/john-watson/card-key`.
   * </pre>
   *
   * <code>string name = 1;</code>
   * @return The bytes for name.
   */
  @java.lang.Override
  public com.google.protobuf.ByteString
      getNameBytes() {
    return com.google.protobuf.ByteString.copyFromUtf8(name_);
  }
  /**
   * <pre>
   * The name of the requested user's card key to be encoded. For example:
   * `installations/surelock-homes-hq/users/john-watson/card-key`.
   * </pre>
   *
   * <code>string name = 1;</code>
   * @param value The name to set.
   */
  private void setName(
      java.lang.String value) {
    java.lang.Class<?> valueClass = value.getClass();
  
    name_ = value;
  }
  /**
   * <pre>
   * The name of the requested user's card key to be encoded. For example:
   * `installations/surelock-homes-hq/users/john-watson/card-key`.
   * </pre>
   *
   * <code>string name = 1;</code>
   */
  private void clearName() {

    name_ = getDefaultInstance().getName();
  }
  /**
   * <pre>
   * The name of the requested user's card key to be encoded. For example:
   * `installations/surelock-homes-hq/users/john-watson/card-key`.
   * </pre>
   *
   * <code>string name = 1;</code>
   * @param value The bytes for name to set.
   */
  private void setNameBytes(
      com.google.protobuf.ByteString value) {
    checkByteStringIsUtf8(value);
    name_ = value.toStringUtf8();

  }

  public static final int ENCODER_FIELD_NUMBER = 2;
  /**
   * <pre>
   * Device name, when device is an encoder
   * </pre>
   *
   * <code>string encoder = 2;</code>
   * @return Whether the encoder field is set.
   */
  @java.lang.Override
  public boolean hasEncoder() {
    return deviceCase_ == 2;
  }
  /**
   * <pre>
   * Device name, when device is an encoder
   * </pre>
   *
   * <code>string encoder = 2;</code>
   * @return The encoder.
   */
  @java.lang.Override
  public java.lang.String getEncoder() {
    java.lang.String ref = "";
    if (deviceCase_ == 2) {
      ref = (java.lang.String) device_;
    }
    return ref;
  }
  /**
   * <pre>
   * Device name, when device is an encoder
   * </pre>
   *
   * <code>string encoder = 2;</code>
   * @return The bytes for encoder.
   */
  @java.lang.Override
  public com.google.protobuf.ByteString
      getEncoderBytes() {
    java.lang.String ref = "";
    if (deviceCase_ == 2) {
      ref = (java.lang.String) device_;
    }
    return com.google.protobuf.ByteString.copyFromUtf8(ref);
  }
  /**
   * <pre>
   * Device name, when device is an encoder
   * </pre>
   *
   * <code>string encoder = 2;</code>
   * @param value The encoder to set.
   */
  private void setEncoder(
      java.lang.String value) {
    java.lang.Class<?> valueClass = value.getClass();
  deviceCase_ = 2;
    device_ = value;
  }
  /**
   * <pre>
   * Device name, when device is an encoder
   * </pre>
   *
   * <code>string encoder = 2;</code>
   */
  private void clearEncoder() {
    if (deviceCase_ == 2) {
      deviceCase_ = 0;
      device_ = null;
    }
  }
  /**
   * <pre>
   * Device name, when device is an encoder
   * </pre>
   *
   * <code>string encoder = 2;</code>
   * @param value The bytes for encoder to set.
   */
  private void setEncoderBytes(
      com.google.protobuf.ByteString value) {
    checkByteStringIsUtf8(value);
    device_ = value.toStringUtf8();
    deviceCase_ = 2;
  }

  public static final int ELECTRONIC_LOCK_FIELD_NUMBER = 3;
  /**
   * <pre>
   * Device name, when device is an electronic lock
   * </pre>
   *
   * <code>string electronic_lock = 3;</code>
   * @return Whether the electronicLock field is set.
   */
  @java.lang.Override
  public boolean hasElectronicLock() {
    return deviceCase_ == 3;
  }
  /**
   * <pre>
   * Device name, when device is an electronic lock
   * </pre>
   *
   * <code>string electronic_lock = 3;</code>
   * @return The electronicLock.
   */
  @java.lang.Override
  public java.lang.String getElectronicLock() {
    java.lang.String ref = "";
    if (deviceCase_ == 3) {
      ref = (java.lang.String) device_;
    }
    return ref;
  }
  /**
   * <pre>
   * Device name, when device is an electronic lock
   * </pre>
   *
   * <code>string electronic_lock = 3;</code>
   * @return The bytes for electronicLock.
   */
  @java.lang.Override
  public com.google.protobuf.ByteString
      getElectronicLockBytes() {
    java.lang.String ref = "";
    if (deviceCase_ == 3) {
      ref = (java.lang.String) device_;
    }
    return com.google.protobuf.ByteString.copyFromUtf8(ref);
  }
  /**
   * <pre>
   * Device name, when device is an electronic lock
   * </pre>
   *
   * <code>string electronic_lock = 3;</code>
   * @param value The electronicLock to set.
   */
  private void setElectronicLock(
      java.lang.String value) {
    java.lang.Class<?> valueClass = value.getClass();
  deviceCase_ = 3;
    device_ = value;
  }
  /**
   * <pre>
   * Device name, when device is an electronic lock
   * </pre>
   *
   * <code>string electronic_lock = 3;</code>
   */
  private void clearElectronicLock() {
    if (deviceCase_ == 3) {
      deviceCase_ = 0;
      device_ = null;
    }
  }
  /**
   * <pre>
   * Device name, when device is an electronic lock
   * </pre>
   *
   * <code>string electronic_lock = 3;</code>
   * @param value The bytes for electronicLock to set.
   */
  private void setElectronicLockBytes(
      com.google.protobuf.ByteString value) {
    checkByteStringIsUtf8(value);
    device_ = value.toStringUtf8();
    deviceCase_ = 3;
  }

  public static final int CONTROLLER_FIELD_NUMBER = 4;
  /**
   * <pre>
   * Device name, when device is a controller
   * </pre>
   *
   * <code>string controller = 4;</code>
   * @return Whether the controller field is set.
   */
  @java.lang.Override
  public boolean hasController() {
    return deviceCase_ == 4;
  }
  /**
   * <pre>
   * Device name, when device is a controller
   * </pre>
   *
   * <code>string controller = 4;</code>
   * @return The controller.
   */
  @java.lang.Override
  public java.lang.String getController() {
    java.lang.String ref = "";
    if (deviceCase_ == 4) {
      ref = (java.lang.String) device_;
    }
    return ref;
  }
  /**
   * <pre>
   * Device name, when device is a controller
   * </pre>
   *
   * <code>string controller = 4;</code>
   * @return The bytes for controller.
   */
  @java.lang.Override
  public com.google.protobuf.ByteString
      getControllerBytes() {
    java.lang.String ref = "";
    if (deviceCase_ == 4) {
      ref = (java.lang.String) device_;
    }
    return com.google.protobuf.ByteString.copyFromUtf8(ref);
  }
  /**
   * <pre>
   * Device name, when device is a controller
   * </pre>
   *
   * <code>string controller = 4;</code>
   * @param value The controller to set.
   */
  private void setController(
      java.lang.String value) {
    java.lang.Class<?> valueClass = value.getClass();
  deviceCase_ = 4;
    device_ = value;
  }
  /**
   * <pre>
   * Device name, when device is a controller
   * </pre>
   *
   * <code>string controller = 4;</code>
   */
  private void clearController() {
    if (deviceCase_ == 4) {
      deviceCase_ = 0;
      device_ = null;
    }
  }
  /**
   * <pre>
   * Device name, when device is a controller
   * </pre>
   *
   * <code>string controller = 4;</code>
   * @param value The bytes for controller to set.
   */
  private void setControllerBytes(
      com.google.protobuf.ByteString value) {
    checkByteStringIsUtf8(value);
    device_ = value.toStringUtf8();
    deviceCase_ = 4;
  }

  public static com.saltoapis.nebula.user.v1.EncodeCardKeyRequest parseFrom(
      java.nio.ByteBuffer data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return com.google.protobuf.GeneratedMessageLite.parseFrom(
        DEFAULT_INSTANCE, data);
  }
  public static com.saltoapis.nebula.user.v1.EncodeCardKeyRequest parseFrom(
      java.nio.ByteBuffer data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return com.google.protobuf.GeneratedMessageLite.parseFrom(
        DEFAULT_INSTANCE, data, extensionRegistry);
  }
  public static com.saltoapis.nebula.user.v1.EncodeCardKeyRequest parseFrom(
      com.google.protobuf.ByteString data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return com.google.protobuf.GeneratedMessageLite.parseFrom(
        DEFAULT_INSTANCE, data);
  }
  public static com.saltoapis.nebula.user.v1.EncodeCardKeyRequest parseFrom(
      com.google.protobuf.ByteString data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return com.google.protobuf.GeneratedMessageLite.parseFrom(
        DEFAULT_INSTANCE, data, extensionRegistry);
  }
  public static com.saltoapis.nebula.user.v1.EncodeCardKeyRequest parseFrom(byte[] data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return com.google.protobuf.GeneratedMessageLite.parseFrom(
        DEFAULT_INSTANCE, data);
  }
  public static com.saltoapis.nebula.user.v1.EncodeCardKeyRequest parseFrom(
      byte[] data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return com.google.protobuf.GeneratedMessageLite.parseFrom(
        DEFAULT_INSTANCE, data, extensionRegistry);
  }
  public static com.saltoapis.nebula.user.v1.EncodeCardKeyRequest parseFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageLite.parseFrom(
        DEFAULT_INSTANCE, input);
  }
  public static com.saltoapis.nebula.user.v1.EncodeCardKeyRequest parseFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageLite.parseFrom(
        DEFAULT_INSTANCE, input, extensionRegistry);
  }

  public static com.saltoapis.nebula.user.v1.EncodeCardKeyRequest parseDelimitedFrom(java.io.InputStream input)
      throws java.io.IOException {
    return parseDelimitedFrom(DEFAULT_INSTANCE, input);
  }

  public static com.saltoapis.nebula.user.v1.EncodeCardKeyRequest parseDelimitedFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return parseDelimitedFrom(DEFAULT_INSTANCE, input, extensionRegistry);
  }
  public static com.saltoapis.nebula.user.v1.EncodeCardKeyRequest parseFrom(
      com.google.protobuf.CodedInputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageLite.parseFrom(
        DEFAULT_INSTANCE, input);
  }
  public static com.saltoapis.nebula.user.v1.EncodeCardKeyRequest parseFrom(
      com.google.protobuf.CodedInputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageLite.parseFrom(
        DEFAULT_INSTANCE, input, extensionRegistry);
  }

  public static Builder newBuilder() {
    return (Builder) DEFAULT_INSTANCE.createBuilder();
  }
  public static Builder newBuilder(com.saltoapis.nebula.user.v1.EncodeCardKeyRequest prototype) {
    return DEFAULT_INSTANCE.createBuilder(prototype);
  }

  /**
   * <pre>
   * The request message for [`EncodeCardKey`][salto.nebula.user.v1.UserService.EncodeCardKey]
   * </pre>
   *
   * Protobuf type {@code salto.nebula.user.v1.EncodeCardKeyRequest}
   */
  public static final class Builder extends
      com.google.protobuf.GeneratedMessageLite.Builder<
        com.saltoapis.nebula.user.v1.EncodeCardKeyRequest, Builder> implements
      // @@protoc_insertion_point(builder_implements:salto.nebula.user.v1.EncodeCardKeyRequest)
      com.saltoapis.nebula.user.v1.EncodeCardKeyRequestOrBuilder {
    // Construct using com.saltoapis.nebula.user.v1.EncodeCardKeyRequest.newBuilder()
    private Builder() {
      super(DEFAULT_INSTANCE);
    }

    @java.lang.Override
    public DeviceCase
        getDeviceCase() {
      return instance.getDeviceCase();
    }

    public Builder clearDevice() {
      copyOnWrite();
      instance.clearDevice();
      return this;
    }


    /**
     * <pre>
     * The name of the requested user's card key to be encoded. For example:
     * `installations/surelock-homes-hq/users/john-watson/card-key`.
     * </pre>
     *
     * <code>string name = 1;</code>
     * @return The name.
     */
    @java.lang.Override
    public java.lang.String getName() {
      return instance.getName();
    }
    /**
     * <pre>
     * The name of the requested user's card key to be encoded. For example:
     * `installations/surelock-homes-hq/users/john-watson/card-key`.
     * </pre>
     *
     * <code>string name = 1;</code>
     * @return The bytes for name.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString
        getNameBytes() {
      return instance.getNameBytes();
    }
    /**
     * <pre>
     * The name of the requested user's card key to be encoded. For example:
     * `installations/surelock-homes-hq/users/john-watson/card-key`.
     * </pre>
     *
     * <code>string name = 1;</code>
     * @param value The name to set.
     * @return This builder for chaining.
     */
    public Builder setName(
        java.lang.String value) {
      copyOnWrite();
      instance.setName(value);
      return this;
    }
    /**
     * <pre>
     * The name of the requested user's card key to be encoded. For example:
     * `installations/surelock-homes-hq/users/john-watson/card-key`.
     * </pre>
     *
     * <code>string name = 1;</code>
     * @return This builder for chaining.
     */
    public Builder clearName() {
      copyOnWrite();
      instance.clearName();
      return this;
    }
    /**
     * <pre>
     * The name of the requested user's card key to be encoded. For example:
     * `installations/surelock-homes-hq/users/john-watson/card-key`.
     * </pre>
     *
     * <code>string name = 1;</code>
     * @param value The bytes for name to set.
     * @return This builder for chaining.
     */
    public Builder setNameBytes(
        com.google.protobuf.ByteString value) {
      copyOnWrite();
      instance.setNameBytes(value);
      return this;
    }

    /**
     * <pre>
     * Device name, when device is an encoder
     * </pre>
     *
     * <code>string encoder = 2;</code>
     * @return Whether the encoder field is set.
     */
    @java.lang.Override
    public boolean hasEncoder() {
      return instance.hasEncoder();
    }
    /**
     * <pre>
     * Device name, when device is an encoder
     * </pre>
     *
     * <code>string encoder = 2;</code>
     * @return The encoder.
     */
    @java.lang.Override
    public java.lang.String getEncoder() {
      return instance.getEncoder();
    }
    /**
     * <pre>
     * Device name, when device is an encoder
     * </pre>
     *
     * <code>string encoder = 2;</code>
     * @return The bytes for encoder.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString
        getEncoderBytes() {
      return instance.getEncoderBytes();
    }
    /**
     * <pre>
     * Device name, when device is an encoder
     * </pre>
     *
     * <code>string encoder = 2;</code>
     * @param value The encoder to set.
     * @return This builder for chaining.
     */
    public Builder setEncoder(
        java.lang.String value) {
      copyOnWrite();
      instance.setEncoder(value);
      return this;
    }
    /**
     * <pre>
     * Device name, when device is an encoder
     * </pre>
     *
     * <code>string encoder = 2;</code>
     * @return This builder for chaining.
     */
    public Builder clearEncoder() {
      copyOnWrite();
      instance.clearEncoder();
      return this;
    }
    /**
     * <pre>
     * Device name, when device is an encoder
     * </pre>
     *
     * <code>string encoder = 2;</code>
     * @param value The bytes for encoder to set.
     * @return This builder for chaining.
     */
    public Builder setEncoderBytes(
        com.google.protobuf.ByteString value) {
      copyOnWrite();
      instance.setEncoderBytes(value);
      return this;
    }

    /**
     * <pre>
     * Device name, when device is an electronic lock
     * </pre>
     *
     * <code>string electronic_lock = 3;</code>
     * @return Whether the electronicLock field is set.
     */
    @java.lang.Override
    public boolean hasElectronicLock() {
      return instance.hasElectronicLock();
    }
    /**
     * <pre>
     * Device name, when device is an electronic lock
     * </pre>
     *
     * <code>string electronic_lock = 3;</code>
     * @return The electronicLock.
     */
    @java.lang.Override
    public java.lang.String getElectronicLock() {
      return instance.getElectronicLock();
    }
    /**
     * <pre>
     * Device name, when device is an electronic lock
     * </pre>
     *
     * <code>string electronic_lock = 3;</code>
     * @return The bytes for electronicLock.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString
        getElectronicLockBytes() {
      return instance.getElectronicLockBytes();
    }
    /**
     * <pre>
     * Device name, when device is an electronic lock
     * </pre>
     *
     * <code>string electronic_lock = 3;</code>
     * @param value The electronicLock to set.
     * @return This builder for chaining.
     */
    public Builder setElectronicLock(
        java.lang.String value) {
      copyOnWrite();
      instance.setElectronicLock(value);
      return this;
    }
    /**
     * <pre>
     * Device name, when device is an electronic lock
     * </pre>
     *
     * <code>string electronic_lock = 3;</code>
     * @return This builder for chaining.
     */
    public Builder clearElectronicLock() {
      copyOnWrite();
      instance.clearElectronicLock();
      return this;
    }
    /**
     * <pre>
     * Device name, when device is an electronic lock
     * </pre>
     *
     * <code>string electronic_lock = 3;</code>
     * @param value The bytes for electronicLock to set.
     * @return This builder for chaining.
     */
    public Builder setElectronicLockBytes(
        com.google.protobuf.ByteString value) {
      copyOnWrite();
      instance.setElectronicLockBytes(value);
      return this;
    }

    /**
     * <pre>
     * Device name, when device is a controller
     * </pre>
     *
     * <code>string controller = 4;</code>
     * @return Whether the controller field is set.
     */
    @java.lang.Override
    public boolean hasController() {
      return instance.hasController();
    }
    /**
     * <pre>
     * Device name, when device is a controller
     * </pre>
     *
     * <code>string controller = 4;</code>
     * @return The controller.
     */
    @java.lang.Override
    public java.lang.String getController() {
      return instance.getController();
    }
    /**
     * <pre>
     * Device name, when device is a controller
     * </pre>
     *
     * <code>string controller = 4;</code>
     * @return The bytes for controller.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString
        getControllerBytes() {
      return instance.getControllerBytes();
    }
    /**
     * <pre>
     * Device name, when device is a controller
     * </pre>
     *
     * <code>string controller = 4;</code>
     * @param value The controller to set.
     * @return This builder for chaining.
     */
    public Builder setController(
        java.lang.String value) {
      copyOnWrite();
      instance.setController(value);
      return this;
    }
    /**
     * <pre>
     * Device name, when device is a controller
     * </pre>
     *
     * <code>string controller = 4;</code>
     * @return This builder for chaining.
     */
    public Builder clearController() {
      copyOnWrite();
      instance.clearController();
      return this;
    }
    /**
     * <pre>
     * Device name, when device is a controller
     * </pre>
     *
     * <code>string controller = 4;</code>
     * @param value The bytes for controller to set.
     * @return This builder for chaining.
     */
    public Builder setControllerBytes(
        com.google.protobuf.ByteString value) {
      copyOnWrite();
      instance.setControllerBytes(value);
      return this;
    }

    // @@protoc_insertion_point(builder_scope:salto.nebula.user.v1.EncodeCardKeyRequest)
  }
  @java.lang.Override
  @java.lang.SuppressWarnings({"unchecked", "fallthrough"})
  protected final java.lang.Object dynamicMethod(
      com.google.protobuf.GeneratedMessageLite.MethodToInvoke method,
      java.lang.Object arg0, java.lang.Object arg1) {
    switch (method) {
      case NEW_MUTABLE_INSTANCE: {
        return new com.saltoapis.nebula.user.v1.EncodeCardKeyRequest();
      }
      case NEW_BUILDER: {
        return new Builder();
      }
      case BUILD_MESSAGE_INFO: {
          java.lang.Object[] objects = new java.lang.Object[] {
            "device_",
            "deviceCase_",
            "name_",
          };
          java.lang.String info =
              "\u0000\u0004\u0001\u0000\u0001\u0004\u0004\u0000\u0000\u0000\u0001\u0208\u0002\u023b" +
              "\u0000\u0003\u023b\u0000\u0004\u023b\u0000";
          return newMessageInfo(DEFAULT_INSTANCE, info, objects);
      }
      // fall through
      case GET_DEFAULT_INSTANCE: {
        return DEFAULT_INSTANCE;
      }
      case GET_PARSER: {
        com.google.protobuf.Parser<com.saltoapis.nebula.user.v1.EncodeCardKeyRequest> parser = PARSER;
        if (parser == null) {
          synchronized (com.saltoapis.nebula.user.v1.EncodeCardKeyRequest.class) {
            parser = PARSER;
            if (parser == null) {
              parser =
                  new DefaultInstanceBasedParser<com.saltoapis.nebula.user.v1.EncodeCardKeyRequest>(
                      DEFAULT_INSTANCE);
              PARSER = parser;
            }
          }
        }
        return parser;
    }
    case GET_MEMOIZED_IS_INITIALIZED: {
      return (byte) 1;
    }
    case SET_MEMOIZED_IS_INITIALIZED: {
      return null;
    }
    }
    throw new UnsupportedOperationException();
  }


  // @@protoc_insertion_point(class_scope:salto.nebula.user.v1.EncodeCardKeyRequest)
  private static final com.saltoapis.nebula.user.v1.EncodeCardKeyRequest DEFAULT_INSTANCE;
  static {
    EncodeCardKeyRequest defaultInstance = new EncodeCardKeyRequest();
    // New instances are implicitly immutable so no need to make
    // immutable.
    DEFAULT_INSTANCE = defaultInstance;
    com.google.protobuf.GeneratedMessageLite.registerDefaultInstance(
      EncodeCardKeyRequest.class, defaultInstance);
  }

  public static com.saltoapis.nebula.user.v1.EncodeCardKeyRequest getDefaultInstance() {
    return DEFAULT_INSTANCE;
  }

  private static volatile com.google.protobuf.Parser<EncodeCardKeyRequest> PARSER;

  public static com.google.protobuf.Parser<EncodeCardKeyRequest> parser() {
    return DEFAULT_INSTANCE.getParserForType();
  }
}

