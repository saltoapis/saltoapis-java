// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: salto/nebula/user/v1/user.proto

// Protobuf Java Version: 3.25.1
package com.saltoapis.nebula.user.v1;

/**
 * <pre>
 * The user object
 * </pre>
 *
 * Protobuf type {@code salto.nebula.user.v1.User}
 */
public  final class User extends
    com.google.protobuf.GeneratedMessageLite<
        User, User.Builder> implements
    // @@protoc_insertion_point(message_implements:salto.nebula.user.v1.User)
    UserOrBuilder {
  private User() {
    name_ = "";
    parent_ = "";
    givenName_ = "";
    familyName_ = "";
    displayName_ = "";
    email_ = "";
    photo_ = "";
    photoUri_ = "";
  }
  private int bitField0_;
  public static final int NAME_FIELD_NUMBER = 1;
  private java.lang.String name_;
  /**
   * <pre>
   * Resource name of the user. It must have the format of
   * `installations/&#42;&#47;users/&#42;`. For example:
   * `installations/surelock-homes-hq/users/john-watson`.
   * </pre>
   *
   * <code>string name = 1;</code>
   * @return The name.
   */
  @java.lang.Override
  public java.lang.String getName() {
    return name_;
  }
  /**
   * <pre>
   * Resource name of the user. It must have the format of
   * `installations/&#42;&#47;users/&#42;`. For example:
   * `installations/surelock-homes-hq/users/john-watson`.
   * </pre>
   *
   * <code>string name = 1;</code>
   * @return The bytes for name.
   */
  @java.lang.Override
  public com.google.protobuf.ByteString
      getNameBytes() {
    return com.google.protobuf.ByteString.copyFromUtf8(name_);
  }
  /**
   * <pre>
   * Resource name of the user. It must have the format of
   * `installations/&#42;&#47;users/&#42;`. For example:
   * `installations/surelock-homes-hq/users/john-watson`.
   * </pre>
   *
   * <code>string name = 1;</code>
   * @param value The name to set.
   */
  private void setName(
      java.lang.String value) {
    java.lang.Class<?> valueClass = value.getClass();
  
    name_ = value;
  }
  /**
   * <pre>
   * Resource name of the user. It must have the format of
   * `installations/&#42;&#47;users/&#42;`. For example:
   * `installations/surelock-homes-hq/users/john-watson`.
   * </pre>
   *
   * <code>string name = 1;</code>
   */
  private void clearName() {

    name_ = getDefaultInstance().getName();
  }
  /**
   * <pre>
   * Resource name of the user. It must have the format of
   * `installations/&#42;&#47;users/&#42;`. For example:
   * `installations/surelock-homes-hq/users/john-watson`.
   * </pre>
   *
   * <code>string name = 1;</code>
   * @param value The bytes for name to set.
   */
  private void setNameBytes(
      com.google.protobuf.ByteString value) {
    checkByteStringIsUtf8(value);
    name_ = value.toStringUtf8();

  }

  public static final int PARENT_FIELD_NUMBER = 2;
  private java.lang.String parent_;
  /**
   * <pre>
   * The name of the parent user of this user.
   * Only users who have had keys shared with them will have this field set.
   * </pre>
   *
   * <code>optional string parent = 2;</code>
   * @return Whether the parent field is set.
   */
  @java.lang.Override
  public boolean hasParent() {
    return ((bitField0_ & 0x00000001) != 0);
  }
  /**
   * <pre>
   * The name of the parent user of this user.
   * Only users who have had keys shared with them will have this field set.
   * </pre>
   *
   * <code>optional string parent = 2;</code>
   * @return The parent.
   */
  @java.lang.Override
  public java.lang.String getParent() {
    return parent_;
  }
  /**
   * <pre>
   * The name of the parent user of this user.
   * Only users who have had keys shared with them will have this field set.
   * </pre>
   *
   * <code>optional string parent = 2;</code>
   * @return The bytes for parent.
   */
  @java.lang.Override
  public com.google.protobuf.ByteString
      getParentBytes() {
    return com.google.protobuf.ByteString.copyFromUtf8(parent_);
  }
  /**
   * <pre>
   * The name of the parent user of this user.
   * Only users who have had keys shared with them will have this field set.
   * </pre>
   *
   * <code>optional string parent = 2;</code>
   * @param value The parent to set.
   */
  private void setParent(
      java.lang.String value) {
    java.lang.Class<?> valueClass = value.getClass();
  bitField0_ |= 0x00000001;
    parent_ = value;
  }
  /**
   * <pre>
   * The name of the parent user of this user.
   * Only users who have had keys shared with them will have this field set.
   * </pre>
   *
   * <code>optional string parent = 2;</code>
   */
  private void clearParent() {
    bitField0_ = (bitField0_ & ~0x00000001);
    parent_ = getDefaultInstance().getParent();
  }
  /**
   * <pre>
   * The name of the parent user of this user.
   * Only users who have had keys shared with them will have this field set.
   * </pre>
   *
   * <code>optional string parent = 2;</code>
   * @param value The bytes for parent to set.
   */
  private void setParentBytes(
      com.google.protobuf.ByteString value) {
    checkByteStringIsUtf8(value);
    parent_ = value.toStringUtf8();
    bitField0_ |= 0x00000001;
  }

  public static final int GIVEN_NAME_FIELD_NUMBER = 3;
  private java.lang.String givenName_;
  /**
   * <pre>
   * The personal name, forename or given name ("first name"). It could
   * also contain a middle name. First name is not used because the given
   * name is not placed first in some cultures.
   * </pre>
   *
   * <code>string given_name = 3;</code>
   * @return The givenName.
   */
  @java.lang.Override
  public java.lang.String getGivenName() {
    return givenName_;
  }
  /**
   * <pre>
   * The personal name, forename or given name ("first name"). It could
   * also contain a middle name. First name is not used because the given
   * name is not placed first in some cultures.
   * </pre>
   *
   * <code>string given_name = 3;</code>
   * @return The bytes for givenName.
   */
  @java.lang.Override
  public com.google.protobuf.ByteString
      getGivenNameBytes() {
    return com.google.protobuf.ByteString.copyFromUtf8(givenName_);
  }
  /**
   * <pre>
   * The personal name, forename or given name ("first name"). It could
   * also contain a middle name. First name is not used because the given
   * name is not placed first in some cultures.
   * </pre>
   *
   * <code>string given_name = 3;</code>
   * @param value The givenName to set.
   */
  private void setGivenName(
      java.lang.String value) {
    java.lang.Class<?> valueClass = value.getClass();
  
    givenName_ = value;
  }
  /**
   * <pre>
   * The personal name, forename or given name ("first name"). It could
   * also contain a middle name. First name is not used because the given
   * name is not placed first in some cultures.
   * </pre>
   *
   * <code>string given_name = 3;</code>
   */
  private void clearGivenName() {

    givenName_ = getDefaultInstance().getGivenName();
  }
  /**
   * <pre>
   * The personal name, forename or given name ("first name"). It could
   * also contain a middle name. First name is not used because the given
   * name is not placed first in some cultures.
   * </pre>
   *
   * <code>string given_name = 3;</code>
   * @param value The bytes for givenName to set.
   */
  private void setGivenNameBytes(
      com.google.protobuf.ByteString value) {
    checkByteStringIsUtf8(value);
    givenName_ = value.toStringUtf8();

  }

  public static final int FAMILY_NAME_FIELD_NUMBER = 4;
  private java.lang.String familyName_;
  /**
   * <pre>
   * The surname or family name ("last name"). It could also contain more than
   * one surname so that both matrilineal and patrilineal surnames can be
   * included in one place. Last name is not used because the family name is
   * not placed last in some cultures.
   * </pre>
   *
   * <code>optional string family_name = 4;</code>
   * @return Whether the familyName field is set.
   */
  @java.lang.Override
  public boolean hasFamilyName() {
    return ((bitField0_ & 0x00000002) != 0);
  }
  /**
   * <pre>
   * The surname or family name ("last name"). It could also contain more than
   * one surname so that both matrilineal and patrilineal surnames can be
   * included in one place. Last name is not used because the family name is
   * not placed last in some cultures.
   * </pre>
   *
   * <code>optional string family_name = 4;</code>
   * @return The familyName.
   */
  @java.lang.Override
  public java.lang.String getFamilyName() {
    return familyName_;
  }
  /**
   * <pre>
   * The surname or family name ("last name"). It could also contain more than
   * one surname so that both matrilineal and patrilineal surnames can be
   * included in one place. Last name is not used because the family name is
   * not placed last in some cultures.
   * </pre>
   *
   * <code>optional string family_name = 4;</code>
   * @return The bytes for familyName.
   */
  @java.lang.Override
  public com.google.protobuf.ByteString
      getFamilyNameBytes() {
    return com.google.protobuf.ByteString.copyFromUtf8(familyName_);
  }
  /**
   * <pre>
   * The surname or family name ("last name"). It could also contain more than
   * one surname so that both matrilineal and patrilineal surnames can be
   * included in one place. Last name is not used because the family name is
   * not placed last in some cultures.
   * </pre>
   *
   * <code>optional string family_name = 4;</code>
   * @param value The familyName to set.
   */
  private void setFamilyName(
      java.lang.String value) {
    java.lang.Class<?> valueClass = value.getClass();
  bitField0_ |= 0x00000002;
    familyName_ = value;
  }
  /**
   * <pre>
   * The surname or family name ("last name"). It could also contain more than
   * one surname so that both matrilineal and patrilineal surnames can be
   * included in one place. Last name is not used because the family name is
   * not placed last in some cultures.
   * </pre>
   *
   * <code>optional string family_name = 4;</code>
   */
  private void clearFamilyName() {
    bitField0_ = (bitField0_ & ~0x00000002);
    familyName_ = getDefaultInstance().getFamilyName();
  }
  /**
   * <pre>
   * The surname or family name ("last name"). It could also contain more than
   * one surname so that both matrilineal and patrilineal surnames can be
   * included in one place. Last name is not used because the family name is
   * not placed last in some cultures.
   * </pre>
   *
   * <code>optional string family_name = 4;</code>
   * @param value The bytes for familyName to set.
   */
  private void setFamilyNameBytes(
      com.google.protobuf.ByteString value) {
    checkByteStringIsUtf8(value);
    familyName_ = value.toStringUtf8();
    bitField0_ |= 0x00000002;
  }

  public static final int DISPLAY_NAME_FIELD_NUMBER = 5;
  private java.lang.String displayName_;
  /**
   * <pre>
   * The display name of the user, formed by concatenating the first and last
   * name values.
   * </pre>
   *
   * <code>string display_name = 5;</code>
   * @return The displayName.
   */
  @java.lang.Override
  public java.lang.String getDisplayName() {
    return displayName_;
  }
  /**
   * <pre>
   * The display name of the user, formed by concatenating the first and last
   * name values.
   * </pre>
   *
   * <code>string display_name = 5;</code>
   * @return The bytes for displayName.
   */
  @java.lang.Override
  public com.google.protobuf.ByteString
      getDisplayNameBytes() {
    return com.google.protobuf.ByteString.copyFromUtf8(displayName_);
  }
  /**
   * <pre>
   * The display name of the user, formed by concatenating the first and last
   * name values.
   * </pre>
   *
   * <code>string display_name = 5;</code>
   * @param value The displayName to set.
   */
  private void setDisplayName(
      java.lang.String value) {
    java.lang.Class<?> valueClass = value.getClass();
  
    displayName_ = value;
  }
  /**
   * <pre>
   * The display name of the user, formed by concatenating the first and last
   * name values.
   * </pre>
   *
   * <code>string display_name = 5;</code>
   */
  private void clearDisplayName() {

    displayName_ = getDefaultInstance().getDisplayName();
  }
  /**
   * <pre>
   * The display name of the user, formed by concatenating the first and last
   * name values.
   * </pre>
   *
   * <code>string display_name = 5;</code>
   * @param value The bytes for displayName to set.
   */
  private void setDisplayNameBytes(
      com.google.protobuf.ByteString value) {
    checkByteStringIsUtf8(value);
    displayName_ = value.toStringUtf8();

  }

  public static final int EMAIL_FIELD_NUMBER = 6;
  private java.lang.String email_;
  /**
   * <pre>
   * Email address.
   * </pre>
   *
   * <code>optional string email = 6;</code>
   * @return Whether the email field is set.
   */
  @java.lang.Override
  public boolean hasEmail() {
    return ((bitField0_ & 0x00000004) != 0);
  }
  /**
   * <pre>
   * Email address.
   * </pre>
   *
   * <code>optional string email = 6;</code>
   * @return The email.
   */
  @java.lang.Override
  public java.lang.String getEmail() {
    return email_;
  }
  /**
   * <pre>
   * Email address.
   * </pre>
   *
   * <code>optional string email = 6;</code>
   * @return The bytes for email.
   */
  @java.lang.Override
  public com.google.protobuf.ByteString
      getEmailBytes() {
    return com.google.protobuf.ByteString.copyFromUtf8(email_);
  }
  /**
   * <pre>
   * Email address.
   * </pre>
   *
   * <code>optional string email = 6;</code>
   * @param value The email to set.
   */
  private void setEmail(
      java.lang.String value) {
    java.lang.Class<?> valueClass = value.getClass();
  bitField0_ |= 0x00000004;
    email_ = value;
  }
  /**
   * <pre>
   * Email address.
   * </pre>
   *
   * <code>optional string email = 6;</code>
   */
  private void clearEmail() {
    bitField0_ = (bitField0_ & ~0x00000004);
    email_ = getDefaultInstance().getEmail();
  }
  /**
   * <pre>
   * Email address.
   * </pre>
   *
   * <code>optional string email = 6;</code>
   * @param value The bytes for email to set.
   */
  private void setEmailBytes(
      com.google.protobuf.ByteString value) {
    checkByteStringIsUtf8(value);
    email_ = value.toStringUtf8();
    bitField0_ |= 0x00000004;
  }

  public static final int ACTIVATE_TIME_FIELD_NUMBER = 7;
  private com.google.protobuf.Timestamp activateTime_;
  /**
   * <pre>
   * Activation time independent of any time zone or calendar.
   * </pre>
   *
   * <code>.google.protobuf.Timestamp activate_time = 7;</code>
   */
  @java.lang.Override
  public boolean hasActivateTime() {
    return ((bitField0_ & 0x00000008) != 0);
  }
  /**
   * <pre>
   * Activation time independent of any time zone or calendar.
   * </pre>
   *
   * <code>.google.protobuf.Timestamp activate_time = 7;</code>
   */
  @java.lang.Override
  public com.google.protobuf.Timestamp getActivateTime() {
    return activateTime_ == null ? com.google.protobuf.Timestamp.getDefaultInstance() : activateTime_;
  }
  /**
   * <pre>
   * Activation time independent of any time zone or calendar.
   * </pre>
   *
   * <code>.google.protobuf.Timestamp activate_time = 7;</code>
   */
  private void setActivateTime(com.google.protobuf.Timestamp value) {
    value.getClass();
  activateTime_ = value;
    bitField0_ |= 0x00000008;
    }
  /**
   * <pre>
   * Activation time independent of any time zone or calendar.
   * </pre>
   *
   * <code>.google.protobuf.Timestamp activate_time = 7;</code>
   */
  @java.lang.SuppressWarnings({"ReferenceEquality"})
  private void mergeActivateTime(com.google.protobuf.Timestamp value) {
    value.getClass();
  if (activateTime_ != null &&
        activateTime_ != com.google.protobuf.Timestamp.getDefaultInstance()) {
      activateTime_ =
        com.google.protobuf.Timestamp.newBuilder(activateTime_).mergeFrom(value).buildPartial();
    } else {
      activateTime_ = value;
    }
    bitField0_ |= 0x00000008;
  }
  /**
   * <pre>
   * Activation time independent of any time zone or calendar.
   * </pre>
   *
   * <code>.google.protobuf.Timestamp activate_time = 7;</code>
   */
  private void clearActivateTime() {  activateTime_ = null;
    bitField0_ = (bitField0_ & ~0x00000008);
  }

  public static final int EXPIRE_TIME_FIELD_NUMBER = 8;
  private com.google.protobuf.Timestamp expireTime_;
  /**
   * <pre>
   * Expiration time independent of any time zone or calendar.
   * </pre>
   *
   * <code>.google.protobuf.Timestamp expire_time = 8;</code>
   */
  @java.lang.Override
  public boolean hasExpireTime() {
    return ((bitField0_ & 0x00000010) != 0);
  }
  /**
   * <pre>
   * Expiration time independent of any time zone or calendar.
   * </pre>
   *
   * <code>.google.protobuf.Timestamp expire_time = 8;</code>
   */
  @java.lang.Override
  public com.google.protobuf.Timestamp getExpireTime() {
    return expireTime_ == null ? com.google.protobuf.Timestamp.getDefaultInstance() : expireTime_;
  }
  /**
   * <pre>
   * Expiration time independent of any time zone or calendar.
   * </pre>
   *
   * <code>.google.protobuf.Timestamp expire_time = 8;</code>
   */
  private void setExpireTime(com.google.protobuf.Timestamp value) {
    value.getClass();
  expireTime_ = value;
    bitField0_ |= 0x00000010;
    }
  /**
   * <pre>
   * Expiration time independent of any time zone or calendar.
   * </pre>
   *
   * <code>.google.protobuf.Timestamp expire_time = 8;</code>
   */
  @java.lang.SuppressWarnings({"ReferenceEquality"})
  private void mergeExpireTime(com.google.protobuf.Timestamp value) {
    value.getClass();
  if (expireTime_ != null &&
        expireTime_ != com.google.protobuf.Timestamp.getDefaultInstance()) {
      expireTime_ =
        com.google.protobuf.Timestamp.newBuilder(expireTime_).mergeFrom(value).buildPartial();
    } else {
      expireTime_ = value;
    }
    bitField0_ |= 0x00000010;
  }
  /**
   * <pre>
   * Expiration time independent of any time zone or calendar.
   * </pre>
   *
   * <code>.google.protobuf.Timestamp expire_time = 8;</code>
   */
  private void clearExpireTime() {  expireTime_ = null;
    bitField0_ = (bitField0_ & ~0x00000010);
  }

  public static final int PHOTO_FIELD_NUMBER = 9;
  private java.lang.String photo_;
  /**
   * <pre>
   * The file resource name for the user photo. It must have the
   * format of
   * `installations/surelock-homes-hq/files/01DSYSJ1PR36VVC3MRFRV4DC7G`.
   * </pre>
   *
   * <code>optional string photo = 9;</code>
   * @return Whether the photo field is set.
   */
  @java.lang.Override
  public boolean hasPhoto() {
    return ((bitField0_ & 0x00000020) != 0);
  }
  /**
   * <pre>
   * The file resource name for the user photo. It must have the
   * format of
   * `installations/surelock-homes-hq/files/01DSYSJ1PR36VVC3MRFRV4DC7G`.
   * </pre>
   *
   * <code>optional string photo = 9;</code>
   * @return The photo.
   */
  @java.lang.Override
  public java.lang.String getPhoto() {
    return photo_;
  }
  /**
   * <pre>
   * The file resource name for the user photo. It must have the
   * format of
   * `installations/surelock-homes-hq/files/01DSYSJ1PR36VVC3MRFRV4DC7G`.
   * </pre>
   *
   * <code>optional string photo = 9;</code>
   * @return The bytes for photo.
   */
  @java.lang.Override
  public com.google.protobuf.ByteString
      getPhotoBytes() {
    return com.google.protobuf.ByteString.copyFromUtf8(photo_);
  }
  /**
   * <pre>
   * The file resource name for the user photo. It must have the
   * format of
   * `installations/surelock-homes-hq/files/01DSYSJ1PR36VVC3MRFRV4DC7G`.
   * </pre>
   *
   * <code>optional string photo = 9;</code>
   * @param value The photo to set.
   */
  private void setPhoto(
      java.lang.String value) {
    java.lang.Class<?> valueClass = value.getClass();
  bitField0_ |= 0x00000020;
    photo_ = value;
  }
  /**
   * <pre>
   * The file resource name for the user photo. It must have the
   * format of
   * `installations/surelock-homes-hq/files/01DSYSJ1PR36VVC3MRFRV4DC7G`.
   * </pre>
   *
   * <code>optional string photo = 9;</code>
   */
  private void clearPhoto() {
    bitField0_ = (bitField0_ & ~0x00000020);
    photo_ = getDefaultInstance().getPhoto();
  }
  /**
   * <pre>
   * The file resource name for the user photo. It must have the
   * format of
   * `installations/surelock-homes-hq/files/01DSYSJ1PR36VVC3MRFRV4DC7G`.
   * </pre>
   *
   * <code>optional string photo = 9;</code>
   * @param value The bytes for photo to set.
   */
  private void setPhotoBytes(
      com.google.protobuf.ByteString value) {
    checkByteStringIsUtf8(value);
    photo_ = value.toStringUtf8();
    bitField0_ |= 0x00000020;
  }

  public static final int PHOTO_URI_FIELD_NUMBER = 10;
  private java.lang.String photoUri_;
  /**
   * <pre>
   * The URI to view the user photo.
   * </pre>
   *
   * <code>string photo_uri = 10;</code>
   * @return The photoUri.
   */
  @java.lang.Override
  public java.lang.String getPhotoUri() {
    return photoUri_;
  }
  /**
   * <pre>
   * The URI to view the user photo.
   * </pre>
   *
   * <code>string photo_uri = 10;</code>
   * @return The bytes for photoUri.
   */
  @java.lang.Override
  public com.google.protobuf.ByteString
      getPhotoUriBytes() {
    return com.google.protobuf.ByteString.copyFromUtf8(photoUri_);
  }
  /**
   * <pre>
   * The URI to view the user photo.
   * </pre>
   *
   * <code>string photo_uri = 10;</code>
   * @param value The photoUri to set.
   */
  private void setPhotoUri(
      java.lang.String value) {
    java.lang.Class<?> valueClass = value.getClass();
  
    photoUri_ = value;
  }
  /**
   * <pre>
   * The URI to view the user photo.
   * </pre>
   *
   * <code>string photo_uri = 10;</code>
   */
  private void clearPhotoUri() {

    photoUri_ = getDefaultInstance().getPhotoUri();
  }
  /**
   * <pre>
   * The URI to view the user photo.
   * </pre>
   *
   * <code>string photo_uri = 10;</code>
   * @param value The bytes for photoUri to set.
   */
  private void setPhotoUriBytes(
      com.google.protobuf.ByteString value) {
    checkByteStringIsUtf8(value);
    photoUri_ = value.toStringUtf8();

  }

  public static final int CARD_KEY_FIELD_NUMBER = 11;
  private com.saltoapis.nebula.user.v1.CardKey cardKey_;
  /**
   * <pre>
   * The card key resource that belongs to the user.
   * </pre>
   *
   * <code>.salto.nebula.user.v1.CardKey card_key = 11;</code>
   */
  @java.lang.Override
  public boolean hasCardKey() {
    return ((bitField0_ & 0x00000040) != 0);
  }
  /**
   * <pre>
   * The card key resource that belongs to the user.
   * </pre>
   *
   * <code>.salto.nebula.user.v1.CardKey card_key = 11;</code>
   */
  @java.lang.Override
  public com.saltoapis.nebula.user.v1.CardKey getCardKey() {
    return cardKey_ == null ? com.saltoapis.nebula.user.v1.CardKey.getDefaultInstance() : cardKey_;
  }
  /**
   * <pre>
   * The card key resource that belongs to the user.
   * </pre>
   *
   * <code>.salto.nebula.user.v1.CardKey card_key = 11;</code>
   */
  private void setCardKey(com.saltoapis.nebula.user.v1.CardKey value) {
    value.getClass();
  cardKey_ = value;
    bitField0_ |= 0x00000040;
    }
  /**
   * <pre>
   * The card key resource that belongs to the user.
   * </pre>
   *
   * <code>.salto.nebula.user.v1.CardKey card_key = 11;</code>
   */
  @java.lang.SuppressWarnings({"ReferenceEquality"})
  private void mergeCardKey(com.saltoapis.nebula.user.v1.CardKey value) {
    value.getClass();
  if (cardKey_ != null &&
        cardKey_ != com.saltoapis.nebula.user.v1.CardKey.getDefaultInstance()) {
      cardKey_ =
        com.saltoapis.nebula.user.v1.CardKey.newBuilder(cardKey_).mergeFrom(value).buildPartial();
    } else {
      cardKey_ = value;
    }
    bitField0_ |= 0x00000040;
  }
  /**
   * <pre>
   * The card key resource that belongs to the user.
   * </pre>
   *
   * <code>.salto.nebula.user.v1.CardKey card_key = 11;</code>
   */
  private void clearCardKey() {  cardKey_ = null;
    bitField0_ = (bitField0_ & ~0x00000040);
  }

  public static final int APP_KEY_FIELD_NUMBER = 12;
  private com.saltoapis.nebula.user.v1.AppKey appKey_;
  /**
   * <pre>
   * The app key resource that belongs to the user.
   * </pre>
   *
   * <code>.salto.nebula.user.v1.AppKey app_key = 12;</code>
   */
  @java.lang.Override
  public boolean hasAppKey() {
    return ((bitField0_ & 0x00000080) != 0);
  }
  /**
   * <pre>
   * The app key resource that belongs to the user.
   * </pre>
   *
   * <code>.salto.nebula.user.v1.AppKey app_key = 12;</code>
   */
  @java.lang.Override
  public com.saltoapis.nebula.user.v1.AppKey getAppKey() {
    return appKey_ == null ? com.saltoapis.nebula.user.v1.AppKey.getDefaultInstance() : appKey_;
  }
  /**
   * <pre>
   * The app key resource that belongs to the user.
   * </pre>
   *
   * <code>.salto.nebula.user.v1.AppKey app_key = 12;</code>
   */
  private void setAppKey(com.saltoapis.nebula.user.v1.AppKey value) {
    value.getClass();
  appKey_ = value;
    bitField0_ |= 0x00000080;
    }
  /**
   * <pre>
   * The app key resource that belongs to the user.
   * </pre>
   *
   * <code>.salto.nebula.user.v1.AppKey app_key = 12;</code>
   */
  @java.lang.SuppressWarnings({"ReferenceEquality"})
  private void mergeAppKey(com.saltoapis.nebula.user.v1.AppKey value) {
    value.getClass();
  if (appKey_ != null &&
        appKey_ != com.saltoapis.nebula.user.v1.AppKey.getDefaultInstance()) {
      appKey_ =
        com.saltoapis.nebula.user.v1.AppKey.newBuilder(appKey_).mergeFrom(value).buildPartial();
    } else {
      appKey_ = value;
    }
    bitField0_ |= 0x00000080;
  }
  /**
   * <pre>
   * The app key resource that belongs to the user.
   * </pre>
   *
   * <code>.salto.nebula.user.v1.AppKey app_key = 12;</code>
   */
  private void clearAppKey() {  appKey_ = null;
    bitField0_ = (bitField0_ & ~0x00000080);
  }

  public static final int WALLET_KEY_FIELD_NUMBER = 13;
  private com.saltoapis.nebula.user.v1.WalletKey walletKey_;
  /**
   * <pre>
   * The wallet key resource that belongs to the user.
   * </pre>
   *
   * <code>.salto.nebula.user.v1.WalletKey wallet_key = 13;</code>
   */
  @java.lang.Override
  public boolean hasWalletKey() {
    return ((bitField0_ & 0x00000100) != 0);
  }
  /**
   * <pre>
   * The wallet key resource that belongs to the user.
   * </pre>
   *
   * <code>.salto.nebula.user.v1.WalletKey wallet_key = 13;</code>
   */
  @java.lang.Override
  public com.saltoapis.nebula.user.v1.WalletKey getWalletKey() {
    return walletKey_ == null ? com.saltoapis.nebula.user.v1.WalletKey.getDefaultInstance() : walletKey_;
  }
  /**
   * <pre>
   * The wallet key resource that belongs to the user.
   * </pre>
   *
   * <code>.salto.nebula.user.v1.WalletKey wallet_key = 13;</code>
   */
  private void setWalletKey(com.saltoapis.nebula.user.v1.WalletKey value) {
    value.getClass();
  walletKey_ = value;
    bitField0_ |= 0x00000100;
    }
  /**
   * <pre>
   * The wallet key resource that belongs to the user.
   * </pre>
   *
   * <code>.salto.nebula.user.v1.WalletKey wallet_key = 13;</code>
   */
  @java.lang.SuppressWarnings({"ReferenceEquality"})
  private void mergeWalletKey(com.saltoapis.nebula.user.v1.WalletKey value) {
    value.getClass();
  if (walletKey_ != null &&
        walletKey_ != com.saltoapis.nebula.user.v1.WalletKey.getDefaultInstance()) {
      walletKey_ =
        com.saltoapis.nebula.user.v1.WalletKey.newBuilder(walletKey_).mergeFrom(value).buildPartial();
    } else {
      walletKey_ = value;
    }
    bitField0_ |= 0x00000100;
  }
  /**
   * <pre>
   * The wallet key resource that belongs to the user.
   * </pre>
   *
   * <code>.salto.nebula.user.v1.WalletKey wallet_key = 13;</code>
   */
  private void clearWalletKey() {  walletKey_ = null;
    bitField0_ = (bitField0_ & ~0x00000100);
  }

  public static final int PASSCODE_FIELD_NUMBER = 15;
  private com.saltoapis.nebula.user.v1.Passcode passcode_;
  /**
   * <pre>
   * The passcode resource that belongs to the user.
   * </pre>
   *
   * <code>.salto.nebula.user.v1.Passcode passcode = 15;</code>
   */
  @java.lang.Override
  public boolean hasPasscode() {
    return ((bitField0_ & 0x00000200) != 0);
  }
  /**
   * <pre>
   * The passcode resource that belongs to the user.
   * </pre>
   *
   * <code>.salto.nebula.user.v1.Passcode passcode = 15;</code>
   */
  @java.lang.Override
  public com.saltoapis.nebula.user.v1.Passcode getPasscode() {
    return passcode_ == null ? com.saltoapis.nebula.user.v1.Passcode.getDefaultInstance() : passcode_;
  }
  /**
   * <pre>
   * The passcode resource that belongs to the user.
   * </pre>
   *
   * <code>.salto.nebula.user.v1.Passcode passcode = 15;</code>
   */
  private void setPasscode(com.saltoapis.nebula.user.v1.Passcode value) {
    value.getClass();
  passcode_ = value;
    bitField0_ |= 0x00000200;
    }
  /**
   * <pre>
   * The passcode resource that belongs to the user.
   * </pre>
   *
   * <code>.salto.nebula.user.v1.Passcode passcode = 15;</code>
   */
  @java.lang.SuppressWarnings({"ReferenceEquality"})
  private void mergePasscode(com.saltoapis.nebula.user.v1.Passcode value) {
    value.getClass();
  if (passcode_ != null &&
        passcode_ != com.saltoapis.nebula.user.v1.Passcode.getDefaultInstance()) {
      passcode_ =
        com.saltoapis.nebula.user.v1.Passcode.newBuilder(passcode_).mergeFrom(value).buildPartial();
    } else {
      passcode_ = value;
    }
    bitField0_ |= 0x00000200;
  }
  /**
   * <pre>
   * The passcode resource that belongs to the user.
   * </pre>
   *
   * <code>.salto.nebula.user.v1.Passcode passcode = 15;</code>
   */
  private void clearPasscode() {  passcode_ = null;
    bitField0_ = (bitField0_ & ~0x00000200);
  }

  public static final int BLOCKED_FIELD_NUMBER = 14;
  private boolean blocked_;
  /**
   * <pre>
   * Indicates whether this user is blocked or not. A blocked user cannot
   * perform any admin actions, that is, if they have a management role this
   * will no longer be valid. If the user has a key then it will no longer
   * unlock access points.
   * </pre>
   *
   * <code>bool blocked = 14;</code>
   * @return The blocked.
   */
  @java.lang.Override
  public boolean getBlocked() {
    return blocked_;
  }
  /**
   * <pre>
   * Indicates whether this user is blocked or not. A blocked user cannot
   * perform any admin actions, that is, if they have a management role this
   * will no longer be valid. If the user has a key then it will no longer
   * unlock access points.
   * </pre>
   *
   * <code>bool blocked = 14;</code>
   * @param value The blocked to set.
   */
  private void setBlocked(boolean value) {
    
    blocked_ = value;
  }
  /**
   * <pre>
   * Indicates whether this user is blocked or not. A blocked user cannot
   * perform any admin actions, that is, if they have a management role this
   * will no longer be valid. If the user has a key then it will no longer
   * unlock access points.
   * </pre>
   *
   * <code>bool blocked = 14;</code>
   */
  private void clearBlocked() {

    blocked_ = false;
  }

  public static com.saltoapis.nebula.user.v1.User parseFrom(
      java.nio.ByteBuffer data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return com.google.protobuf.GeneratedMessageLite.parseFrom(
        DEFAULT_INSTANCE, data);
  }
  public static com.saltoapis.nebula.user.v1.User parseFrom(
      java.nio.ByteBuffer data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return com.google.protobuf.GeneratedMessageLite.parseFrom(
        DEFAULT_INSTANCE, data, extensionRegistry);
  }
  public static com.saltoapis.nebula.user.v1.User parseFrom(
      com.google.protobuf.ByteString data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return com.google.protobuf.GeneratedMessageLite.parseFrom(
        DEFAULT_INSTANCE, data);
  }
  public static com.saltoapis.nebula.user.v1.User parseFrom(
      com.google.protobuf.ByteString data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return com.google.protobuf.GeneratedMessageLite.parseFrom(
        DEFAULT_INSTANCE, data, extensionRegistry);
  }
  public static com.saltoapis.nebula.user.v1.User parseFrom(byte[] data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return com.google.protobuf.GeneratedMessageLite.parseFrom(
        DEFAULT_INSTANCE, data);
  }
  public static com.saltoapis.nebula.user.v1.User parseFrom(
      byte[] data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return com.google.protobuf.GeneratedMessageLite.parseFrom(
        DEFAULT_INSTANCE, data, extensionRegistry);
  }
  public static com.saltoapis.nebula.user.v1.User parseFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageLite.parseFrom(
        DEFAULT_INSTANCE, input);
  }
  public static com.saltoapis.nebula.user.v1.User parseFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageLite.parseFrom(
        DEFAULT_INSTANCE, input, extensionRegistry);
  }

  public static com.saltoapis.nebula.user.v1.User parseDelimitedFrom(java.io.InputStream input)
      throws java.io.IOException {
    return parseDelimitedFrom(DEFAULT_INSTANCE, input);
  }

  public static com.saltoapis.nebula.user.v1.User parseDelimitedFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return parseDelimitedFrom(DEFAULT_INSTANCE, input, extensionRegistry);
  }
  public static com.saltoapis.nebula.user.v1.User parseFrom(
      com.google.protobuf.CodedInputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageLite.parseFrom(
        DEFAULT_INSTANCE, input);
  }
  public static com.saltoapis.nebula.user.v1.User parseFrom(
      com.google.protobuf.CodedInputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageLite.parseFrom(
        DEFAULT_INSTANCE, input, extensionRegistry);
  }

  public static Builder newBuilder() {
    return (Builder) DEFAULT_INSTANCE.createBuilder();
  }
  public static Builder newBuilder(com.saltoapis.nebula.user.v1.User prototype) {
    return DEFAULT_INSTANCE.createBuilder(prototype);
  }

  /**
   * <pre>
   * The user object
   * </pre>
   *
   * Protobuf type {@code salto.nebula.user.v1.User}
   */
  public static final class Builder extends
      com.google.protobuf.GeneratedMessageLite.Builder<
        com.saltoapis.nebula.user.v1.User, Builder> implements
      // @@protoc_insertion_point(builder_implements:salto.nebula.user.v1.User)
      com.saltoapis.nebula.user.v1.UserOrBuilder {
    // Construct using com.saltoapis.nebula.user.v1.User.newBuilder()
    private Builder() {
      super(DEFAULT_INSTANCE);
    }


    /**
     * <pre>
     * Resource name of the user. It must have the format of
     * `installations/&#42;&#47;users/&#42;`. For example:
     * `installations/surelock-homes-hq/users/john-watson`.
     * </pre>
     *
     * <code>string name = 1;</code>
     * @return The name.
     */
    @java.lang.Override
    public java.lang.String getName() {
      return instance.getName();
    }
    /**
     * <pre>
     * Resource name of the user. It must have the format of
     * `installations/&#42;&#47;users/&#42;`. For example:
     * `installations/surelock-homes-hq/users/john-watson`.
     * </pre>
     *
     * <code>string name = 1;</code>
     * @return The bytes for name.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString
        getNameBytes() {
      return instance.getNameBytes();
    }
    /**
     * <pre>
     * Resource name of the user. It must have the format of
     * `installations/&#42;&#47;users/&#42;`. For example:
     * `installations/surelock-homes-hq/users/john-watson`.
     * </pre>
     *
     * <code>string name = 1;</code>
     * @param value The name to set.
     * @return This builder for chaining.
     */
    public Builder setName(
        java.lang.String value) {
      copyOnWrite();
      instance.setName(value);
      return this;
    }
    /**
     * <pre>
     * Resource name of the user. It must have the format of
     * `installations/&#42;&#47;users/&#42;`. For example:
     * `installations/surelock-homes-hq/users/john-watson`.
     * </pre>
     *
     * <code>string name = 1;</code>
     * @return This builder for chaining.
     */
    public Builder clearName() {
      copyOnWrite();
      instance.clearName();
      return this;
    }
    /**
     * <pre>
     * Resource name of the user. It must have the format of
     * `installations/&#42;&#47;users/&#42;`. For example:
     * `installations/surelock-homes-hq/users/john-watson`.
     * </pre>
     *
     * <code>string name = 1;</code>
     * @param value The bytes for name to set.
     * @return This builder for chaining.
     */
    public Builder setNameBytes(
        com.google.protobuf.ByteString value) {
      copyOnWrite();
      instance.setNameBytes(value);
      return this;
    }

    /**
     * <pre>
     * The name of the parent user of this user.
     * Only users who have had keys shared with them will have this field set.
     * </pre>
     *
     * <code>optional string parent = 2;</code>
     * @return Whether the parent field is set.
     */
    @java.lang.Override
    public boolean hasParent() {
      return instance.hasParent();
    }
    /**
     * <pre>
     * The name of the parent user of this user.
     * Only users who have had keys shared with them will have this field set.
     * </pre>
     *
     * <code>optional string parent = 2;</code>
     * @return The parent.
     */
    @java.lang.Override
    public java.lang.String getParent() {
      return instance.getParent();
    }
    /**
     * <pre>
     * The name of the parent user of this user.
     * Only users who have had keys shared with them will have this field set.
     * </pre>
     *
     * <code>optional string parent = 2;</code>
     * @return The bytes for parent.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString
        getParentBytes() {
      return instance.getParentBytes();
    }
    /**
     * <pre>
     * The name of the parent user of this user.
     * Only users who have had keys shared with them will have this field set.
     * </pre>
     *
     * <code>optional string parent = 2;</code>
     * @param value The parent to set.
     * @return This builder for chaining.
     */
    public Builder setParent(
        java.lang.String value) {
      copyOnWrite();
      instance.setParent(value);
      return this;
    }
    /**
     * <pre>
     * The name of the parent user of this user.
     * Only users who have had keys shared with them will have this field set.
     * </pre>
     *
     * <code>optional string parent = 2;</code>
     * @return This builder for chaining.
     */
    public Builder clearParent() {
      copyOnWrite();
      instance.clearParent();
      return this;
    }
    /**
     * <pre>
     * The name of the parent user of this user.
     * Only users who have had keys shared with them will have this field set.
     * </pre>
     *
     * <code>optional string parent = 2;</code>
     * @param value The bytes for parent to set.
     * @return This builder for chaining.
     */
    public Builder setParentBytes(
        com.google.protobuf.ByteString value) {
      copyOnWrite();
      instance.setParentBytes(value);
      return this;
    }

    /**
     * <pre>
     * The personal name, forename or given name ("first name"). It could
     * also contain a middle name. First name is not used because the given
     * name is not placed first in some cultures.
     * </pre>
     *
     * <code>string given_name = 3;</code>
     * @return The givenName.
     */
    @java.lang.Override
    public java.lang.String getGivenName() {
      return instance.getGivenName();
    }
    /**
     * <pre>
     * The personal name, forename or given name ("first name"). It could
     * also contain a middle name. First name is not used because the given
     * name is not placed first in some cultures.
     * </pre>
     *
     * <code>string given_name = 3;</code>
     * @return The bytes for givenName.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString
        getGivenNameBytes() {
      return instance.getGivenNameBytes();
    }
    /**
     * <pre>
     * The personal name, forename or given name ("first name"). It could
     * also contain a middle name. First name is not used because the given
     * name is not placed first in some cultures.
     * </pre>
     *
     * <code>string given_name = 3;</code>
     * @param value The givenName to set.
     * @return This builder for chaining.
     */
    public Builder setGivenName(
        java.lang.String value) {
      copyOnWrite();
      instance.setGivenName(value);
      return this;
    }
    /**
     * <pre>
     * The personal name, forename or given name ("first name"). It could
     * also contain a middle name. First name is not used because the given
     * name is not placed first in some cultures.
     * </pre>
     *
     * <code>string given_name = 3;</code>
     * @return This builder for chaining.
     */
    public Builder clearGivenName() {
      copyOnWrite();
      instance.clearGivenName();
      return this;
    }
    /**
     * <pre>
     * The personal name, forename or given name ("first name"). It could
     * also contain a middle name. First name is not used because the given
     * name is not placed first in some cultures.
     * </pre>
     *
     * <code>string given_name = 3;</code>
     * @param value The bytes for givenName to set.
     * @return This builder for chaining.
     */
    public Builder setGivenNameBytes(
        com.google.protobuf.ByteString value) {
      copyOnWrite();
      instance.setGivenNameBytes(value);
      return this;
    }

    /**
     * <pre>
     * The surname or family name ("last name"). It could also contain more than
     * one surname so that both matrilineal and patrilineal surnames can be
     * included in one place. Last name is not used because the family name is
     * not placed last in some cultures.
     * </pre>
     *
     * <code>optional string family_name = 4;</code>
     * @return Whether the familyName field is set.
     */
    @java.lang.Override
    public boolean hasFamilyName() {
      return instance.hasFamilyName();
    }
    /**
     * <pre>
     * The surname or family name ("last name"). It could also contain more than
     * one surname so that both matrilineal and patrilineal surnames can be
     * included in one place. Last name is not used because the family name is
     * not placed last in some cultures.
     * </pre>
     *
     * <code>optional string family_name = 4;</code>
     * @return The familyName.
     */
    @java.lang.Override
    public java.lang.String getFamilyName() {
      return instance.getFamilyName();
    }
    /**
     * <pre>
     * The surname or family name ("last name"). It could also contain more than
     * one surname so that both matrilineal and patrilineal surnames can be
     * included in one place. Last name is not used because the family name is
     * not placed last in some cultures.
     * </pre>
     *
     * <code>optional string family_name = 4;</code>
     * @return The bytes for familyName.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString
        getFamilyNameBytes() {
      return instance.getFamilyNameBytes();
    }
    /**
     * <pre>
     * The surname or family name ("last name"). It could also contain more than
     * one surname so that both matrilineal and patrilineal surnames can be
     * included in one place. Last name is not used because the family name is
     * not placed last in some cultures.
     * </pre>
     *
     * <code>optional string family_name = 4;</code>
     * @param value The familyName to set.
     * @return This builder for chaining.
     */
    public Builder setFamilyName(
        java.lang.String value) {
      copyOnWrite();
      instance.setFamilyName(value);
      return this;
    }
    /**
     * <pre>
     * The surname or family name ("last name"). It could also contain more than
     * one surname so that both matrilineal and patrilineal surnames can be
     * included in one place. Last name is not used because the family name is
     * not placed last in some cultures.
     * </pre>
     *
     * <code>optional string family_name = 4;</code>
     * @return This builder for chaining.
     */
    public Builder clearFamilyName() {
      copyOnWrite();
      instance.clearFamilyName();
      return this;
    }
    /**
     * <pre>
     * The surname or family name ("last name"). It could also contain more than
     * one surname so that both matrilineal and patrilineal surnames can be
     * included in one place. Last name is not used because the family name is
     * not placed last in some cultures.
     * </pre>
     *
     * <code>optional string family_name = 4;</code>
     * @param value The bytes for familyName to set.
     * @return This builder for chaining.
     */
    public Builder setFamilyNameBytes(
        com.google.protobuf.ByteString value) {
      copyOnWrite();
      instance.setFamilyNameBytes(value);
      return this;
    }

    /**
     * <pre>
     * The display name of the user, formed by concatenating the first and last
     * name values.
     * </pre>
     *
     * <code>string display_name = 5;</code>
     * @return The displayName.
     */
    @java.lang.Override
    public java.lang.String getDisplayName() {
      return instance.getDisplayName();
    }
    /**
     * <pre>
     * The display name of the user, formed by concatenating the first and last
     * name values.
     * </pre>
     *
     * <code>string display_name = 5;</code>
     * @return The bytes for displayName.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString
        getDisplayNameBytes() {
      return instance.getDisplayNameBytes();
    }
    /**
     * <pre>
     * The display name of the user, formed by concatenating the first and last
     * name values.
     * </pre>
     *
     * <code>string display_name = 5;</code>
     * @param value The displayName to set.
     * @return This builder for chaining.
     */
    public Builder setDisplayName(
        java.lang.String value) {
      copyOnWrite();
      instance.setDisplayName(value);
      return this;
    }
    /**
     * <pre>
     * The display name of the user, formed by concatenating the first and last
     * name values.
     * </pre>
     *
     * <code>string display_name = 5;</code>
     * @return This builder for chaining.
     */
    public Builder clearDisplayName() {
      copyOnWrite();
      instance.clearDisplayName();
      return this;
    }
    /**
     * <pre>
     * The display name of the user, formed by concatenating the first and last
     * name values.
     * </pre>
     *
     * <code>string display_name = 5;</code>
     * @param value The bytes for displayName to set.
     * @return This builder for chaining.
     */
    public Builder setDisplayNameBytes(
        com.google.protobuf.ByteString value) {
      copyOnWrite();
      instance.setDisplayNameBytes(value);
      return this;
    }

    /**
     * <pre>
     * Email address.
     * </pre>
     *
     * <code>optional string email = 6;</code>
     * @return Whether the email field is set.
     */
    @java.lang.Override
    public boolean hasEmail() {
      return instance.hasEmail();
    }
    /**
     * <pre>
     * Email address.
     * </pre>
     *
     * <code>optional string email = 6;</code>
     * @return The email.
     */
    @java.lang.Override
    public java.lang.String getEmail() {
      return instance.getEmail();
    }
    /**
     * <pre>
     * Email address.
     * </pre>
     *
     * <code>optional string email = 6;</code>
     * @return The bytes for email.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString
        getEmailBytes() {
      return instance.getEmailBytes();
    }
    /**
     * <pre>
     * Email address.
     * </pre>
     *
     * <code>optional string email = 6;</code>
     * @param value The email to set.
     * @return This builder for chaining.
     */
    public Builder setEmail(
        java.lang.String value) {
      copyOnWrite();
      instance.setEmail(value);
      return this;
    }
    /**
     * <pre>
     * Email address.
     * </pre>
     *
     * <code>optional string email = 6;</code>
     * @return This builder for chaining.
     */
    public Builder clearEmail() {
      copyOnWrite();
      instance.clearEmail();
      return this;
    }
    /**
     * <pre>
     * Email address.
     * </pre>
     *
     * <code>optional string email = 6;</code>
     * @param value The bytes for email to set.
     * @return This builder for chaining.
     */
    public Builder setEmailBytes(
        com.google.protobuf.ByteString value) {
      copyOnWrite();
      instance.setEmailBytes(value);
      return this;
    }

    /**
     * <pre>
     * Activation time independent of any time zone or calendar.
     * </pre>
     *
     * <code>.google.protobuf.Timestamp activate_time = 7;</code>
     */
    @java.lang.Override
    public boolean hasActivateTime() {
      return instance.hasActivateTime();
    }
    /**
     * <pre>
     * Activation time independent of any time zone or calendar.
     * </pre>
     *
     * <code>.google.protobuf.Timestamp activate_time = 7;</code>
     */
    @java.lang.Override
    public com.google.protobuf.Timestamp getActivateTime() {
      return instance.getActivateTime();
    }
    /**
     * <pre>
     * Activation time independent of any time zone or calendar.
     * </pre>
     *
     * <code>.google.protobuf.Timestamp activate_time = 7;</code>
     */
    public Builder setActivateTime(com.google.protobuf.Timestamp value) {
      copyOnWrite();
      instance.setActivateTime(value);
      return this;
      }
    /**
     * <pre>
     * Activation time independent of any time zone or calendar.
     * </pre>
     *
     * <code>.google.protobuf.Timestamp activate_time = 7;</code>
     */
    public Builder setActivateTime(
        com.google.protobuf.Timestamp.Builder builderForValue) {
      copyOnWrite();
      instance.setActivateTime(builderForValue.build());
      return this;
    }
    /**
     * <pre>
     * Activation time independent of any time zone or calendar.
     * </pre>
     *
     * <code>.google.protobuf.Timestamp activate_time = 7;</code>
     */
    public Builder mergeActivateTime(com.google.protobuf.Timestamp value) {
      copyOnWrite();
      instance.mergeActivateTime(value);
      return this;
    }
    /**
     * <pre>
     * Activation time independent of any time zone or calendar.
     * </pre>
     *
     * <code>.google.protobuf.Timestamp activate_time = 7;</code>
     */
    public Builder clearActivateTime() {  copyOnWrite();
      instance.clearActivateTime();
      return this;
    }

    /**
     * <pre>
     * Expiration time independent of any time zone or calendar.
     * </pre>
     *
     * <code>.google.protobuf.Timestamp expire_time = 8;</code>
     */
    @java.lang.Override
    public boolean hasExpireTime() {
      return instance.hasExpireTime();
    }
    /**
     * <pre>
     * Expiration time independent of any time zone or calendar.
     * </pre>
     *
     * <code>.google.protobuf.Timestamp expire_time = 8;</code>
     */
    @java.lang.Override
    public com.google.protobuf.Timestamp getExpireTime() {
      return instance.getExpireTime();
    }
    /**
     * <pre>
     * Expiration time independent of any time zone or calendar.
     * </pre>
     *
     * <code>.google.protobuf.Timestamp expire_time = 8;</code>
     */
    public Builder setExpireTime(com.google.protobuf.Timestamp value) {
      copyOnWrite();
      instance.setExpireTime(value);
      return this;
      }
    /**
     * <pre>
     * Expiration time independent of any time zone or calendar.
     * </pre>
     *
     * <code>.google.protobuf.Timestamp expire_time = 8;</code>
     */
    public Builder setExpireTime(
        com.google.protobuf.Timestamp.Builder builderForValue) {
      copyOnWrite();
      instance.setExpireTime(builderForValue.build());
      return this;
    }
    /**
     * <pre>
     * Expiration time independent of any time zone or calendar.
     * </pre>
     *
     * <code>.google.protobuf.Timestamp expire_time = 8;</code>
     */
    public Builder mergeExpireTime(com.google.protobuf.Timestamp value) {
      copyOnWrite();
      instance.mergeExpireTime(value);
      return this;
    }
    /**
     * <pre>
     * Expiration time independent of any time zone or calendar.
     * </pre>
     *
     * <code>.google.protobuf.Timestamp expire_time = 8;</code>
     */
    public Builder clearExpireTime() {  copyOnWrite();
      instance.clearExpireTime();
      return this;
    }

    /**
     * <pre>
     * The file resource name for the user photo. It must have the
     * format of
     * `installations/surelock-homes-hq/files/01DSYSJ1PR36VVC3MRFRV4DC7G`.
     * </pre>
     *
     * <code>optional string photo = 9;</code>
     * @return Whether the photo field is set.
     */
    @java.lang.Override
    public boolean hasPhoto() {
      return instance.hasPhoto();
    }
    /**
     * <pre>
     * The file resource name for the user photo. It must have the
     * format of
     * `installations/surelock-homes-hq/files/01DSYSJ1PR36VVC3MRFRV4DC7G`.
     * </pre>
     *
     * <code>optional string photo = 9;</code>
     * @return The photo.
     */
    @java.lang.Override
    public java.lang.String getPhoto() {
      return instance.getPhoto();
    }
    /**
     * <pre>
     * The file resource name for the user photo. It must have the
     * format of
     * `installations/surelock-homes-hq/files/01DSYSJ1PR36VVC3MRFRV4DC7G`.
     * </pre>
     *
     * <code>optional string photo = 9;</code>
     * @return The bytes for photo.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString
        getPhotoBytes() {
      return instance.getPhotoBytes();
    }
    /**
     * <pre>
     * The file resource name for the user photo. It must have the
     * format of
     * `installations/surelock-homes-hq/files/01DSYSJ1PR36VVC3MRFRV4DC7G`.
     * </pre>
     *
     * <code>optional string photo = 9;</code>
     * @param value The photo to set.
     * @return This builder for chaining.
     */
    public Builder setPhoto(
        java.lang.String value) {
      copyOnWrite();
      instance.setPhoto(value);
      return this;
    }
    /**
     * <pre>
     * The file resource name for the user photo. It must have the
     * format of
     * `installations/surelock-homes-hq/files/01DSYSJ1PR36VVC3MRFRV4DC7G`.
     * </pre>
     *
     * <code>optional string photo = 9;</code>
     * @return This builder for chaining.
     */
    public Builder clearPhoto() {
      copyOnWrite();
      instance.clearPhoto();
      return this;
    }
    /**
     * <pre>
     * The file resource name for the user photo. It must have the
     * format of
     * `installations/surelock-homes-hq/files/01DSYSJ1PR36VVC3MRFRV4DC7G`.
     * </pre>
     *
     * <code>optional string photo = 9;</code>
     * @param value The bytes for photo to set.
     * @return This builder for chaining.
     */
    public Builder setPhotoBytes(
        com.google.protobuf.ByteString value) {
      copyOnWrite();
      instance.setPhotoBytes(value);
      return this;
    }

    /**
     * <pre>
     * The URI to view the user photo.
     * </pre>
     *
     * <code>string photo_uri = 10;</code>
     * @return The photoUri.
     */
    @java.lang.Override
    public java.lang.String getPhotoUri() {
      return instance.getPhotoUri();
    }
    /**
     * <pre>
     * The URI to view the user photo.
     * </pre>
     *
     * <code>string photo_uri = 10;</code>
     * @return The bytes for photoUri.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString
        getPhotoUriBytes() {
      return instance.getPhotoUriBytes();
    }
    /**
     * <pre>
     * The URI to view the user photo.
     * </pre>
     *
     * <code>string photo_uri = 10;</code>
     * @param value The photoUri to set.
     * @return This builder for chaining.
     */
    public Builder setPhotoUri(
        java.lang.String value) {
      copyOnWrite();
      instance.setPhotoUri(value);
      return this;
    }
    /**
     * <pre>
     * The URI to view the user photo.
     * </pre>
     *
     * <code>string photo_uri = 10;</code>
     * @return This builder for chaining.
     */
    public Builder clearPhotoUri() {
      copyOnWrite();
      instance.clearPhotoUri();
      return this;
    }
    /**
     * <pre>
     * The URI to view the user photo.
     * </pre>
     *
     * <code>string photo_uri = 10;</code>
     * @param value The bytes for photoUri to set.
     * @return This builder for chaining.
     */
    public Builder setPhotoUriBytes(
        com.google.protobuf.ByteString value) {
      copyOnWrite();
      instance.setPhotoUriBytes(value);
      return this;
    }

    /**
     * <pre>
     * The card key resource that belongs to the user.
     * </pre>
     *
     * <code>.salto.nebula.user.v1.CardKey card_key = 11;</code>
     */
    @java.lang.Override
    public boolean hasCardKey() {
      return instance.hasCardKey();
    }
    /**
     * <pre>
     * The card key resource that belongs to the user.
     * </pre>
     *
     * <code>.salto.nebula.user.v1.CardKey card_key = 11;</code>
     */
    @java.lang.Override
    public com.saltoapis.nebula.user.v1.CardKey getCardKey() {
      return instance.getCardKey();
    }
    /**
     * <pre>
     * The card key resource that belongs to the user.
     * </pre>
     *
     * <code>.salto.nebula.user.v1.CardKey card_key = 11;</code>
     */
    public Builder setCardKey(com.saltoapis.nebula.user.v1.CardKey value) {
      copyOnWrite();
      instance.setCardKey(value);
      return this;
      }
    /**
     * <pre>
     * The card key resource that belongs to the user.
     * </pre>
     *
     * <code>.salto.nebula.user.v1.CardKey card_key = 11;</code>
     */
    public Builder setCardKey(
        com.saltoapis.nebula.user.v1.CardKey.Builder builderForValue) {
      copyOnWrite();
      instance.setCardKey(builderForValue.build());
      return this;
    }
    /**
     * <pre>
     * The card key resource that belongs to the user.
     * </pre>
     *
     * <code>.salto.nebula.user.v1.CardKey card_key = 11;</code>
     */
    public Builder mergeCardKey(com.saltoapis.nebula.user.v1.CardKey value) {
      copyOnWrite();
      instance.mergeCardKey(value);
      return this;
    }
    /**
     * <pre>
     * The card key resource that belongs to the user.
     * </pre>
     *
     * <code>.salto.nebula.user.v1.CardKey card_key = 11;</code>
     */
    public Builder clearCardKey() {  copyOnWrite();
      instance.clearCardKey();
      return this;
    }

    /**
     * <pre>
     * The app key resource that belongs to the user.
     * </pre>
     *
     * <code>.salto.nebula.user.v1.AppKey app_key = 12;</code>
     */
    @java.lang.Override
    public boolean hasAppKey() {
      return instance.hasAppKey();
    }
    /**
     * <pre>
     * The app key resource that belongs to the user.
     * </pre>
     *
     * <code>.salto.nebula.user.v1.AppKey app_key = 12;</code>
     */
    @java.lang.Override
    public com.saltoapis.nebula.user.v1.AppKey getAppKey() {
      return instance.getAppKey();
    }
    /**
     * <pre>
     * The app key resource that belongs to the user.
     * </pre>
     *
     * <code>.salto.nebula.user.v1.AppKey app_key = 12;</code>
     */
    public Builder setAppKey(com.saltoapis.nebula.user.v1.AppKey value) {
      copyOnWrite();
      instance.setAppKey(value);
      return this;
      }
    /**
     * <pre>
     * The app key resource that belongs to the user.
     * </pre>
     *
     * <code>.salto.nebula.user.v1.AppKey app_key = 12;</code>
     */
    public Builder setAppKey(
        com.saltoapis.nebula.user.v1.AppKey.Builder builderForValue) {
      copyOnWrite();
      instance.setAppKey(builderForValue.build());
      return this;
    }
    /**
     * <pre>
     * The app key resource that belongs to the user.
     * </pre>
     *
     * <code>.salto.nebula.user.v1.AppKey app_key = 12;</code>
     */
    public Builder mergeAppKey(com.saltoapis.nebula.user.v1.AppKey value) {
      copyOnWrite();
      instance.mergeAppKey(value);
      return this;
    }
    /**
     * <pre>
     * The app key resource that belongs to the user.
     * </pre>
     *
     * <code>.salto.nebula.user.v1.AppKey app_key = 12;</code>
     */
    public Builder clearAppKey() {  copyOnWrite();
      instance.clearAppKey();
      return this;
    }

    /**
     * <pre>
     * The wallet key resource that belongs to the user.
     * </pre>
     *
     * <code>.salto.nebula.user.v1.WalletKey wallet_key = 13;</code>
     */
    @java.lang.Override
    public boolean hasWalletKey() {
      return instance.hasWalletKey();
    }
    /**
     * <pre>
     * The wallet key resource that belongs to the user.
     * </pre>
     *
     * <code>.salto.nebula.user.v1.WalletKey wallet_key = 13;</code>
     */
    @java.lang.Override
    public com.saltoapis.nebula.user.v1.WalletKey getWalletKey() {
      return instance.getWalletKey();
    }
    /**
     * <pre>
     * The wallet key resource that belongs to the user.
     * </pre>
     *
     * <code>.salto.nebula.user.v1.WalletKey wallet_key = 13;</code>
     */
    public Builder setWalletKey(com.saltoapis.nebula.user.v1.WalletKey value) {
      copyOnWrite();
      instance.setWalletKey(value);
      return this;
      }
    /**
     * <pre>
     * The wallet key resource that belongs to the user.
     * </pre>
     *
     * <code>.salto.nebula.user.v1.WalletKey wallet_key = 13;</code>
     */
    public Builder setWalletKey(
        com.saltoapis.nebula.user.v1.WalletKey.Builder builderForValue) {
      copyOnWrite();
      instance.setWalletKey(builderForValue.build());
      return this;
    }
    /**
     * <pre>
     * The wallet key resource that belongs to the user.
     * </pre>
     *
     * <code>.salto.nebula.user.v1.WalletKey wallet_key = 13;</code>
     */
    public Builder mergeWalletKey(com.saltoapis.nebula.user.v1.WalletKey value) {
      copyOnWrite();
      instance.mergeWalletKey(value);
      return this;
    }
    /**
     * <pre>
     * The wallet key resource that belongs to the user.
     * </pre>
     *
     * <code>.salto.nebula.user.v1.WalletKey wallet_key = 13;</code>
     */
    public Builder clearWalletKey() {  copyOnWrite();
      instance.clearWalletKey();
      return this;
    }

    /**
     * <pre>
     * The passcode resource that belongs to the user.
     * </pre>
     *
     * <code>.salto.nebula.user.v1.Passcode passcode = 15;</code>
     */
    @java.lang.Override
    public boolean hasPasscode() {
      return instance.hasPasscode();
    }
    /**
     * <pre>
     * The passcode resource that belongs to the user.
     * </pre>
     *
     * <code>.salto.nebula.user.v1.Passcode passcode = 15;</code>
     */
    @java.lang.Override
    public com.saltoapis.nebula.user.v1.Passcode getPasscode() {
      return instance.getPasscode();
    }
    /**
     * <pre>
     * The passcode resource that belongs to the user.
     * </pre>
     *
     * <code>.salto.nebula.user.v1.Passcode passcode = 15;</code>
     */
    public Builder setPasscode(com.saltoapis.nebula.user.v1.Passcode value) {
      copyOnWrite();
      instance.setPasscode(value);
      return this;
      }
    /**
     * <pre>
     * The passcode resource that belongs to the user.
     * </pre>
     *
     * <code>.salto.nebula.user.v1.Passcode passcode = 15;</code>
     */
    public Builder setPasscode(
        com.saltoapis.nebula.user.v1.Passcode.Builder builderForValue) {
      copyOnWrite();
      instance.setPasscode(builderForValue.build());
      return this;
    }
    /**
     * <pre>
     * The passcode resource that belongs to the user.
     * </pre>
     *
     * <code>.salto.nebula.user.v1.Passcode passcode = 15;</code>
     */
    public Builder mergePasscode(com.saltoapis.nebula.user.v1.Passcode value) {
      copyOnWrite();
      instance.mergePasscode(value);
      return this;
    }
    /**
     * <pre>
     * The passcode resource that belongs to the user.
     * </pre>
     *
     * <code>.salto.nebula.user.v1.Passcode passcode = 15;</code>
     */
    public Builder clearPasscode() {  copyOnWrite();
      instance.clearPasscode();
      return this;
    }

    /**
     * <pre>
     * Indicates whether this user is blocked or not. A blocked user cannot
     * perform any admin actions, that is, if they have a management role this
     * will no longer be valid. If the user has a key then it will no longer
     * unlock access points.
     * </pre>
     *
     * <code>bool blocked = 14;</code>
     * @return The blocked.
     */
    @java.lang.Override
    public boolean getBlocked() {
      return instance.getBlocked();
    }
    /**
     * <pre>
     * Indicates whether this user is blocked or not. A blocked user cannot
     * perform any admin actions, that is, if they have a management role this
     * will no longer be valid. If the user has a key then it will no longer
     * unlock access points.
     * </pre>
     *
     * <code>bool blocked = 14;</code>
     * @param value The blocked to set.
     * @return This builder for chaining.
     */
    public Builder setBlocked(boolean value) {
      copyOnWrite();
      instance.setBlocked(value);
      return this;
    }
    /**
     * <pre>
     * Indicates whether this user is blocked or not. A blocked user cannot
     * perform any admin actions, that is, if they have a management role this
     * will no longer be valid. If the user has a key then it will no longer
     * unlock access points.
     * </pre>
     *
     * <code>bool blocked = 14;</code>
     * @return This builder for chaining.
     */
    public Builder clearBlocked() {
      copyOnWrite();
      instance.clearBlocked();
      return this;
    }

    // @@protoc_insertion_point(builder_scope:salto.nebula.user.v1.User)
  }
  @java.lang.Override
  @java.lang.SuppressWarnings({"unchecked", "fallthrough"})
  protected final java.lang.Object dynamicMethod(
      com.google.protobuf.GeneratedMessageLite.MethodToInvoke method,
      java.lang.Object arg0, java.lang.Object arg1) {
    switch (method) {
      case NEW_MUTABLE_INSTANCE: {
        return new com.saltoapis.nebula.user.v1.User();
      }
      case NEW_BUILDER: {
        return new Builder();
      }
      case BUILD_MESSAGE_INFO: {
          java.lang.Object[] objects = new java.lang.Object[] {
            "bitField0_",
            "name_",
            "parent_",
            "givenName_",
            "familyName_",
            "displayName_",
            "email_",
            "activateTime_",
            "expireTime_",
            "photo_",
            "photoUri_",
            "cardKey_",
            "appKey_",
            "walletKey_",
            "blocked_",
            "passcode_",
          };
          java.lang.String info =
              "\u0000\u000f\u0000\u0001\u0001\u000f\u000f\u0000\u0000\u0000\u0001\u0208\u0002\u1208" +
              "\u0000\u0003\u0208\u0004\u1208\u0001\u0005\u0208\u0006\u1208\u0002\u0007\u1009\u0003" +
              "\b\u1009\u0004\t\u1208\u0005\n\u0208\u000b\u1009\u0006\f\u1009\u0007\r\u1009\b\u000e" +
              "\u0007\u000f\u1009\t";
          return newMessageInfo(DEFAULT_INSTANCE, info, objects);
      }
      // fall through
      case GET_DEFAULT_INSTANCE: {
        return DEFAULT_INSTANCE;
      }
      case GET_PARSER: {
        com.google.protobuf.Parser<com.saltoapis.nebula.user.v1.User> parser = PARSER;
        if (parser == null) {
          synchronized (com.saltoapis.nebula.user.v1.User.class) {
            parser = PARSER;
            if (parser == null) {
              parser =
                  new DefaultInstanceBasedParser<com.saltoapis.nebula.user.v1.User>(
                      DEFAULT_INSTANCE);
              PARSER = parser;
            }
          }
        }
        return parser;
    }
    case GET_MEMOIZED_IS_INITIALIZED: {
      return (byte) 1;
    }
    case SET_MEMOIZED_IS_INITIALIZED: {
      return null;
    }
    }
    throw new UnsupportedOperationException();
  }


  // @@protoc_insertion_point(class_scope:salto.nebula.user.v1.User)
  private static final com.saltoapis.nebula.user.v1.User DEFAULT_INSTANCE;
  static {
    User defaultInstance = new User();
    // New instances are implicitly immutable so no need to make
    // immutable.
    DEFAULT_INSTANCE = defaultInstance;
    com.google.protobuf.GeneratedMessageLite.registerDefaultInstance(
      User.class, defaultInstance);
  }

  public static com.saltoapis.nebula.user.v1.User getDefaultInstance() {
    return DEFAULT_INSTANCE;
  }

  private static volatile com.google.protobuf.Parser<User> PARSER;

  public static com.google.protobuf.Parser<User> parser() {
    return DEFAULT_INSTANCE.getParserForType();
  }
}

