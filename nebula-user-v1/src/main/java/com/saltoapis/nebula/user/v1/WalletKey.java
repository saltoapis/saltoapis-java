// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: salto/nebula/user/v1/user.proto

// Protobuf Java Version: 3.25.1
package com.saltoapis.nebula.user.v1;

/**
 * <pre>
 * Representation of a wallet key, belonging to a user
 * </pre>
 *
 * Protobuf type {@code salto.nebula.user.v1.WalletKey}
 */
public  final class WalletKey extends
    com.google.protobuf.GeneratedMessageLite<
        WalletKey, WalletKey.Builder> implements
    // @@protoc_insertion_point(message_implements:salto.nebula.user.v1.WalletKey)
    WalletKeyOrBuilder {
  private WalletKey() {
    name_ = "";
  }
  /**
   * <pre>
   * State for a wallet key.
   * </pre>
   *
   * Protobuf enum {@code salto.nebula.user.v1.WalletKey.State}
   */
  public enum State
      implements com.google.protobuf.Internal.EnumLite {
    /**
     * <pre>
     * Sentinel value used to indicate that the state is unknown, omitted,
     * or is not applicable.
     * </pre>
     *
     * <code>STATE_UNSPECIFIED = 0;</code>
     */
    STATE_UNSPECIFIED(0),
    /**
     * <pre>
     * The wallet key is not assigned.
     * </pre>
     *
     * <code>NOT_ASSIGNED = 1;</code>
     */
    NOT_ASSIGNED(1),
    /**
     * <pre>
     * The wallet key is pending activation.
     * </pre>
     *
     * <code>PENDING = 2;</code>
     */
    PENDING(2),
    /**
     * <pre>
     * The wallet key is active and ready to be used.
     * </pre>
     *
     * <code>ACTIVE = 3;</code>
     */
    ACTIVE(3),
    UNRECOGNIZED(-1),
    ;

    /**
     * <pre>
     * Sentinel value used to indicate that the state is unknown, omitted,
     * or is not applicable.
     * </pre>
     *
     * <code>STATE_UNSPECIFIED = 0;</code>
     */
    public static final int STATE_UNSPECIFIED_VALUE = 0;
    /**
     * <pre>
     * The wallet key is not assigned.
     * </pre>
     *
     * <code>NOT_ASSIGNED = 1;</code>
     */
    public static final int NOT_ASSIGNED_VALUE = 1;
    /**
     * <pre>
     * The wallet key is pending activation.
     * </pre>
     *
     * <code>PENDING = 2;</code>
     */
    public static final int PENDING_VALUE = 2;
    /**
     * <pre>
     * The wallet key is active and ready to be used.
     * </pre>
     *
     * <code>ACTIVE = 3;</code>
     */
    public static final int ACTIVE_VALUE = 3;


    @java.lang.Override
    public final int getNumber() {
      if (this == UNRECOGNIZED) {
        throw new java.lang.IllegalArgumentException(
            "Can't get the number of an unknown enum value.");
      }
      return value;
    }

    /**
     * @param value The number of the enum to look for.
     * @return The enum associated with the given number.
     * @deprecated Use {@link #forNumber(int)} instead.
     */
    @java.lang.Deprecated
    public static State valueOf(int value) {
      return forNumber(value);
    }

    public static State forNumber(int value) {
      switch (value) {
        case 0: return STATE_UNSPECIFIED;
        case 1: return NOT_ASSIGNED;
        case 2: return PENDING;
        case 3: return ACTIVE;
        default: return null;
      }
    }

    public static com.google.protobuf.Internal.EnumLiteMap<State>
        internalGetValueMap() {
      return internalValueMap;
    }
    private static final com.google.protobuf.Internal.EnumLiteMap<
        State> internalValueMap =
          new com.google.protobuf.Internal.EnumLiteMap<State>() {
            @java.lang.Override
            public State findValueByNumber(int number) {
              return State.forNumber(number);
            }
          };

    public static com.google.protobuf.Internal.EnumVerifier 
        internalGetVerifier() {
      return StateVerifier.INSTANCE;
    }

    private static final class StateVerifier implements 
         com.google.protobuf.Internal.EnumVerifier { 
            static final com.google.protobuf.Internal.EnumVerifier           INSTANCE = new StateVerifier();
            @java.lang.Override
            public boolean isInRange(int number) {
              return State.forNumber(number) != null;
            }
          };

    private final int value;

    private State(int value) {
      this.value = value;
    }

    // @@protoc_insertion_point(enum_scope:salto.nebula.user.v1.WalletKey.State)
  }

  public static final int NAME_FIELD_NUMBER = 1;
  private java.lang.String name_;
  /**
   * <pre>
   * Resource name of the user's wallet key. It must have the
   * format of `installations/&#42;&#47;users/&#42;&#47;wallet-key`. For example:
   * `installations/surelock-homes-hq/users/john-watson/wallet-key`.
   * </pre>
   *
   * <code>string name = 1;</code>
   * @return The name.
   */
  @java.lang.Override
  public java.lang.String getName() {
    return name_;
  }
  /**
   * <pre>
   * Resource name of the user's wallet key. It must have the
   * format of `installations/&#42;&#47;users/&#42;&#47;wallet-key`. For example:
   * `installations/surelock-homes-hq/users/john-watson/wallet-key`.
   * </pre>
   *
   * <code>string name = 1;</code>
   * @return The bytes for name.
   */
  @java.lang.Override
  public com.google.protobuf.ByteString
      getNameBytes() {
    return com.google.protobuf.ByteString.copyFromUtf8(name_);
  }
  /**
   * <pre>
   * Resource name of the user's wallet key. It must have the
   * format of `installations/&#42;&#47;users/&#42;&#47;wallet-key`. For example:
   * `installations/surelock-homes-hq/users/john-watson/wallet-key`.
   * </pre>
   *
   * <code>string name = 1;</code>
   * @param value The name to set.
   */
  private void setName(
      java.lang.String value) {
    java.lang.Class<?> valueClass = value.getClass();
  
    name_ = value;
  }
  /**
   * <pre>
   * Resource name of the user's wallet key. It must have the
   * format of `installations/&#42;&#47;users/&#42;&#47;wallet-key`. For example:
   * `installations/surelock-homes-hq/users/john-watson/wallet-key`.
   * </pre>
   *
   * <code>string name = 1;</code>
   */
  private void clearName() {

    name_ = getDefaultInstance().getName();
  }
  /**
   * <pre>
   * Resource name of the user's wallet key. It must have the
   * format of `installations/&#42;&#47;users/&#42;&#47;wallet-key`. For example:
   * `installations/surelock-homes-hq/users/john-watson/wallet-key`.
   * </pre>
   *
   * <code>string name = 1;</code>
   * @param value The bytes for name to set.
   */
  private void setNameBytes(
      com.google.protobuf.ByteString value) {
    checkByteStringIsUtf8(value);
    name_ = value.toStringUtf8();

  }

  public static final int STATE_FIELD_NUMBER = 2;
  private int state_;
  /**
   * <pre>
   * Indicates whether this wallet key has been assigned or not. This field
   * cannot be modified using a standard
   * [`UpdateWalletKey`][salto.nebula.user.v1.UserService.UpdateWalletKey]
   * operation. To change the value of this field, you must call
   * [`AssignWalletKey`][salto.nebula.user.v1.UserService.AssignWalletKey].
   * </pre>
   *
   * <code>.salto.nebula.user.v1.WalletKey.State state = 2;</code>
   * @return The enum numeric value on the wire for state.
   */
  @java.lang.Override
  public int getStateValue() {
    return state_;
  }
  /**
   * <pre>
   * Indicates whether this wallet key has been assigned or not. This field
   * cannot be modified using a standard
   * [`UpdateWalletKey`][salto.nebula.user.v1.UserService.UpdateWalletKey]
   * operation. To change the value of this field, you must call
   * [`AssignWalletKey`][salto.nebula.user.v1.UserService.AssignWalletKey].
   * </pre>
   *
   * <code>.salto.nebula.user.v1.WalletKey.State state = 2;</code>
   * @return The state.
   */
  @java.lang.Override
  public com.saltoapis.nebula.user.v1.WalletKey.State getState() {
    com.saltoapis.nebula.user.v1.WalletKey.State result = com.saltoapis.nebula.user.v1.WalletKey.State.forNumber(state_);
    return result == null ? com.saltoapis.nebula.user.v1.WalletKey.State.UNRECOGNIZED : result;
  }
  /**
   * <pre>
   * Indicates whether this wallet key has been assigned or not. This field
   * cannot be modified using a standard
   * [`UpdateWalletKey`][salto.nebula.user.v1.UserService.UpdateWalletKey]
   * operation. To change the value of this field, you must call
   * [`AssignWalletKey`][salto.nebula.user.v1.UserService.AssignWalletKey].
   * </pre>
   *
   * <code>.salto.nebula.user.v1.WalletKey.State state = 2;</code>
   * @param value The enum numeric value on the wire for state to set.
   */
  private void setStateValue(int value) {
      state_ = value;
  }
  /**
   * <pre>
   * Indicates whether this wallet key has been assigned or not. This field
   * cannot be modified using a standard
   * [`UpdateWalletKey`][salto.nebula.user.v1.UserService.UpdateWalletKey]
   * operation. To change the value of this field, you must call
   * [`AssignWalletKey`][salto.nebula.user.v1.UserService.AssignWalletKey].
   * </pre>
   *
   * <code>.salto.nebula.user.v1.WalletKey.State state = 2;</code>
   * @param value The state to set.
   */
  private void setState(com.saltoapis.nebula.user.v1.WalletKey.State value) {
    state_ = value.getNumber();

  }
  /**
   * <pre>
   * Indicates whether this wallet key has been assigned or not. This field
   * cannot be modified using a standard
   * [`UpdateWalletKey`][salto.nebula.user.v1.UserService.UpdateWalletKey]
   * operation. To change the value of this field, you must call
   * [`AssignWalletKey`][salto.nebula.user.v1.UserService.AssignWalletKey].
   * </pre>
   *
   * <code>.salto.nebula.user.v1.WalletKey.State state = 2;</code>
   */
  private void clearState() {

    state_ = 0;
  }

  public static final int OUTDATED_FIELD_NUMBER = 3;
  private boolean outdated_;
  /**
   * <pre>
   * Indicates whether this wallet key has pending updates or not.
   * This field cannot be modified using a standard
   * [`UpdateWalletKey`][salto.nebula.user.v1.UserService.UpdateWalletKey]
   * operation. To change the value of this field, you must call
   * [`OutdateWalletKey`][salto.nebula.user.v1.UserService.OutdateWalletKey].
   * </pre>
   *
   * <code>bool outdated = 3;</code>
   * @return The outdated.
   */
  @java.lang.Override
  public boolean getOutdated() {
    return outdated_;
  }
  /**
   * <pre>
   * Indicates whether this wallet key has pending updates or not.
   * This field cannot be modified using a standard
   * [`UpdateWalletKey`][salto.nebula.user.v1.UserService.UpdateWalletKey]
   * operation. To change the value of this field, you must call
   * [`OutdateWalletKey`][salto.nebula.user.v1.UserService.OutdateWalletKey].
   * </pre>
   *
   * <code>bool outdated = 3;</code>
   * @param value The outdated to set.
   */
  private void setOutdated(boolean value) {
    
    outdated_ = value;
  }
  /**
   * <pre>
   * Indicates whether this wallet key has pending updates or not.
   * This field cannot be modified using a standard
   * [`UpdateWalletKey`][salto.nebula.user.v1.UserService.UpdateWalletKey]
   * operation. To change the value of this field, you must call
   * [`OutdateWalletKey`][salto.nebula.user.v1.UserService.OutdateWalletKey].
   * </pre>
   *
   * <code>bool outdated = 3;</code>
   */
  private void clearOutdated() {

    outdated_ = false;
  }

  public static com.saltoapis.nebula.user.v1.WalletKey parseFrom(
      java.nio.ByteBuffer data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return com.google.protobuf.GeneratedMessageLite.parseFrom(
        DEFAULT_INSTANCE, data);
  }
  public static com.saltoapis.nebula.user.v1.WalletKey parseFrom(
      java.nio.ByteBuffer data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return com.google.protobuf.GeneratedMessageLite.parseFrom(
        DEFAULT_INSTANCE, data, extensionRegistry);
  }
  public static com.saltoapis.nebula.user.v1.WalletKey parseFrom(
      com.google.protobuf.ByteString data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return com.google.protobuf.GeneratedMessageLite.parseFrom(
        DEFAULT_INSTANCE, data);
  }
  public static com.saltoapis.nebula.user.v1.WalletKey parseFrom(
      com.google.protobuf.ByteString data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return com.google.protobuf.GeneratedMessageLite.parseFrom(
        DEFAULT_INSTANCE, data, extensionRegistry);
  }
  public static com.saltoapis.nebula.user.v1.WalletKey parseFrom(byte[] data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return com.google.protobuf.GeneratedMessageLite.parseFrom(
        DEFAULT_INSTANCE, data);
  }
  public static com.saltoapis.nebula.user.v1.WalletKey parseFrom(
      byte[] data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return com.google.protobuf.GeneratedMessageLite.parseFrom(
        DEFAULT_INSTANCE, data, extensionRegistry);
  }
  public static com.saltoapis.nebula.user.v1.WalletKey parseFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageLite.parseFrom(
        DEFAULT_INSTANCE, input);
  }
  public static com.saltoapis.nebula.user.v1.WalletKey parseFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageLite.parseFrom(
        DEFAULT_INSTANCE, input, extensionRegistry);
  }

  public static com.saltoapis.nebula.user.v1.WalletKey parseDelimitedFrom(java.io.InputStream input)
      throws java.io.IOException {
    return parseDelimitedFrom(DEFAULT_INSTANCE, input);
  }

  public static com.saltoapis.nebula.user.v1.WalletKey parseDelimitedFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return parseDelimitedFrom(DEFAULT_INSTANCE, input, extensionRegistry);
  }
  public static com.saltoapis.nebula.user.v1.WalletKey parseFrom(
      com.google.protobuf.CodedInputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageLite.parseFrom(
        DEFAULT_INSTANCE, input);
  }
  public static com.saltoapis.nebula.user.v1.WalletKey parseFrom(
      com.google.protobuf.CodedInputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageLite.parseFrom(
        DEFAULT_INSTANCE, input, extensionRegistry);
  }

  public static Builder newBuilder() {
    return (Builder) DEFAULT_INSTANCE.createBuilder();
  }
  public static Builder newBuilder(com.saltoapis.nebula.user.v1.WalletKey prototype) {
    return DEFAULT_INSTANCE.createBuilder(prototype);
  }

  /**
   * <pre>
   * Representation of a wallet key, belonging to a user
   * </pre>
   *
   * Protobuf type {@code salto.nebula.user.v1.WalletKey}
   */
  public static final class Builder extends
      com.google.protobuf.GeneratedMessageLite.Builder<
        com.saltoapis.nebula.user.v1.WalletKey, Builder> implements
      // @@protoc_insertion_point(builder_implements:salto.nebula.user.v1.WalletKey)
      com.saltoapis.nebula.user.v1.WalletKeyOrBuilder {
    // Construct using com.saltoapis.nebula.user.v1.WalletKey.newBuilder()
    private Builder() {
      super(DEFAULT_INSTANCE);
    }


    /**
     * <pre>
     * Resource name of the user's wallet key. It must have the
     * format of `installations/&#42;&#47;users/&#42;&#47;wallet-key`. For example:
     * `installations/surelock-homes-hq/users/john-watson/wallet-key`.
     * </pre>
     *
     * <code>string name = 1;</code>
     * @return The name.
     */
    @java.lang.Override
    public java.lang.String getName() {
      return instance.getName();
    }
    /**
     * <pre>
     * Resource name of the user's wallet key. It must have the
     * format of `installations/&#42;&#47;users/&#42;&#47;wallet-key`. For example:
     * `installations/surelock-homes-hq/users/john-watson/wallet-key`.
     * </pre>
     *
     * <code>string name = 1;</code>
     * @return The bytes for name.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString
        getNameBytes() {
      return instance.getNameBytes();
    }
    /**
     * <pre>
     * Resource name of the user's wallet key. It must have the
     * format of `installations/&#42;&#47;users/&#42;&#47;wallet-key`. For example:
     * `installations/surelock-homes-hq/users/john-watson/wallet-key`.
     * </pre>
     *
     * <code>string name = 1;</code>
     * @param value The name to set.
     * @return This builder for chaining.
     */
    public Builder setName(
        java.lang.String value) {
      copyOnWrite();
      instance.setName(value);
      return this;
    }
    /**
     * <pre>
     * Resource name of the user's wallet key. It must have the
     * format of `installations/&#42;&#47;users/&#42;&#47;wallet-key`. For example:
     * `installations/surelock-homes-hq/users/john-watson/wallet-key`.
     * </pre>
     *
     * <code>string name = 1;</code>
     * @return This builder for chaining.
     */
    public Builder clearName() {
      copyOnWrite();
      instance.clearName();
      return this;
    }
    /**
     * <pre>
     * Resource name of the user's wallet key. It must have the
     * format of `installations/&#42;&#47;users/&#42;&#47;wallet-key`. For example:
     * `installations/surelock-homes-hq/users/john-watson/wallet-key`.
     * </pre>
     *
     * <code>string name = 1;</code>
     * @param value The bytes for name to set.
     * @return This builder for chaining.
     */
    public Builder setNameBytes(
        com.google.protobuf.ByteString value) {
      copyOnWrite();
      instance.setNameBytes(value);
      return this;
    }

    /**
     * <pre>
     * Indicates whether this wallet key has been assigned or not. This field
     * cannot be modified using a standard
     * [`UpdateWalletKey`][salto.nebula.user.v1.UserService.UpdateWalletKey]
     * operation. To change the value of this field, you must call
     * [`AssignWalletKey`][salto.nebula.user.v1.UserService.AssignWalletKey].
     * </pre>
     *
     * <code>.salto.nebula.user.v1.WalletKey.State state = 2;</code>
     * @return The enum numeric value on the wire for state.
     */
    @java.lang.Override
    public int getStateValue() {
      return instance.getStateValue();
    }
    /**
     * <pre>
     * Indicates whether this wallet key has been assigned or not. This field
     * cannot be modified using a standard
     * [`UpdateWalletKey`][salto.nebula.user.v1.UserService.UpdateWalletKey]
     * operation. To change the value of this field, you must call
     * [`AssignWalletKey`][salto.nebula.user.v1.UserService.AssignWalletKey].
     * </pre>
     *
     * <code>.salto.nebula.user.v1.WalletKey.State state = 2;</code>
     * @param value The state to set.
     * @return This builder for chaining.
     */
    public Builder setStateValue(int value) {
      copyOnWrite();
      instance.setStateValue(value);
      return this;
    }
    /**
     * <pre>
     * Indicates whether this wallet key has been assigned or not. This field
     * cannot be modified using a standard
     * [`UpdateWalletKey`][salto.nebula.user.v1.UserService.UpdateWalletKey]
     * operation. To change the value of this field, you must call
     * [`AssignWalletKey`][salto.nebula.user.v1.UserService.AssignWalletKey].
     * </pre>
     *
     * <code>.salto.nebula.user.v1.WalletKey.State state = 2;</code>
     * @return The state.
     */
    @java.lang.Override
    public com.saltoapis.nebula.user.v1.WalletKey.State getState() {
      return instance.getState();
    }
    /**
     * <pre>
     * Indicates whether this wallet key has been assigned or not. This field
     * cannot be modified using a standard
     * [`UpdateWalletKey`][salto.nebula.user.v1.UserService.UpdateWalletKey]
     * operation. To change the value of this field, you must call
     * [`AssignWalletKey`][salto.nebula.user.v1.UserService.AssignWalletKey].
     * </pre>
     *
     * <code>.salto.nebula.user.v1.WalletKey.State state = 2;</code>
     * @param value The enum numeric value on the wire for state to set.
     * @return This builder for chaining.
     */
    public Builder setState(com.saltoapis.nebula.user.v1.WalletKey.State value) {
      copyOnWrite();
      instance.setState(value);
      return this;
    }
    /**
     * <pre>
     * Indicates whether this wallet key has been assigned or not. This field
     * cannot be modified using a standard
     * [`UpdateWalletKey`][salto.nebula.user.v1.UserService.UpdateWalletKey]
     * operation. To change the value of this field, you must call
     * [`AssignWalletKey`][salto.nebula.user.v1.UserService.AssignWalletKey].
     * </pre>
     *
     * <code>.salto.nebula.user.v1.WalletKey.State state = 2;</code>
     * @return This builder for chaining.
     */
    public Builder clearState() {
      copyOnWrite();
      instance.clearState();
      return this;
    }

    /**
     * <pre>
     * Indicates whether this wallet key has pending updates or not.
     * This field cannot be modified using a standard
     * [`UpdateWalletKey`][salto.nebula.user.v1.UserService.UpdateWalletKey]
     * operation. To change the value of this field, you must call
     * [`OutdateWalletKey`][salto.nebula.user.v1.UserService.OutdateWalletKey].
     * </pre>
     *
     * <code>bool outdated = 3;</code>
     * @return The outdated.
     */
    @java.lang.Override
    public boolean getOutdated() {
      return instance.getOutdated();
    }
    /**
     * <pre>
     * Indicates whether this wallet key has pending updates or not.
     * This field cannot be modified using a standard
     * [`UpdateWalletKey`][salto.nebula.user.v1.UserService.UpdateWalletKey]
     * operation. To change the value of this field, you must call
     * [`OutdateWalletKey`][salto.nebula.user.v1.UserService.OutdateWalletKey].
     * </pre>
     *
     * <code>bool outdated = 3;</code>
     * @param value The outdated to set.
     * @return This builder for chaining.
     */
    public Builder setOutdated(boolean value) {
      copyOnWrite();
      instance.setOutdated(value);
      return this;
    }
    /**
     * <pre>
     * Indicates whether this wallet key has pending updates or not.
     * This field cannot be modified using a standard
     * [`UpdateWalletKey`][salto.nebula.user.v1.UserService.UpdateWalletKey]
     * operation. To change the value of this field, you must call
     * [`OutdateWalletKey`][salto.nebula.user.v1.UserService.OutdateWalletKey].
     * </pre>
     *
     * <code>bool outdated = 3;</code>
     * @return This builder for chaining.
     */
    public Builder clearOutdated() {
      copyOnWrite();
      instance.clearOutdated();
      return this;
    }

    // @@protoc_insertion_point(builder_scope:salto.nebula.user.v1.WalletKey)
  }
  @java.lang.Override
  @java.lang.SuppressWarnings({"unchecked", "fallthrough"})
  protected final java.lang.Object dynamicMethod(
      com.google.protobuf.GeneratedMessageLite.MethodToInvoke method,
      java.lang.Object arg0, java.lang.Object arg1) {
    switch (method) {
      case NEW_MUTABLE_INSTANCE: {
        return new com.saltoapis.nebula.user.v1.WalletKey();
      }
      case NEW_BUILDER: {
        return new Builder();
      }
      case BUILD_MESSAGE_INFO: {
          java.lang.Object[] objects = new java.lang.Object[] {
            "name_",
            "state_",
            "outdated_",
          };
          java.lang.String info =
              "\u0000\u0003\u0000\u0000\u0001\u0003\u0003\u0000\u0000\u0000\u0001\u0208\u0002\f" +
              "\u0003\u0007";
          return newMessageInfo(DEFAULT_INSTANCE, info, objects);
      }
      // fall through
      case GET_DEFAULT_INSTANCE: {
        return DEFAULT_INSTANCE;
      }
      case GET_PARSER: {
        com.google.protobuf.Parser<com.saltoapis.nebula.user.v1.WalletKey> parser = PARSER;
        if (parser == null) {
          synchronized (com.saltoapis.nebula.user.v1.WalletKey.class) {
            parser = PARSER;
            if (parser == null) {
              parser =
                  new DefaultInstanceBasedParser<com.saltoapis.nebula.user.v1.WalletKey>(
                      DEFAULT_INSTANCE);
              PARSER = parser;
            }
          }
        }
        return parser;
    }
    case GET_MEMOIZED_IS_INITIALIZED: {
      return (byte) 1;
    }
    case SET_MEMOIZED_IS_INITIALIZED: {
      return null;
    }
    }
    throw new UnsupportedOperationException();
  }


  // @@protoc_insertion_point(class_scope:salto.nebula.user.v1.WalletKey)
  private static final com.saltoapis.nebula.user.v1.WalletKey DEFAULT_INSTANCE;
  static {
    WalletKey defaultInstance = new WalletKey();
    // New instances are implicitly immutable so no need to make
    // immutable.
    DEFAULT_INSTANCE = defaultInstance;
    com.google.protobuf.GeneratedMessageLite.registerDefaultInstance(
      WalletKey.class, defaultInstance);
  }

  public static com.saltoapis.nebula.user.v1.WalletKey getDefaultInstance() {
    return DEFAULT_INSTANCE;
  }

  private static volatile com.google.protobuf.Parser<WalletKey> PARSER;

  public static com.google.protobuf.Parser<WalletKey> parser() {
    return DEFAULT_INSTANCE.getParserForType();
  }
}

