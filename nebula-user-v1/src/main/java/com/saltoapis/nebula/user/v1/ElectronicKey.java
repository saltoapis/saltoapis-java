// Generated by the protocol buffer compiler.  DO NOT EDIT!
// NO CHECKED-IN PROTOBUF GENCODE
// source: salto/nebula/user/v1/user.proto
// Protobuf Java Version: 4.29.2

package com.saltoapis.nebula.user.v1;

/**
 * <pre>
 * Representation of an electronic key, belonging to a user
 * </pre>
 *
 * Protobuf type {@code salto.nebula.user.v1.ElectronicKey}
 */
public final class ElectronicKey extends
    com.google.protobuf.GeneratedMessage implements
    // @@protoc_insertion_point(message_implements:salto.nebula.user.v1.ElectronicKey)
    ElectronicKeyOrBuilder {
private static final long serialVersionUID = 0L;
  static {
    com.google.protobuf.RuntimeVersion.validateProtobufGencodeVersion(
      com.google.protobuf.RuntimeVersion.RuntimeDomain.PUBLIC,
      /* major= */ 4,
      /* minor= */ 29,
      /* patch= */ 2,
      /* suffix= */ "",
      ElectronicKey.class.getName());
  }
  // Use ElectronicKey.newBuilder() to construct.
  private ElectronicKey(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
    super(builder);
  }
  private ElectronicKey() {
    name_ = "";
    deviceId_ = "";
    state_ = 0;
  }

  public static final com.google.protobuf.Descriptors.Descriptor
      getDescriptor() {
    return com.saltoapis.nebula.user.v1.UserProto.internal_static_salto_nebula_user_v1_ElectronicKey_descriptor;
  }

  @java.lang.Override
  protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internalGetFieldAccessorTable() {
    return com.saltoapis.nebula.user.v1.UserProto.internal_static_salto_nebula_user_v1_ElectronicKey_fieldAccessorTable
        .ensureFieldAccessorsInitialized(
            com.saltoapis.nebula.user.v1.ElectronicKey.class, com.saltoapis.nebula.user.v1.ElectronicKey.Builder.class);
  }

  /**
   * <pre>
   * State for an electronic key.
   * </pre>
   *
   * Protobuf enum {@code salto.nebula.user.v1.ElectronicKey.State}
   */
  public enum State
      implements com.google.protobuf.ProtocolMessageEnum {
    /**
     * <pre>
     * Sentinel value used to indicate that the state is unknown, omitted,
     * or is not applicable.
     * </pre>
     *
     * <code>STATE_UNSPECIFIED = 0;</code>
     */
    STATE_UNSPECIFIED(0),
    /**
     * <pre>
     * The electronic key is not assigned to a physical device.
     * </pre>
     *
     * <code>NOT_ASSIGNED = 1;</code>
     */
    NOT_ASSIGNED(1),
    /**
     * <pre>
     * The electronic key is pending activation.
     * </pre>
     *
     * <code>PENDING = 2;</code>
     */
    PENDING(2),
    /**
     * <pre>
     * The electronic key is active and ready to be used.
     * </pre>
     *
     * <code>ACTIVE = 3;</code>
     */
    ACTIVE(3),
    UNRECOGNIZED(-1),
    ;

    static {
      com.google.protobuf.RuntimeVersion.validateProtobufGencodeVersion(
        com.google.protobuf.RuntimeVersion.RuntimeDomain.PUBLIC,
        /* major= */ 4,
        /* minor= */ 29,
        /* patch= */ 2,
        /* suffix= */ "",
        State.class.getName());
    }
    /**
     * <pre>
     * Sentinel value used to indicate that the state is unknown, omitted,
     * or is not applicable.
     * </pre>
     *
     * <code>STATE_UNSPECIFIED = 0;</code>
     */
    public static final int STATE_UNSPECIFIED_VALUE = 0;
    /**
     * <pre>
     * The electronic key is not assigned to a physical device.
     * </pre>
     *
     * <code>NOT_ASSIGNED = 1;</code>
     */
    public static final int NOT_ASSIGNED_VALUE = 1;
    /**
     * <pre>
     * The electronic key is pending activation.
     * </pre>
     *
     * <code>PENDING = 2;</code>
     */
    public static final int PENDING_VALUE = 2;
    /**
     * <pre>
     * The electronic key is active and ready to be used.
     * </pre>
     *
     * <code>ACTIVE = 3;</code>
     */
    public static final int ACTIVE_VALUE = 3;


    public final int getNumber() {
      if (this == UNRECOGNIZED) {
        throw new java.lang.IllegalArgumentException(
            "Can't get the number of an unknown enum value.");
      }
      return value;
    }

    /**
     * @param value The numeric wire value of the corresponding enum entry.
     * @return The enum associated with the given numeric wire value.
     * @deprecated Use {@link #forNumber(int)} instead.
     */
    @java.lang.Deprecated
    public static State valueOf(int value) {
      return forNumber(value);
    }

    /**
     * @param value The numeric wire value of the corresponding enum entry.
     * @return The enum associated with the given numeric wire value.
     */
    public static State forNumber(int value) {
      switch (value) {
        case 0: return STATE_UNSPECIFIED;
        case 1: return NOT_ASSIGNED;
        case 2: return PENDING;
        case 3: return ACTIVE;
        default: return null;
      }
    }

    public static com.google.protobuf.Internal.EnumLiteMap<State>
        internalGetValueMap() {
      return internalValueMap;
    }
    private static final com.google.protobuf.Internal.EnumLiteMap<
        State> internalValueMap =
          new com.google.protobuf.Internal.EnumLiteMap<State>() {
            public State findValueByNumber(int number) {
              return State.forNumber(number);
            }
          };

    public final com.google.protobuf.Descriptors.EnumValueDescriptor
        getValueDescriptor() {
      if (this == UNRECOGNIZED) {
        throw new java.lang.IllegalStateException(
            "Can't get the descriptor of an unrecognized enum value.");
      }
      return getDescriptor().getValues().get(ordinal());
    }
    public final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptorForType() {
      return getDescriptor();
    }
    public static final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptor() {
      return com.saltoapis.nebula.user.v1.ElectronicKey.getDescriptor().getEnumTypes().get(0);
    }

    private static final State[] VALUES = values();

    public static State valueOf(
        com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
      if (desc.getType() != getDescriptor()) {
        throw new java.lang.IllegalArgumentException(
          "EnumValueDescriptor is not for this type.");
      }
      if (desc.getIndex() == -1) {
        return UNRECOGNIZED;
      }
      return VALUES[desc.getIndex()];
    }

    private final int value;

    private State(int value) {
      this.value = value;
    }

    // @@protoc_insertion_point(enum_scope:salto.nebula.user.v1.ElectronicKey.State)
  }

  public static final int NAME_FIELD_NUMBER = 1;
  @SuppressWarnings("serial")
  private volatile java.lang.Object name_ = "";
  /**
   * <pre>
   * Output only. Resource name of the user's electronic key. It must have the
   * format of `installations/&#42;&#47;users/&#42;&#47;electronic-key`. For example:
   * `installations/surelock-homes-hq/users/john-watson/electronic-key`.
   * </pre>
   *
   * <code>string name = 1;</code>
   * @return The name.
   */
  @java.lang.Override
  public java.lang.String getName() {
    java.lang.Object ref = name_;
    if (ref instanceof java.lang.String) {
      return (java.lang.String) ref;
    } else {
      com.google.protobuf.ByteString bs = 
          (com.google.protobuf.ByteString) ref;
      java.lang.String s = bs.toStringUtf8();
      name_ = s;
      return s;
    }
  }
  /**
   * <pre>
   * Output only. Resource name of the user's electronic key. It must have the
   * format of `installations/&#42;&#47;users/&#42;&#47;electronic-key`. For example:
   * `installations/surelock-homes-hq/users/john-watson/electronic-key`.
   * </pre>
   *
   * <code>string name = 1;</code>
   * @return The bytes for name.
   */
  @java.lang.Override
  public com.google.protobuf.ByteString
      getNameBytes() {
    java.lang.Object ref = name_;
    if (ref instanceof java.lang.String) {
      com.google.protobuf.ByteString b = 
          com.google.protobuf.ByteString.copyFromUtf8(
              (java.lang.String) ref);
      name_ = b;
      return b;
    } else {
      return (com.google.protobuf.ByteString) ref;
    }
  }

  public static final int DEVICE_ID_FIELD_NUMBER = 2;
  @SuppressWarnings("serial")
  private volatile java.lang.Object deviceId_ = "";
  /**
   * <pre>
   * Globally unique identifier that is used across all devices manufactured
   * by SALTO.
   * </pre>
   *
   * <code>string device_id = 2;</code>
   * @return The deviceId.
   */
  @java.lang.Override
  public java.lang.String getDeviceId() {
    java.lang.Object ref = deviceId_;
    if (ref instanceof java.lang.String) {
      return (java.lang.String) ref;
    } else {
      com.google.protobuf.ByteString bs = 
          (com.google.protobuf.ByteString) ref;
      java.lang.String s = bs.toStringUtf8();
      deviceId_ = s;
      return s;
    }
  }
  /**
   * <pre>
   * Globally unique identifier that is used across all devices manufactured
   * by SALTO.
   * </pre>
   *
   * <code>string device_id = 2;</code>
   * @return The bytes for deviceId.
   */
  @java.lang.Override
  public com.google.protobuf.ByteString
      getDeviceIdBytes() {
    java.lang.Object ref = deviceId_;
    if (ref instanceof java.lang.String) {
      com.google.protobuf.ByteString b = 
          com.google.protobuf.ByteString.copyFromUtf8(
              (java.lang.String) ref);
      deviceId_ = b;
      return b;
    } else {
      return (com.google.protobuf.ByteString) ref;
    }
  }

  public static final int STATE_FIELD_NUMBER = 3;
  private int state_ = 0;
  /**
   * <pre>
   * Indicates whether this electronic key has been assigned, not assigned or is
   * active and ready for use. This field cannot be modified using a standard
   * [`UpdateElectronicKey`][salto.nebula.user.v1.UserService.UpdateElectronicKey]
   * operation. To change the value of this field, you must call
   * [`EncodeElectronicKey`][salto.nebula.user.v1.UserService.EncodeElectronicKey].
   *
   * If the value is `NOT_ASSIGNED` it also applies to cases where the
   * assignation process has been initiated, but not completed.
   * </pre>
   *
   * <code>.salto.nebula.user.v1.ElectronicKey.State state = 3;</code>
   * @return The enum numeric value on the wire for state.
   */
  @java.lang.Override public int getStateValue() {
    return state_;
  }
  /**
   * <pre>
   * Indicates whether this electronic key has been assigned, not assigned or is
   * active and ready for use. This field cannot be modified using a standard
   * [`UpdateElectronicKey`][salto.nebula.user.v1.UserService.UpdateElectronicKey]
   * operation. To change the value of this field, you must call
   * [`EncodeElectronicKey`][salto.nebula.user.v1.UserService.EncodeElectronicKey].
   *
   * If the value is `NOT_ASSIGNED` it also applies to cases where the
   * assignation process has been initiated, but not completed.
   * </pre>
   *
   * <code>.salto.nebula.user.v1.ElectronicKey.State state = 3;</code>
   * @return The state.
   */
  @java.lang.Override public com.saltoapis.nebula.user.v1.ElectronicKey.State getState() {
    com.saltoapis.nebula.user.v1.ElectronicKey.State result = com.saltoapis.nebula.user.v1.ElectronicKey.State.forNumber(state_);
    return result == null ? com.saltoapis.nebula.user.v1.ElectronicKey.State.UNRECOGNIZED : result;
  }

  public static final int OUTDATED_FIELD_NUMBER = 4;
  private boolean outdated_ = false;
  /**
   * <pre>
   * Indicates whether this electronic key has pending updates or not.
   * This field cannot be modified using a standard
   * [`UpdateElectronicKey`][salto.nebula.user.v1.UserService.UpdateElectronicKey]
   * operation. To change the value of this field, you must call
   * [`OutdateElectronicKey`][salto.nebula.user.v1.UserService.OutdateElectronicKey].
   * </pre>
   *
   * <code>bool outdated = 4;</code>
   * @return The outdated.
   */
  @java.lang.Override
  public boolean getOutdated() {
    return outdated_;
  }

  private byte memoizedIsInitialized = -1;
  @java.lang.Override
  public final boolean isInitialized() {
    byte isInitialized = memoizedIsInitialized;
    if (isInitialized == 1) return true;
    if (isInitialized == 0) return false;

    memoizedIsInitialized = 1;
    return true;
  }

  @java.lang.Override
  public void writeTo(com.google.protobuf.CodedOutputStream output)
                      throws java.io.IOException {
    if (!com.google.protobuf.GeneratedMessage.isStringEmpty(name_)) {
      com.google.protobuf.GeneratedMessage.writeString(output, 1, name_);
    }
    if (!com.google.protobuf.GeneratedMessage.isStringEmpty(deviceId_)) {
      com.google.protobuf.GeneratedMessage.writeString(output, 2, deviceId_);
    }
    if (state_ != com.saltoapis.nebula.user.v1.ElectronicKey.State.STATE_UNSPECIFIED.getNumber()) {
      output.writeEnum(3, state_);
    }
    if (outdated_ != false) {
      output.writeBool(4, outdated_);
    }
    getUnknownFields().writeTo(output);
  }

  @java.lang.Override
  public int getSerializedSize() {
    int size = memoizedSize;
    if (size != -1) return size;

    size = 0;
    if (!com.google.protobuf.GeneratedMessage.isStringEmpty(name_)) {
      size += com.google.protobuf.GeneratedMessage.computeStringSize(1, name_);
    }
    if (!com.google.protobuf.GeneratedMessage.isStringEmpty(deviceId_)) {
      size += com.google.protobuf.GeneratedMessage.computeStringSize(2, deviceId_);
    }
    if (state_ != com.saltoapis.nebula.user.v1.ElectronicKey.State.STATE_UNSPECIFIED.getNumber()) {
      size += com.google.protobuf.CodedOutputStream
        .computeEnumSize(3, state_);
    }
    if (outdated_ != false) {
      size += com.google.protobuf.CodedOutputStream
        .computeBoolSize(4, outdated_);
    }
    size += getUnknownFields().getSerializedSize();
    memoizedSize = size;
    return size;
  }

  @java.lang.Override
  public boolean equals(final java.lang.Object obj) {
    if (obj == this) {
     return true;
    }
    if (!(obj instanceof com.saltoapis.nebula.user.v1.ElectronicKey)) {
      return super.equals(obj);
    }
    com.saltoapis.nebula.user.v1.ElectronicKey other = (com.saltoapis.nebula.user.v1.ElectronicKey) obj;

    if (!getName()
        .equals(other.getName())) return false;
    if (!getDeviceId()
        .equals(other.getDeviceId())) return false;
    if (state_ != other.state_) return false;
    if (getOutdated()
        != other.getOutdated()) return false;
    if (!getUnknownFields().equals(other.getUnknownFields())) return false;
    return true;
  }

  @java.lang.Override
  public int hashCode() {
    if (memoizedHashCode != 0) {
      return memoizedHashCode;
    }
    int hash = 41;
    hash = (19 * hash) + getDescriptor().hashCode();
    hash = (37 * hash) + NAME_FIELD_NUMBER;
    hash = (53 * hash) + getName().hashCode();
    hash = (37 * hash) + DEVICE_ID_FIELD_NUMBER;
    hash = (53 * hash) + getDeviceId().hashCode();
    hash = (37 * hash) + STATE_FIELD_NUMBER;
    hash = (53 * hash) + state_;
    hash = (37 * hash) + OUTDATED_FIELD_NUMBER;
    hash = (53 * hash) + com.google.protobuf.Internal.hashBoolean(
        getOutdated());
    hash = (29 * hash) + getUnknownFields().hashCode();
    memoizedHashCode = hash;
    return hash;
  }

  public static com.saltoapis.nebula.user.v1.ElectronicKey parseFrom(
      java.nio.ByteBuffer data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static com.saltoapis.nebula.user.v1.ElectronicKey parseFrom(
      java.nio.ByteBuffer data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static com.saltoapis.nebula.user.v1.ElectronicKey parseFrom(
      com.google.protobuf.ByteString data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static com.saltoapis.nebula.user.v1.ElectronicKey parseFrom(
      com.google.protobuf.ByteString data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static com.saltoapis.nebula.user.v1.ElectronicKey parseFrom(byte[] data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static com.saltoapis.nebula.user.v1.ElectronicKey parseFrom(
      byte[] data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static com.saltoapis.nebula.user.v1.ElectronicKey parseFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessage
        .parseWithIOException(PARSER, input);
  }
  public static com.saltoapis.nebula.user.v1.ElectronicKey parseFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessage
        .parseWithIOException(PARSER, input, extensionRegistry);
  }

  public static com.saltoapis.nebula.user.v1.ElectronicKey parseDelimitedFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessage
        .parseDelimitedWithIOException(PARSER, input);
  }

  public static com.saltoapis.nebula.user.v1.ElectronicKey parseDelimitedFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessage
        .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
  }
  public static com.saltoapis.nebula.user.v1.ElectronicKey parseFrom(
      com.google.protobuf.CodedInputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessage
        .parseWithIOException(PARSER, input);
  }
  public static com.saltoapis.nebula.user.v1.ElectronicKey parseFrom(
      com.google.protobuf.CodedInputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessage
        .parseWithIOException(PARSER, input, extensionRegistry);
  }

  @java.lang.Override
  public Builder newBuilderForType() { return newBuilder(); }
  public static Builder newBuilder() {
    return DEFAULT_INSTANCE.toBuilder();
  }
  public static Builder newBuilder(com.saltoapis.nebula.user.v1.ElectronicKey prototype) {
    return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
  }
  @java.lang.Override
  public Builder toBuilder() {
    return this == DEFAULT_INSTANCE
        ? new Builder() : new Builder().mergeFrom(this);
  }

  @java.lang.Override
  protected Builder newBuilderForType(
      com.google.protobuf.GeneratedMessage.BuilderParent parent) {
    Builder builder = new Builder(parent);
    return builder;
  }
  /**
   * <pre>
   * Representation of an electronic key, belonging to a user
   * </pre>
   *
   * Protobuf type {@code salto.nebula.user.v1.ElectronicKey}
   */
  public static final class Builder extends
      com.google.protobuf.GeneratedMessage.Builder<Builder> implements
      // @@protoc_insertion_point(builder_implements:salto.nebula.user.v1.ElectronicKey)
      com.saltoapis.nebula.user.v1.ElectronicKeyOrBuilder {
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.saltoapis.nebula.user.v1.UserProto.internal_static_salto_nebula_user_v1_ElectronicKey_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.saltoapis.nebula.user.v1.UserProto.internal_static_salto_nebula_user_v1_ElectronicKey_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.saltoapis.nebula.user.v1.ElectronicKey.class, com.saltoapis.nebula.user.v1.ElectronicKey.Builder.class);
    }

    // Construct using com.saltoapis.nebula.user.v1.ElectronicKey.newBuilder()
    private Builder() {

    }

    private Builder(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      super(parent);

    }
    @java.lang.Override
    public Builder clear() {
      super.clear();
      bitField0_ = 0;
      name_ = "";
      deviceId_ = "";
      state_ = 0;
      outdated_ = false;
      return this;
    }

    @java.lang.Override
    public com.google.protobuf.Descriptors.Descriptor
        getDescriptorForType() {
      return com.saltoapis.nebula.user.v1.UserProto.internal_static_salto_nebula_user_v1_ElectronicKey_descriptor;
    }

    @java.lang.Override
    public com.saltoapis.nebula.user.v1.ElectronicKey getDefaultInstanceForType() {
      return com.saltoapis.nebula.user.v1.ElectronicKey.getDefaultInstance();
    }

    @java.lang.Override
    public com.saltoapis.nebula.user.v1.ElectronicKey build() {
      com.saltoapis.nebula.user.v1.ElectronicKey result = buildPartial();
      if (!result.isInitialized()) {
        throw newUninitializedMessageException(result);
      }
      return result;
    }

    @java.lang.Override
    public com.saltoapis.nebula.user.v1.ElectronicKey buildPartial() {
      com.saltoapis.nebula.user.v1.ElectronicKey result = new com.saltoapis.nebula.user.v1.ElectronicKey(this);
      if (bitField0_ != 0) { buildPartial0(result); }
      onBuilt();
      return result;
    }

    private void buildPartial0(com.saltoapis.nebula.user.v1.ElectronicKey result) {
      int from_bitField0_ = bitField0_;
      if (((from_bitField0_ & 0x00000001) != 0)) {
        result.name_ = name_;
      }
      if (((from_bitField0_ & 0x00000002) != 0)) {
        result.deviceId_ = deviceId_;
      }
      if (((from_bitField0_ & 0x00000004) != 0)) {
        result.state_ = state_;
      }
      if (((from_bitField0_ & 0x00000008) != 0)) {
        result.outdated_ = outdated_;
      }
    }

    @java.lang.Override
    public Builder mergeFrom(com.google.protobuf.Message other) {
      if (other instanceof com.saltoapis.nebula.user.v1.ElectronicKey) {
        return mergeFrom((com.saltoapis.nebula.user.v1.ElectronicKey)other);
      } else {
        super.mergeFrom(other);
        return this;
      }
    }

    public Builder mergeFrom(com.saltoapis.nebula.user.v1.ElectronicKey other) {
      if (other == com.saltoapis.nebula.user.v1.ElectronicKey.getDefaultInstance()) return this;
      if (!other.getName().isEmpty()) {
        name_ = other.name_;
        bitField0_ |= 0x00000001;
        onChanged();
      }
      if (!other.getDeviceId().isEmpty()) {
        deviceId_ = other.deviceId_;
        bitField0_ |= 0x00000002;
        onChanged();
      }
      if (other.state_ != 0) {
        setStateValue(other.getStateValue());
      }
      if (other.getOutdated() != false) {
        setOutdated(other.getOutdated());
      }
      this.mergeUnknownFields(other.getUnknownFields());
      onChanged();
      return this;
    }

    @java.lang.Override
    public final boolean isInitialized() {
      return true;
    }

    @java.lang.Override
    public Builder mergeFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 10: {
              name_ = input.readStringRequireUtf8();
              bitField0_ |= 0x00000001;
              break;
            } // case 10
            case 18: {
              deviceId_ = input.readStringRequireUtf8();
              bitField0_ |= 0x00000002;
              break;
            } // case 18
            case 24: {
              state_ = input.readEnum();
              bitField0_ |= 0x00000004;
              break;
            } // case 24
            case 32: {
              outdated_ = input.readBool();
              bitField0_ |= 0x00000008;
              break;
            } // case 32
            default: {
              if (!super.parseUnknownField(input, extensionRegistry, tag)) {
                done = true; // was an endgroup tag
              }
              break;
            } // default:
          } // switch (tag)
        } // while (!done)
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.unwrapIOException();
      } finally {
        onChanged();
      } // finally
      return this;
    }
    private int bitField0_;

    private java.lang.Object name_ = "";
    /**
     * <pre>
     * Output only. Resource name of the user's electronic key. It must have the
     * format of `installations/&#42;&#47;users/&#42;&#47;electronic-key`. For example:
     * `installations/surelock-homes-hq/users/john-watson/electronic-key`.
     * </pre>
     *
     * <code>string name = 1;</code>
     * @return The name.
     */
    public java.lang.String getName() {
      java.lang.Object ref = name_;
      if (!(ref instanceof java.lang.String)) {
        com.google.protobuf.ByteString bs =
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        name_ = s;
        return s;
      } else {
        return (java.lang.String) ref;
      }
    }
    /**
     * <pre>
     * Output only. Resource name of the user's electronic key. It must have the
     * format of `installations/&#42;&#47;users/&#42;&#47;electronic-key`. For example:
     * `installations/surelock-homes-hq/users/john-watson/electronic-key`.
     * </pre>
     *
     * <code>string name = 1;</code>
     * @return The bytes for name.
     */
    public com.google.protobuf.ByteString
        getNameBytes() {
      java.lang.Object ref = name_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        name_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }
    /**
     * <pre>
     * Output only. Resource name of the user's electronic key. It must have the
     * format of `installations/&#42;&#47;users/&#42;&#47;electronic-key`. For example:
     * `installations/surelock-homes-hq/users/john-watson/electronic-key`.
     * </pre>
     *
     * <code>string name = 1;</code>
     * @param value The name to set.
     * @return This builder for chaining.
     */
    public Builder setName(
        java.lang.String value) {
      if (value == null) { throw new NullPointerException(); }
      name_ = value;
      bitField0_ |= 0x00000001;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * Output only. Resource name of the user's electronic key. It must have the
     * format of `installations/&#42;&#47;users/&#42;&#47;electronic-key`. For example:
     * `installations/surelock-homes-hq/users/john-watson/electronic-key`.
     * </pre>
     *
     * <code>string name = 1;</code>
     * @return This builder for chaining.
     */
    public Builder clearName() {
      name_ = getDefaultInstance().getName();
      bitField0_ = (bitField0_ & ~0x00000001);
      onChanged();
      return this;
    }
    /**
     * <pre>
     * Output only. Resource name of the user's electronic key. It must have the
     * format of `installations/&#42;&#47;users/&#42;&#47;electronic-key`. For example:
     * `installations/surelock-homes-hq/users/john-watson/electronic-key`.
     * </pre>
     *
     * <code>string name = 1;</code>
     * @param value The bytes for name to set.
     * @return This builder for chaining.
     */
    public Builder setNameBytes(
        com.google.protobuf.ByteString value) {
      if (value == null) { throw new NullPointerException(); }
      checkByteStringIsUtf8(value);
      name_ = value;
      bitField0_ |= 0x00000001;
      onChanged();
      return this;
    }

    private java.lang.Object deviceId_ = "";
    /**
     * <pre>
     * Globally unique identifier that is used across all devices manufactured
     * by SALTO.
     * </pre>
     *
     * <code>string device_id = 2;</code>
     * @return The deviceId.
     */
    public java.lang.String getDeviceId() {
      java.lang.Object ref = deviceId_;
      if (!(ref instanceof java.lang.String)) {
        com.google.protobuf.ByteString bs =
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        deviceId_ = s;
        return s;
      } else {
        return (java.lang.String) ref;
      }
    }
    /**
     * <pre>
     * Globally unique identifier that is used across all devices manufactured
     * by SALTO.
     * </pre>
     *
     * <code>string device_id = 2;</code>
     * @return The bytes for deviceId.
     */
    public com.google.protobuf.ByteString
        getDeviceIdBytes() {
      java.lang.Object ref = deviceId_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        deviceId_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }
    /**
     * <pre>
     * Globally unique identifier that is used across all devices manufactured
     * by SALTO.
     * </pre>
     *
     * <code>string device_id = 2;</code>
     * @param value The deviceId to set.
     * @return This builder for chaining.
     */
    public Builder setDeviceId(
        java.lang.String value) {
      if (value == null) { throw new NullPointerException(); }
      deviceId_ = value;
      bitField0_ |= 0x00000002;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * Globally unique identifier that is used across all devices manufactured
     * by SALTO.
     * </pre>
     *
     * <code>string device_id = 2;</code>
     * @return This builder for chaining.
     */
    public Builder clearDeviceId() {
      deviceId_ = getDefaultInstance().getDeviceId();
      bitField0_ = (bitField0_ & ~0x00000002);
      onChanged();
      return this;
    }
    /**
     * <pre>
     * Globally unique identifier that is used across all devices manufactured
     * by SALTO.
     * </pre>
     *
     * <code>string device_id = 2;</code>
     * @param value The bytes for deviceId to set.
     * @return This builder for chaining.
     */
    public Builder setDeviceIdBytes(
        com.google.protobuf.ByteString value) {
      if (value == null) { throw new NullPointerException(); }
      checkByteStringIsUtf8(value);
      deviceId_ = value;
      bitField0_ |= 0x00000002;
      onChanged();
      return this;
    }

    private int state_ = 0;
    /**
     * <pre>
     * Indicates whether this electronic key has been assigned, not assigned or is
     * active and ready for use. This field cannot be modified using a standard
     * [`UpdateElectronicKey`][salto.nebula.user.v1.UserService.UpdateElectronicKey]
     * operation. To change the value of this field, you must call
     * [`EncodeElectronicKey`][salto.nebula.user.v1.UserService.EncodeElectronicKey].
     *
     * If the value is `NOT_ASSIGNED` it also applies to cases where the
     * assignation process has been initiated, but not completed.
     * </pre>
     *
     * <code>.salto.nebula.user.v1.ElectronicKey.State state = 3;</code>
     * @return The enum numeric value on the wire for state.
     */
    @java.lang.Override public int getStateValue() {
      return state_;
    }
    /**
     * <pre>
     * Indicates whether this electronic key has been assigned, not assigned or is
     * active and ready for use. This field cannot be modified using a standard
     * [`UpdateElectronicKey`][salto.nebula.user.v1.UserService.UpdateElectronicKey]
     * operation. To change the value of this field, you must call
     * [`EncodeElectronicKey`][salto.nebula.user.v1.UserService.EncodeElectronicKey].
     *
     * If the value is `NOT_ASSIGNED` it also applies to cases where the
     * assignation process has been initiated, but not completed.
     * </pre>
     *
     * <code>.salto.nebula.user.v1.ElectronicKey.State state = 3;</code>
     * @param value The enum numeric value on the wire for state to set.
     * @return This builder for chaining.
     */
    public Builder setStateValue(int value) {
      state_ = value;
      bitField0_ |= 0x00000004;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * Indicates whether this electronic key has been assigned, not assigned or is
     * active and ready for use. This field cannot be modified using a standard
     * [`UpdateElectronicKey`][salto.nebula.user.v1.UserService.UpdateElectronicKey]
     * operation. To change the value of this field, you must call
     * [`EncodeElectronicKey`][salto.nebula.user.v1.UserService.EncodeElectronicKey].
     *
     * If the value is `NOT_ASSIGNED` it also applies to cases where the
     * assignation process has been initiated, but not completed.
     * </pre>
     *
     * <code>.salto.nebula.user.v1.ElectronicKey.State state = 3;</code>
     * @return The state.
     */
    @java.lang.Override
    public com.saltoapis.nebula.user.v1.ElectronicKey.State getState() {
      com.saltoapis.nebula.user.v1.ElectronicKey.State result = com.saltoapis.nebula.user.v1.ElectronicKey.State.forNumber(state_);
      return result == null ? com.saltoapis.nebula.user.v1.ElectronicKey.State.UNRECOGNIZED : result;
    }
    /**
     * <pre>
     * Indicates whether this electronic key has been assigned, not assigned or is
     * active and ready for use. This field cannot be modified using a standard
     * [`UpdateElectronicKey`][salto.nebula.user.v1.UserService.UpdateElectronicKey]
     * operation. To change the value of this field, you must call
     * [`EncodeElectronicKey`][salto.nebula.user.v1.UserService.EncodeElectronicKey].
     *
     * If the value is `NOT_ASSIGNED` it also applies to cases where the
     * assignation process has been initiated, but not completed.
     * </pre>
     *
     * <code>.salto.nebula.user.v1.ElectronicKey.State state = 3;</code>
     * @param value The state to set.
     * @return This builder for chaining.
     */
    public Builder setState(com.saltoapis.nebula.user.v1.ElectronicKey.State value) {
      if (value == null) {
        throw new NullPointerException();
      }
      bitField0_ |= 0x00000004;
      state_ = value.getNumber();
      onChanged();
      return this;
    }
    /**
     * <pre>
     * Indicates whether this electronic key has been assigned, not assigned or is
     * active and ready for use. This field cannot be modified using a standard
     * [`UpdateElectronicKey`][salto.nebula.user.v1.UserService.UpdateElectronicKey]
     * operation. To change the value of this field, you must call
     * [`EncodeElectronicKey`][salto.nebula.user.v1.UserService.EncodeElectronicKey].
     *
     * If the value is `NOT_ASSIGNED` it also applies to cases where the
     * assignation process has been initiated, but not completed.
     * </pre>
     *
     * <code>.salto.nebula.user.v1.ElectronicKey.State state = 3;</code>
     * @return This builder for chaining.
     */
    public Builder clearState() {
      bitField0_ = (bitField0_ & ~0x00000004);
      state_ = 0;
      onChanged();
      return this;
    }

    private boolean outdated_ ;
    /**
     * <pre>
     * Indicates whether this electronic key has pending updates or not.
     * This field cannot be modified using a standard
     * [`UpdateElectronicKey`][salto.nebula.user.v1.UserService.UpdateElectronicKey]
     * operation. To change the value of this field, you must call
     * [`OutdateElectronicKey`][salto.nebula.user.v1.UserService.OutdateElectronicKey].
     * </pre>
     *
     * <code>bool outdated = 4;</code>
     * @return The outdated.
     */
    @java.lang.Override
    public boolean getOutdated() {
      return outdated_;
    }
    /**
     * <pre>
     * Indicates whether this electronic key has pending updates or not.
     * This field cannot be modified using a standard
     * [`UpdateElectronicKey`][salto.nebula.user.v1.UserService.UpdateElectronicKey]
     * operation. To change the value of this field, you must call
     * [`OutdateElectronicKey`][salto.nebula.user.v1.UserService.OutdateElectronicKey].
     * </pre>
     *
     * <code>bool outdated = 4;</code>
     * @param value The outdated to set.
     * @return This builder for chaining.
     */
    public Builder setOutdated(boolean value) {

      outdated_ = value;
      bitField0_ |= 0x00000008;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * Indicates whether this electronic key has pending updates or not.
     * This field cannot be modified using a standard
     * [`UpdateElectronicKey`][salto.nebula.user.v1.UserService.UpdateElectronicKey]
     * operation. To change the value of this field, you must call
     * [`OutdateElectronicKey`][salto.nebula.user.v1.UserService.OutdateElectronicKey].
     * </pre>
     *
     * <code>bool outdated = 4;</code>
     * @return This builder for chaining.
     */
    public Builder clearOutdated() {
      bitField0_ = (bitField0_ & ~0x00000008);
      outdated_ = false;
      onChanged();
      return this;
    }

    // @@protoc_insertion_point(builder_scope:salto.nebula.user.v1.ElectronicKey)
  }

  // @@protoc_insertion_point(class_scope:salto.nebula.user.v1.ElectronicKey)
  private static final com.saltoapis.nebula.user.v1.ElectronicKey DEFAULT_INSTANCE;
  static {
    DEFAULT_INSTANCE = new com.saltoapis.nebula.user.v1.ElectronicKey();
  }

  public static com.saltoapis.nebula.user.v1.ElectronicKey getDefaultInstance() {
    return DEFAULT_INSTANCE;
  }

  private static final com.google.protobuf.Parser<ElectronicKey>
      PARSER = new com.google.protobuf.AbstractParser<ElectronicKey>() {
    @java.lang.Override
    public ElectronicKey parsePartialFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      Builder builder = newBuilder();
      try {
        builder.mergeFrom(input, extensionRegistry);
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(builder.buildPartial());
      } catch (com.google.protobuf.UninitializedMessageException e) {
        throw e.asInvalidProtocolBufferException().setUnfinishedMessage(builder.buildPartial());
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(e)
            .setUnfinishedMessage(builder.buildPartial());
      }
      return builder.buildPartial();
    }
  };

  public static com.google.protobuf.Parser<ElectronicKey> parser() {
    return PARSER;
  }

  @java.lang.Override
  public com.google.protobuf.Parser<ElectronicKey> getParserForType() {
    return PARSER;
  }

  @java.lang.Override
  public com.saltoapis.nebula.user.v1.ElectronicKey getDefaultInstanceForType() {
    return DEFAULT_INSTANCE;
  }

}

