// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: salto/nebula/openingmodeschedule/v1/opening_mode_schedule.proto

// Protobuf Java Version: 3.25.1
package com.saltoapis.nebula.openingmodeschedule.v1;

/**
 * <pre>
 * The opening mode schedule object
 * </pre>
 *
 * Protobuf type {@code salto.nebula.openingmodeschedule.v1.OpeningModeSchedule}
 */
public  final class OpeningModeSchedule extends
    com.google.protobuf.GeneratedMessageLite<
        OpeningModeSchedule, OpeningModeSchedule.Builder> implements
    // @@protoc_insertion_point(message_implements:salto.nebula.openingmodeschedule.v1.OpeningModeSchedule)
    OpeningModeScheduleOrBuilder {
  private OpeningModeSchedule() {
    name_ = "";
    displayName_ = "";
    days_ = emptyProtobufList();
  }
  public interface DayOrBuilder extends
      // @@protoc_insertion_point(interface_extends:salto.nebula.openingmodeschedule.v1.OpeningModeSchedule.Day)
      com.google.protobuf.MessageLiteOrBuilder {

    /**
     * <pre>
     * Day type
     * </pre>
     *
     * <code>.salto.nebula.type.DayType day_type = 1;</code>
     * @return The enum numeric value on the wire for dayType.
     */
    int getDayTypeValue();
    /**
     * <pre>
     * Day type
     * </pre>
     *
     * <code>.salto.nebula.type.DayType day_type = 1;</code>
     * @return The dayType.
     */
    com.saltoapis.nebula.type.DayType getDayType();

    /**
     * <pre>
     * In case `day_type` is `NORMAL`, the specific day of the week.
     * </pre>
     *
     * <code>.salto.type.DayOfWeek day_of_week = 2;</code>
     * @return The enum numeric value on the wire for dayOfWeek.
     */
    int getDayOfWeekValue();
    /**
     * <pre>
     * In case `day_type` is `NORMAL`, the specific day of the week.
     * </pre>
     *
     * <code>.salto.type.DayOfWeek day_of_week = 2;</code>
     * @return The dayOfWeek.
     */
    com.saltoapis.type.DayOfWeek getDayOfWeek();

    /**
     * <pre>
     * The slot to be applied.
     * </pre>
     *
     * <code>repeated .salto.nebula.openingmodeschedule.v1.OpeningModeSchedule.Day.Slot slots = 3;</code>
     */
    java.util.List<com.saltoapis.nebula.openingmodeschedule.v1.OpeningModeSchedule.Day.Slot> 
        getSlotsList();
    /**
     * <pre>
     * The slot to be applied.
     * </pre>
     *
     * <code>repeated .salto.nebula.openingmodeschedule.v1.OpeningModeSchedule.Day.Slot slots = 3;</code>
     */
    com.saltoapis.nebula.openingmodeschedule.v1.OpeningModeSchedule.Day.Slot getSlots(int index);
    /**
     * <pre>
     * The slot to be applied.
     * </pre>
     *
     * <code>repeated .salto.nebula.openingmodeschedule.v1.OpeningModeSchedule.Day.Slot slots = 3;</code>
     */
    int getSlotsCount();
  }
  /**
   * <pre>
   * Day of the week
   * </pre>
   *
   * Protobuf type {@code salto.nebula.openingmodeschedule.v1.OpeningModeSchedule.Day}
   */
  public  static final class Day extends
      com.google.protobuf.GeneratedMessageLite<
          Day, Day.Builder> implements
      // @@protoc_insertion_point(message_implements:salto.nebula.openingmodeschedule.v1.OpeningModeSchedule.Day)
      DayOrBuilder {
    private Day() {
      slots_ = emptyProtobufList();
    }
    public interface SlotOrBuilder extends
        // @@protoc_insertion_point(interface_extends:salto.nebula.openingmodeschedule.v1.OpeningModeSchedule.Day.Slot)
        com.google.protobuf.MessageLiteOrBuilder {

      /**
       * <pre>
       * The opening mode to be applied.
       * </pre>
       *
       * <code>.salto.nebula.type.OpeningMode opening_mode = 1;</code>
       * @return The enum numeric value on the wire for openingMode.
       */
      int getOpeningModeValue();
      /**
       * <pre>
       * The opening mode to be applied.
       * </pre>
       *
       * <code>.salto.nebula.type.OpeningMode opening_mode = 1;</code>
       * @return The openingMode.
       */
      com.saltoapis.nebula.type.OpeningMode getOpeningMode();

      /**
       * <pre>
       * Start time of day when schedule starts being valid.
       * </pre>
       *
       * <code>.salto.type.TimeOfDay start_time = 2;</code>
       * @return Whether the startTime field is set.
       */
      boolean hasStartTime();
      /**
       * <pre>
       * Start time of day when schedule starts being valid.
       * </pre>
       *
       * <code>.salto.type.TimeOfDay start_time = 2;</code>
       * @return The startTime.
       */
      com.saltoapis.type.TimeOfDay getStartTime();

      /**
       * <pre>
       * End time of day when schedule ends being valid.
       * </pre>
       *
       * <code>.salto.type.TimeOfDay end_time = 3;</code>
       * @return Whether the endTime field is set.
       */
      boolean hasEndTime();
      /**
       * <pre>
       * End time of day when schedule ends being valid.
       * </pre>
       *
       * <code>.salto.type.TimeOfDay end_time = 3;</code>
       * @return The endTime.
       */
      com.saltoapis.type.TimeOfDay getEndTime();
    }
    /**
     * <pre>
     * The time period in which the opening mode will be valid
     * </pre>
     *
     * Protobuf type {@code salto.nebula.openingmodeschedule.v1.OpeningModeSchedule.Day.Slot}
     */
    public  static final class Slot extends
        com.google.protobuf.GeneratedMessageLite<
            Slot, Slot.Builder> implements
        // @@protoc_insertion_point(message_implements:salto.nebula.openingmodeschedule.v1.OpeningModeSchedule.Day.Slot)
        SlotOrBuilder {
      private Slot() {
      }
      private int bitField0_;
      public static final int OPENING_MODE_FIELD_NUMBER = 1;
      private int openingMode_;
      /**
       * <pre>
       * The opening mode to be applied.
       * </pre>
       *
       * <code>.salto.nebula.type.OpeningMode opening_mode = 1;</code>
       * @return The enum numeric value on the wire for openingMode.
       */
      @java.lang.Override
      public int getOpeningModeValue() {
        return openingMode_;
      }
      /**
       * <pre>
       * The opening mode to be applied.
       * </pre>
       *
       * <code>.salto.nebula.type.OpeningMode opening_mode = 1;</code>
       * @return The openingMode.
       */
      @java.lang.Override
      public com.saltoapis.nebula.type.OpeningMode getOpeningMode() {
        com.saltoapis.nebula.type.OpeningMode result = com.saltoapis.nebula.type.OpeningMode.forNumber(openingMode_);
        return result == null ? com.saltoapis.nebula.type.OpeningMode.UNRECOGNIZED : result;
      }
      /**
       * <pre>
       * The opening mode to be applied.
       * </pre>
       *
       * <code>.salto.nebula.type.OpeningMode opening_mode = 1;</code>
       * @param value The enum numeric value on the wire for openingMode to set.
       */
      private void setOpeningModeValue(int value) {
          openingMode_ = value;
      }
      /**
       * <pre>
       * The opening mode to be applied.
       * </pre>
       *
       * <code>.salto.nebula.type.OpeningMode opening_mode = 1;</code>
       * @param value The openingMode to set.
       */
      private void setOpeningMode(com.saltoapis.nebula.type.OpeningMode value) {
        openingMode_ = value.getNumber();

      }
      /**
       * <pre>
       * The opening mode to be applied.
       * </pre>
       *
       * <code>.salto.nebula.type.OpeningMode opening_mode = 1;</code>
       */
      private void clearOpeningMode() {

        openingMode_ = 0;
      }

      public static final int START_TIME_FIELD_NUMBER = 2;
      private com.saltoapis.type.TimeOfDay startTime_;
      /**
       * <pre>
       * Start time of day when schedule starts being valid.
       * </pre>
       *
       * <code>.salto.type.TimeOfDay start_time = 2;</code>
       */
      @java.lang.Override
      public boolean hasStartTime() {
        return ((bitField0_ & 0x00000001) != 0);
      }
      /**
       * <pre>
       * Start time of day when schedule starts being valid.
       * </pre>
       *
       * <code>.salto.type.TimeOfDay start_time = 2;</code>
       */
      @java.lang.Override
      public com.saltoapis.type.TimeOfDay getStartTime() {
        return startTime_ == null ? com.saltoapis.type.TimeOfDay.getDefaultInstance() : startTime_;
      }
      /**
       * <pre>
       * Start time of day when schedule starts being valid.
       * </pre>
       *
       * <code>.salto.type.TimeOfDay start_time = 2;</code>
       */
      private void setStartTime(com.saltoapis.type.TimeOfDay value) {
        value.getClass();
  startTime_ = value;
        bitField0_ |= 0x00000001;
        }
      /**
       * <pre>
       * Start time of day when schedule starts being valid.
       * </pre>
       *
       * <code>.salto.type.TimeOfDay start_time = 2;</code>
       */
      @java.lang.SuppressWarnings({"ReferenceEquality"})
      private void mergeStartTime(com.saltoapis.type.TimeOfDay value) {
        value.getClass();
  if (startTime_ != null &&
            startTime_ != com.saltoapis.type.TimeOfDay.getDefaultInstance()) {
          startTime_ =
            com.saltoapis.type.TimeOfDay.newBuilder(startTime_).mergeFrom(value).buildPartial();
        } else {
          startTime_ = value;
        }
        bitField0_ |= 0x00000001;
      }
      /**
       * <pre>
       * Start time of day when schedule starts being valid.
       * </pre>
       *
       * <code>.salto.type.TimeOfDay start_time = 2;</code>
       */
      private void clearStartTime() {  startTime_ = null;
        bitField0_ = (bitField0_ & ~0x00000001);
      }

      public static final int END_TIME_FIELD_NUMBER = 3;
      private com.saltoapis.type.TimeOfDay endTime_;
      /**
       * <pre>
       * End time of day when schedule ends being valid.
       * </pre>
       *
       * <code>.salto.type.TimeOfDay end_time = 3;</code>
       */
      @java.lang.Override
      public boolean hasEndTime() {
        return ((bitField0_ & 0x00000002) != 0);
      }
      /**
       * <pre>
       * End time of day when schedule ends being valid.
       * </pre>
       *
       * <code>.salto.type.TimeOfDay end_time = 3;</code>
       */
      @java.lang.Override
      public com.saltoapis.type.TimeOfDay getEndTime() {
        return endTime_ == null ? com.saltoapis.type.TimeOfDay.getDefaultInstance() : endTime_;
      }
      /**
       * <pre>
       * End time of day when schedule ends being valid.
       * </pre>
       *
       * <code>.salto.type.TimeOfDay end_time = 3;</code>
       */
      private void setEndTime(com.saltoapis.type.TimeOfDay value) {
        value.getClass();
  endTime_ = value;
        bitField0_ |= 0x00000002;
        }
      /**
       * <pre>
       * End time of day when schedule ends being valid.
       * </pre>
       *
       * <code>.salto.type.TimeOfDay end_time = 3;</code>
       */
      @java.lang.SuppressWarnings({"ReferenceEquality"})
      private void mergeEndTime(com.saltoapis.type.TimeOfDay value) {
        value.getClass();
  if (endTime_ != null &&
            endTime_ != com.saltoapis.type.TimeOfDay.getDefaultInstance()) {
          endTime_ =
            com.saltoapis.type.TimeOfDay.newBuilder(endTime_).mergeFrom(value).buildPartial();
        } else {
          endTime_ = value;
        }
        bitField0_ |= 0x00000002;
      }
      /**
       * <pre>
       * End time of day when schedule ends being valid.
       * </pre>
       *
       * <code>.salto.type.TimeOfDay end_time = 3;</code>
       */
      private void clearEndTime() {  endTime_ = null;
        bitField0_ = (bitField0_ & ~0x00000002);
      }

      public static com.saltoapis.nebula.openingmodeschedule.v1.OpeningModeSchedule.Day.Slot parseFrom(
          java.nio.ByteBuffer data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return com.google.protobuf.GeneratedMessageLite.parseFrom(
            DEFAULT_INSTANCE, data);
      }
      public static com.saltoapis.nebula.openingmodeschedule.v1.OpeningModeSchedule.Day.Slot parseFrom(
          java.nio.ByteBuffer data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return com.google.protobuf.GeneratedMessageLite.parseFrom(
            DEFAULT_INSTANCE, data, extensionRegistry);
      }
      public static com.saltoapis.nebula.openingmodeschedule.v1.OpeningModeSchedule.Day.Slot parseFrom(
          com.google.protobuf.ByteString data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return com.google.protobuf.GeneratedMessageLite.parseFrom(
            DEFAULT_INSTANCE, data);
      }
      public static com.saltoapis.nebula.openingmodeschedule.v1.OpeningModeSchedule.Day.Slot parseFrom(
          com.google.protobuf.ByteString data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return com.google.protobuf.GeneratedMessageLite.parseFrom(
            DEFAULT_INSTANCE, data, extensionRegistry);
      }
      public static com.saltoapis.nebula.openingmodeschedule.v1.OpeningModeSchedule.Day.Slot parseFrom(byte[] data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return com.google.protobuf.GeneratedMessageLite.parseFrom(
            DEFAULT_INSTANCE, data);
      }
      public static com.saltoapis.nebula.openingmodeschedule.v1.OpeningModeSchedule.Day.Slot parseFrom(
          byte[] data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return com.google.protobuf.GeneratedMessageLite.parseFrom(
            DEFAULT_INSTANCE, data, extensionRegistry);
      }
      public static com.saltoapis.nebula.openingmodeschedule.v1.OpeningModeSchedule.Day.Slot parseFrom(java.io.InputStream input)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageLite.parseFrom(
            DEFAULT_INSTANCE, input);
      }
      public static com.saltoapis.nebula.openingmodeschedule.v1.OpeningModeSchedule.Day.Slot parseFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageLite.parseFrom(
            DEFAULT_INSTANCE, input, extensionRegistry);
      }

      public static com.saltoapis.nebula.openingmodeschedule.v1.OpeningModeSchedule.Day.Slot parseDelimitedFrom(java.io.InputStream input)
          throws java.io.IOException {
        return parseDelimitedFrom(DEFAULT_INSTANCE, input);
      }

      public static com.saltoapis.nebula.openingmodeschedule.v1.OpeningModeSchedule.Day.Slot parseDelimitedFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return parseDelimitedFrom(DEFAULT_INSTANCE, input, extensionRegistry);
      }
      public static com.saltoapis.nebula.openingmodeschedule.v1.OpeningModeSchedule.Day.Slot parseFrom(
          com.google.protobuf.CodedInputStream input)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageLite.parseFrom(
            DEFAULT_INSTANCE, input);
      }
      public static com.saltoapis.nebula.openingmodeschedule.v1.OpeningModeSchedule.Day.Slot parseFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageLite.parseFrom(
            DEFAULT_INSTANCE, input, extensionRegistry);
      }

      public static Builder newBuilder() {
        return (Builder) DEFAULT_INSTANCE.createBuilder();
      }
      public static Builder newBuilder(com.saltoapis.nebula.openingmodeschedule.v1.OpeningModeSchedule.Day.Slot prototype) {
        return DEFAULT_INSTANCE.createBuilder(prototype);
      }

      /**
       * <pre>
       * The time period in which the opening mode will be valid
       * </pre>
       *
       * Protobuf type {@code salto.nebula.openingmodeschedule.v1.OpeningModeSchedule.Day.Slot}
       */
      public static final class Builder extends
          com.google.protobuf.GeneratedMessageLite.Builder<
            com.saltoapis.nebula.openingmodeschedule.v1.OpeningModeSchedule.Day.Slot, Builder> implements
          // @@protoc_insertion_point(builder_implements:salto.nebula.openingmodeschedule.v1.OpeningModeSchedule.Day.Slot)
          com.saltoapis.nebula.openingmodeschedule.v1.OpeningModeSchedule.Day.SlotOrBuilder {
        // Construct using com.saltoapis.nebula.openingmodeschedule.v1.OpeningModeSchedule.Day.Slot.newBuilder()
        private Builder() {
          super(DEFAULT_INSTANCE);
        }


        /**
         * <pre>
         * The opening mode to be applied.
         * </pre>
         *
         * <code>.salto.nebula.type.OpeningMode opening_mode = 1;</code>
         * @return The enum numeric value on the wire for openingMode.
         */
        @java.lang.Override
        public int getOpeningModeValue() {
          return instance.getOpeningModeValue();
        }
        /**
         * <pre>
         * The opening mode to be applied.
         * </pre>
         *
         * <code>.salto.nebula.type.OpeningMode opening_mode = 1;</code>
         * @param value The openingMode to set.
         * @return This builder for chaining.
         */
        public Builder setOpeningModeValue(int value) {
          copyOnWrite();
          instance.setOpeningModeValue(value);
          return this;
        }
        /**
         * <pre>
         * The opening mode to be applied.
         * </pre>
         *
         * <code>.salto.nebula.type.OpeningMode opening_mode = 1;</code>
         * @return The openingMode.
         */
        @java.lang.Override
        public com.saltoapis.nebula.type.OpeningMode getOpeningMode() {
          return instance.getOpeningMode();
        }
        /**
         * <pre>
         * The opening mode to be applied.
         * </pre>
         *
         * <code>.salto.nebula.type.OpeningMode opening_mode = 1;</code>
         * @param value The enum numeric value on the wire for openingMode to set.
         * @return This builder for chaining.
         */
        public Builder setOpeningMode(com.saltoapis.nebula.type.OpeningMode value) {
          copyOnWrite();
          instance.setOpeningMode(value);
          return this;
        }
        /**
         * <pre>
         * The opening mode to be applied.
         * </pre>
         *
         * <code>.salto.nebula.type.OpeningMode opening_mode = 1;</code>
         * @return This builder for chaining.
         */
        public Builder clearOpeningMode() {
          copyOnWrite();
          instance.clearOpeningMode();
          return this;
        }

        /**
         * <pre>
         * Start time of day when schedule starts being valid.
         * </pre>
         *
         * <code>.salto.type.TimeOfDay start_time = 2;</code>
         */
        @java.lang.Override
        public boolean hasStartTime() {
          return instance.hasStartTime();
        }
        /**
         * <pre>
         * Start time of day when schedule starts being valid.
         * </pre>
         *
         * <code>.salto.type.TimeOfDay start_time = 2;</code>
         */
        @java.lang.Override
        public com.saltoapis.type.TimeOfDay getStartTime() {
          return instance.getStartTime();
        }
        /**
         * <pre>
         * Start time of day when schedule starts being valid.
         * </pre>
         *
         * <code>.salto.type.TimeOfDay start_time = 2;</code>
         */
        public Builder setStartTime(com.saltoapis.type.TimeOfDay value) {
          copyOnWrite();
          instance.setStartTime(value);
          return this;
          }
        /**
         * <pre>
         * Start time of day when schedule starts being valid.
         * </pre>
         *
         * <code>.salto.type.TimeOfDay start_time = 2;</code>
         */
        public Builder setStartTime(
            com.saltoapis.type.TimeOfDay.Builder builderForValue) {
          copyOnWrite();
          instance.setStartTime(builderForValue.build());
          return this;
        }
        /**
         * <pre>
         * Start time of day when schedule starts being valid.
         * </pre>
         *
         * <code>.salto.type.TimeOfDay start_time = 2;</code>
         */
        public Builder mergeStartTime(com.saltoapis.type.TimeOfDay value) {
          copyOnWrite();
          instance.mergeStartTime(value);
          return this;
        }
        /**
         * <pre>
         * Start time of day when schedule starts being valid.
         * </pre>
         *
         * <code>.salto.type.TimeOfDay start_time = 2;</code>
         */
        public Builder clearStartTime() {  copyOnWrite();
          instance.clearStartTime();
          return this;
        }

        /**
         * <pre>
         * End time of day when schedule ends being valid.
         * </pre>
         *
         * <code>.salto.type.TimeOfDay end_time = 3;</code>
         */
        @java.lang.Override
        public boolean hasEndTime() {
          return instance.hasEndTime();
        }
        /**
         * <pre>
         * End time of day when schedule ends being valid.
         * </pre>
         *
         * <code>.salto.type.TimeOfDay end_time = 3;</code>
         */
        @java.lang.Override
        public com.saltoapis.type.TimeOfDay getEndTime() {
          return instance.getEndTime();
        }
        /**
         * <pre>
         * End time of day when schedule ends being valid.
         * </pre>
         *
         * <code>.salto.type.TimeOfDay end_time = 3;</code>
         */
        public Builder setEndTime(com.saltoapis.type.TimeOfDay value) {
          copyOnWrite();
          instance.setEndTime(value);
          return this;
          }
        /**
         * <pre>
         * End time of day when schedule ends being valid.
         * </pre>
         *
         * <code>.salto.type.TimeOfDay end_time = 3;</code>
         */
        public Builder setEndTime(
            com.saltoapis.type.TimeOfDay.Builder builderForValue) {
          copyOnWrite();
          instance.setEndTime(builderForValue.build());
          return this;
        }
        /**
         * <pre>
         * End time of day when schedule ends being valid.
         * </pre>
         *
         * <code>.salto.type.TimeOfDay end_time = 3;</code>
         */
        public Builder mergeEndTime(com.saltoapis.type.TimeOfDay value) {
          copyOnWrite();
          instance.mergeEndTime(value);
          return this;
        }
        /**
         * <pre>
         * End time of day when schedule ends being valid.
         * </pre>
         *
         * <code>.salto.type.TimeOfDay end_time = 3;</code>
         */
        public Builder clearEndTime() {  copyOnWrite();
          instance.clearEndTime();
          return this;
        }

        // @@protoc_insertion_point(builder_scope:salto.nebula.openingmodeschedule.v1.OpeningModeSchedule.Day.Slot)
      }
      @java.lang.Override
      @java.lang.SuppressWarnings({"unchecked", "fallthrough"})
      protected final java.lang.Object dynamicMethod(
          com.google.protobuf.GeneratedMessageLite.MethodToInvoke method,
          java.lang.Object arg0, java.lang.Object arg1) {
        switch (method) {
          case NEW_MUTABLE_INSTANCE: {
            return new com.saltoapis.nebula.openingmodeschedule.v1.OpeningModeSchedule.Day.Slot();
          }
          case NEW_BUILDER: {
            return new Builder();
          }
          case BUILD_MESSAGE_INFO: {
              java.lang.Object[] objects = new java.lang.Object[] {
                "bitField0_",
                "openingMode_",
                "startTime_",
                "endTime_",
              };
              java.lang.String info =
                  "\u0000\u0003\u0000\u0001\u0001\u0003\u0003\u0000\u0000\u0000\u0001\f\u0002\u1009" +
                  "\u0000\u0003\u1009\u0001";
              return newMessageInfo(DEFAULT_INSTANCE, info, objects);
          }
          // fall through
          case GET_DEFAULT_INSTANCE: {
            return DEFAULT_INSTANCE;
          }
          case GET_PARSER: {
            com.google.protobuf.Parser<com.saltoapis.nebula.openingmodeschedule.v1.OpeningModeSchedule.Day.Slot> parser = PARSER;
            if (parser == null) {
              synchronized (com.saltoapis.nebula.openingmodeschedule.v1.OpeningModeSchedule.Day.Slot.class) {
                parser = PARSER;
                if (parser == null) {
                  parser =
                      new DefaultInstanceBasedParser<com.saltoapis.nebula.openingmodeschedule.v1.OpeningModeSchedule.Day.Slot>(
                          DEFAULT_INSTANCE);
                  PARSER = parser;
                }
              }
            }
            return parser;
        }
        case GET_MEMOIZED_IS_INITIALIZED: {
          return (byte) 1;
        }
        case SET_MEMOIZED_IS_INITIALIZED: {
          return null;
        }
        }
        throw new UnsupportedOperationException();
      }


      // @@protoc_insertion_point(class_scope:salto.nebula.openingmodeschedule.v1.OpeningModeSchedule.Day.Slot)
      private static final com.saltoapis.nebula.openingmodeschedule.v1.OpeningModeSchedule.Day.Slot DEFAULT_INSTANCE;
      static {
        Slot defaultInstance = new Slot();
        // New instances are implicitly immutable so no need to make
        // immutable.
        DEFAULT_INSTANCE = defaultInstance;
        com.google.protobuf.GeneratedMessageLite.registerDefaultInstance(
          Slot.class, defaultInstance);
      }

      public static com.saltoapis.nebula.openingmodeschedule.v1.OpeningModeSchedule.Day.Slot getDefaultInstance() {
        return DEFAULT_INSTANCE;
      }

      private static volatile com.google.protobuf.Parser<Slot> PARSER;

      public static com.google.protobuf.Parser<Slot> parser() {
        return DEFAULT_INSTANCE.getParserForType();
      }
    }

    public static final int DAY_TYPE_FIELD_NUMBER = 1;
    private int dayType_;
    /**
     * <pre>
     * Day type
     * </pre>
     *
     * <code>.salto.nebula.type.DayType day_type = 1;</code>
     * @return The enum numeric value on the wire for dayType.
     */
    @java.lang.Override
    public int getDayTypeValue() {
      return dayType_;
    }
    /**
     * <pre>
     * Day type
     * </pre>
     *
     * <code>.salto.nebula.type.DayType day_type = 1;</code>
     * @return The dayType.
     */
    @java.lang.Override
    public com.saltoapis.nebula.type.DayType getDayType() {
      com.saltoapis.nebula.type.DayType result = com.saltoapis.nebula.type.DayType.forNumber(dayType_);
      return result == null ? com.saltoapis.nebula.type.DayType.UNRECOGNIZED : result;
    }
    /**
     * <pre>
     * Day type
     * </pre>
     *
     * <code>.salto.nebula.type.DayType day_type = 1;</code>
     * @param value The enum numeric value on the wire for dayType to set.
     */
    private void setDayTypeValue(int value) {
        dayType_ = value;
    }
    /**
     * <pre>
     * Day type
     * </pre>
     *
     * <code>.salto.nebula.type.DayType day_type = 1;</code>
     * @param value The dayType to set.
     */
    private void setDayType(com.saltoapis.nebula.type.DayType value) {
      dayType_ = value.getNumber();

    }
    /**
     * <pre>
     * Day type
     * </pre>
     *
     * <code>.salto.nebula.type.DayType day_type = 1;</code>
     */
    private void clearDayType() {

      dayType_ = 0;
    }

    public static final int DAY_OF_WEEK_FIELD_NUMBER = 2;
    private int dayOfWeek_;
    /**
     * <pre>
     * In case `day_type` is `NORMAL`, the specific day of the week.
     * </pre>
     *
     * <code>.salto.type.DayOfWeek day_of_week = 2;</code>
     * @return The enum numeric value on the wire for dayOfWeek.
     */
    @java.lang.Override
    public int getDayOfWeekValue() {
      return dayOfWeek_;
    }
    /**
     * <pre>
     * In case `day_type` is `NORMAL`, the specific day of the week.
     * </pre>
     *
     * <code>.salto.type.DayOfWeek day_of_week = 2;</code>
     * @return The dayOfWeek.
     */
    @java.lang.Override
    public com.saltoapis.type.DayOfWeek getDayOfWeek() {
      com.saltoapis.type.DayOfWeek result = com.saltoapis.type.DayOfWeek.forNumber(dayOfWeek_);
      return result == null ? com.saltoapis.type.DayOfWeek.UNRECOGNIZED : result;
    }
    /**
     * <pre>
     * In case `day_type` is `NORMAL`, the specific day of the week.
     * </pre>
     *
     * <code>.salto.type.DayOfWeek day_of_week = 2;</code>
     * @param value The enum numeric value on the wire for dayOfWeek to set.
     */
    private void setDayOfWeekValue(int value) {
        dayOfWeek_ = value;
    }
    /**
     * <pre>
     * In case `day_type` is `NORMAL`, the specific day of the week.
     * </pre>
     *
     * <code>.salto.type.DayOfWeek day_of_week = 2;</code>
     * @param value The dayOfWeek to set.
     */
    private void setDayOfWeek(com.saltoapis.type.DayOfWeek value) {
      dayOfWeek_ = value.getNumber();

    }
    /**
     * <pre>
     * In case `day_type` is `NORMAL`, the specific day of the week.
     * </pre>
     *
     * <code>.salto.type.DayOfWeek day_of_week = 2;</code>
     */
    private void clearDayOfWeek() {

      dayOfWeek_ = 0;
    }

    public static final int SLOTS_FIELD_NUMBER = 3;
    private com.google.protobuf.Internal.ProtobufList<com.saltoapis.nebula.openingmodeschedule.v1.OpeningModeSchedule.Day.Slot> slots_;
    /**
     * <pre>
     * The slot to be applied.
     * </pre>
     *
     * <code>repeated .salto.nebula.openingmodeschedule.v1.OpeningModeSchedule.Day.Slot slots = 3;</code>
     */
    @java.lang.Override
    public java.util.List<com.saltoapis.nebula.openingmodeschedule.v1.OpeningModeSchedule.Day.Slot> getSlotsList() {
      return slots_;
    }
    /**
     * <pre>
     * The slot to be applied.
     * </pre>
     *
     * <code>repeated .salto.nebula.openingmodeschedule.v1.OpeningModeSchedule.Day.Slot slots = 3;</code>
     */
    public java.util.List<? extends com.saltoapis.nebula.openingmodeschedule.v1.OpeningModeSchedule.Day.SlotOrBuilder> 
        getSlotsOrBuilderList() {
      return slots_;
    }
    /**
     * <pre>
     * The slot to be applied.
     * </pre>
     *
     * <code>repeated .salto.nebula.openingmodeschedule.v1.OpeningModeSchedule.Day.Slot slots = 3;</code>
     */
    @java.lang.Override
    public int getSlotsCount() {
      return slots_.size();
    }
    /**
     * <pre>
     * The slot to be applied.
     * </pre>
     *
     * <code>repeated .salto.nebula.openingmodeschedule.v1.OpeningModeSchedule.Day.Slot slots = 3;</code>
     */
    @java.lang.Override
    public com.saltoapis.nebula.openingmodeschedule.v1.OpeningModeSchedule.Day.Slot getSlots(int index) {
      return slots_.get(index);
    }
    /**
     * <pre>
     * The slot to be applied.
     * </pre>
     *
     * <code>repeated .salto.nebula.openingmodeschedule.v1.OpeningModeSchedule.Day.Slot slots = 3;</code>
     */
    public com.saltoapis.nebula.openingmodeschedule.v1.OpeningModeSchedule.Day.SlotOrBuilder getSlotsOrBuilder(
        int index) {
      return slots_.get(index);
    }
    private void ensureSlotsIsMutable() {
      com.google.protobuf.Internal.ProtobufList<com.saltoapis.nebula.openingmodeschedule.v1.OpeningModeSchedule.Day.Slot> tmp = slots_;
      if (!tmp.isModifiable()) {
        slots_ =
            com.google.protobuf.GeneratedMessageLite.mutableCopy(tmp);
       }
    }

    /**
     * <pre>
     * The slot to be applied.
     * </pre>
     *
     * <code>repeated .salto.nebula.openingmodeschedule.v1.OpeningModeSchedule.Day.Slot slots = 3;</code>
     */
    private void setSlots(
        int index, com.saltoapis.nebula.openingmodeschedule.v1.OpeningModeSchedule.Day.Slot value) {
      value.getClass();
  ensureSlotsIsMutable();
      slots_.set(index, value);
    }
    /**
     * <pre>
     * The slot to be applied.
     * </pre>
     *
     * <code>repeated .salto.nebula.openingmodeschedule.v1.OpeningModeSchedule.Day.Slot slots = 3;</code>
     */
    private void addSlots(com.saltoapis.nebula.openingmodeschedule.v1.OpeningModeSchedule.Day.Slot value) {
      value.getClass();
  ensureSlotsIsMutable();
      slots_.add(value);
    }
    /**
     * <pre>
     * The slot to be applied.
     * </pre>
     *
     * <code>repeated .salto.nebula.openingmodeschedule.v1.OpeningModeSchedule.Day.Slot slots = 3;</code>
     */
    private void addSlots(
        int index, com.saltoapis.nebula.openingmodeschedule.v1.OpeningModeSchedule.Day.Slot value) {
      value.getClass();
  ensureSlotsIsMutable();
      slots_.add(index, value);
    }
    /**
     * <pre>
     * The slot to be applied.
     * </pre>
     *
     * <code>repeated .salto.nebula.openingmodeschedule.v1.OpeningModeSchedule.Day.Slot slots = 3;</code>
     */
    private void addAllSlots(
        java.lang.Iterable<? extends com.saltoapis.nebula.openingmodeschedule.v1.OpeningModeSchedule.Day.Slot> values) {
      ensureSlotsIsMutable();
      com.google.protobuf.AbstractMessageLite.addAll(
          values, slots_);
    }
    /**
     * <pre>
     * The slot to be applied.
     * </pre>
     *
     * <code>repeated .salto.nebula.openingmodeschedule.v1.OpeningModeSchedule.Day.Slot slots = 3;</code>
     */
    private void clearSlots() {
      slots_ = emptyProtobufList();
    }
    /**
     * <pre>
     * The slot to be applied.
     * </pre>
     *
     * <code>repeated .salto.nebula.openingmodeschedule.v1.OpeningModeSchedule.Day.Slot slots = 3;</code>
     */
    private void removeSlots(int index) {
      ensureSlotsIsMutable();
      slots_.remove(index);
    }

    public static com.saltoapis.nebula.openingmodeschedule.v1.OpeningModeSchedule.Day parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static com.saltoapis.nebula.openingmodeschedule.v1.OpeningModeSchedule.Day parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static com.saltoapis.nebula.openingmodeschedule.v1.OpeningModeSchedule.Day parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static com.saltoapis.nebula.openingmodeschedule.v1.OpeningModeSchedule.Day parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static com.saltoapis.nebula.openingmodeschedule.v1.OpeningModeSchedule.Day parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static com.saltoapis.nebula.openingmodeschedule.v1.OpeningModeSchedule.Day parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static com.saltoapis.nebula.openingmodeschedule.v1.OpeningModeSchedule.Day parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input);
    }
    public static com.saltoapis.nebula.openingmodeschedule.v1.OpeningModeSchedule.Day parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input, extensionRegistry);
    }

    public static com.saltoapis.nebula.openingmodeschedule.v1.OpeningModeSchedule.Day parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return parseDelimitedFrom(DEFAULT_INSTANCE, input);
    }

    public static com.saltoapis.nebula.openingmodeschedule.v1.OpeningModeSchedule.Day parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return parseDelimitedFrom(DEFAULT_INSTANCE, input, extensionRegistry);
    }
    public static com.saltoapis.nebula.openingmodeschedule.v1.OpeningModeSchedule.Day parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input);
    }
    public static com.saltoapis.nebula.openingmodeschedule.v1.OpeningModeSchedule.Day parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input, extensionRegistry);
    }

    public static Builder newBuilder() {
      return (Builder) DEFAULT_INSTANCE.createBuilder();
    }
    public static Builder newBuilder(com.saltoapis.nebula.openingmodeschedule.v1.OpeningModeSchedule.Day prototype) {
      return DEFAULT_INSTANCE.createBuilder(prototype);
    }

    /**
     * <pre>
     * Day of the week
     * </pre>
     *
     * Protobuf type {@code salto.nebula.openingmodeschedule.v1.OpeningModeSchedule.Day}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageLite.Builder<
          com.saltoapis.nebula.openingmodeschedule.v1.OpeningModeSchedule.Day, Builder> implements
        // @@protoc_insertion_point(builder_implements:salto.nebula.openingmodeschedule.v1.OpeningModeSchedule.Day)
        com.saltoapis.nebula.openingmodeschedule.v1.OpeningModeSchedule.DayOrBuilder {
      // Construct using com.saltoapis.nebula.openingmodeschedule.v1.OpeningModeSchedule.Day.newBuilder()
      private Builder() {
        super(DEFAULT_INSTANCE);
      }


      /**
       * <pre>
       * Day type
       * </pre>
       *
       * <code>.salto.nebula.type.DayType day_type = 1;</code>
       * @return The enum numeric value on the wire for dayType.
       */
      @java.lang.Override
      public int getDayTypeValue() {
        return instance.getDayTypeValue();
      }
      /**
       * <pre>
       * Day type
       * </pre>
       *
       * <code>.salto.nebula.type.DayType day_type = 1;</code>
       * @param value The dayType to set.
       * @return This builder for chaining.
       */
      public Builder setDayTypeValue(int value) {
        copyOnWrite();
        instance.setDayTypeValue(value);
        return this;
      }
      /**
       * <pre>
       * Day type
       * </pre>
       *
       * <code>.salto.nebula.type.DayType day_type = 1;</code>
       * @return The dayType.
       */
      @java.lang.Override
      public com.saltoapis.nebula.type.DayType getDayType() {
        return instance.getDayType();
      }
      /**
       * <pre>
       * Day type
       * </pre>
       *
       * <code>.salto.nebula.type.DayType day_type = 1;</code>
       * @param value The enum numeric value on the wire for dayType to set.
       * @return This builder for chaining.
       */
      public Builder setDayType(com.saltoapis.nebula.type.DayType value) {
        copyOnWrite();
        instance.setDayType(value);
        return this;
      }
      /**
       * <pre>
       * Day type
       * </pre>
       *
       * <code>.salto.nebula.type.DayType day_type = 1;</code>
       * @return This builder for chaining.
       */
      public Builder clearDayType() {
        copyOnWrite();
        instance.clearDayType();
        return this;
      }

      /**
       * <pre>
       * In case `day_type` is `NORMAL`, the specific day of the week.
       * </pre>
       *
       * <code>.salto.type.DayOfWeek day_of_week = 2;</code>
       * @return The enum numeric value on the wire for dayOfWeek.
       */
      @java.lang.Override
      public int getDayOfWeekValue() {
        return instance.getDayOfWeekValue();
      }
      /**
       * <pre>
       * In case `day_type` is `NORMAL`, the specific day of the week.
       * </pre>
       *
       * <code>.salto.type.DayOfWeek day_of_week = 2;</code>
       * @param value The dayOfWeek to set.
       * @return This builder for chaining.
       */
      public Builder setDayOfWeekValue(int value) {
        copyOnWrite();
        instance.setDayOfWeekValue(value);
        return this;
      }
      /**
       * <pre>
       * In case `day_type` is `NORMAL`, the specific day of the week.
       * </pre>
       *
       * <code>.salto.type.DayOfWeek day_of_week = 2;</code>
       * @return The dayOfWeek.
       */
      @java.lang.Override
      public com.saltoapis.type.DayOfWeek getDayOfWeek() {
        return instance.getDayOfWeek();
      }
      /**
       * <pre>
       * In case `day_type` is `NORMAL`, the specific day of the week.
       * </pre>
       *
       * <code>.salto.type.DayOfWeek day_of_week = 2;</code>
       * @param value The enum numeric value on the wire for dayOfWeek to set.
       * @return This builder for chaining.
       */
      public Builder setDayOfWeek(com.saltoapis.type.DayOfWeek value) {
        copyOnWrite();
        instance.setDayOfWeek(value);
        return this;
      }
      /**
       * <pre>
       * In case `day_type` is `NORMAL`, the specific day of the week.
       * </pre>
       *
       * <code>.salto.type.DayOfWeek day_of_week = 2;</code>
       * @return This builder for chaining.
       */
      public Builder clearDayOfWeek() {
        copyOnWrite();
        instance.clearDayOfWeek();
        return this;
      }

      /**
       * <pre>
       * The slot to be applied.
       * </pre>
       *
       * <code>repeated .salto.nebula.openingmodeschedule.v1.OpeningModeSchedule.Day.Slot slots = 3;</code>
       */
      @java.lang.Override
      public java.util.List<com.saltoapis.nebula.openingmodeschedule.v1.OpeningModeSchedule.Day.Slot> getSlotsList() {
        return java.util.Collections.unmodifiableList(
            instance.getSlotsList());
      }
      /**
       * <pre>
       * The slot to be applied.
       * </pre>
       *
       * <code>repeated .salto.nebula.openingmodeschedule.v1.OpeningModeSchedule.Day.Slot slots = 3;</code>
       */
      @java.lang.Override
      public int getSlotsCount() {
        return instance.getSlotsCount();
      }/**
       * <pre>
       * The slot to be applied.
       * </pre>
       *
       * <code>repeated .salto.nebula.openingmodeschedule.v1.OpeningModeSchedule.Day.Slot slots = 3;</code>
       */
      @java.lang.Override
      public com.saltoapis.nebula.openingmodeschedule.v1.OpeningModeSchedule.Day.Slot getSlots(int index) {
        return instance.getSlots(index);
      }
      /**
       * <pre>
       * The slot to be applied.
       * </pre>
       *
       * <code>repeated .salto.nebula.openingmodeschedule.v1.OpeningModeSchedule.Day.Slot slots = 3;</code>
       */
      public Builder setSlots(
          int index, com.saltoapis.nebula.openingmodeschedule.v1.OpeningModeSchedule.Day.Slot value) {
        copyOnWrite();
        instance.setSlots(index, value);
        return this;
      }
      /**
       * <pre>
       * The slot to be applied.
       * </pre>
       *
       * <code>repeated .salto.nebula.openingmodeschedule.v1.OpeningModeSchedule.Day.Slot slots = 3;</code>
       */
      public Builder setSlots(
          int index, com.saltoapis.nebula.openingmodeschedule.v1.OpeningModeSchedule.Day.Slot.Builder builderForValue) {
        copyOnWrite();
        instance.setSlots(index,
            builderForValue.build());
        return this;
      }
      /**
       * <pre>
       * The slot to be applied.
       * </pre>
       *
       * <code>repeated .salto.nebula.openingmodeschedule.v1.OpeningModeSchedule.Day.Slot slots = 3;</code>
       */
      public Builder addSlots(com.saltoapis.nebula.openingmodeschedule.v1.OpeningModeSchedule.Day.Slot value) {
        copyOnWrite();
        instance.addSlots(value);
        return this;
      }
      /**
       * <pre>
       * The slot to be applied.
       * </pre>
       *
       * <code>repeated .salto.nebula.openingmodeschedule.v1.OpeningModeSchedule.Day.Slot slots = 3;</code>
       */
      public Builder addSlots(
          int index, com.saltoapis.nebula.openingmodeschedule.v1.OpeningModeSchedule.Day.Slot value) {
        copyOnWrite();
        instance.addSlots(index, value);
        return this;
      }
      /**
       * <pre>
       * The slot to be applied.
       * </pre>
       *
       * <code>repeated .salto.nebula.openingmodeschedule.v1.OpeningModeSchedule.Day.Slot slots = 3;</code>
       */
      public Builder addSlots(
          com.saltoapis.nebula.openingmodeschedule.v1.OpeningModeSchedule.Day.Slot.Builder builderForValue) {
        copyOnWrite();
        instance.addSlots(builderForValue.build());
        return this;
      }
      /**
       * <pre>
       * The slot to be applied.
       * </pre>
       *
       * <code>repeated .salto.nebula.openingmodeschedule.v1.OpeningModeSchedule.Day.Slot slots = 3;</code>
       */
      public Builder addSlots(
          int index, com.saltoapis.nebula.openingmodeschedule.v1.OpeningModeSchedule.Day.Slot.Builder builderForValue) {
        copyOnWrite();
        instance.addSlots(index,
            builderForValue.build());
        return this;
      }
      /**
       * <pre>
       * The slot to be applied.
       * </pre>
       *
       * <code>repeated .salto.nebula.openingmodeschedule.v1.OpeningModeSchedule.Day.Slot slots = 3;</code>
       */
      public Builder addAllSlots(
          java.lang.Iterable<? extends com.saltoapis.nebula.openingmodeschedule.v1.OpeningModeSchedule.Day.Slot> values) {
        copyOnWrite();
        instance.addAllSlots(values);
        return this;
      }
      /**
       * <pre>
       * The slot to be applied.
       * </pre>
       *
       * <code>repeated .salto.nebula.openingmodeschedule.v1.OpeningModeSchedule.Day.Slot slots = 3;</code>
       */
      public Builder clearSlots() {
        copyOnWrite();
        instance.clearSlots();
        return this;
      }
      /**
       * <pre>
       * The slot to be applied.
       * </pre>
       *
       * <code>repeated .salto.nebula.openingmodeschedule.v1.OpeningModeSchedule.Day.Slot slots = 3;</code>
       */
      public Builder removeSlots(int index) {
        copyOnWrite();
        instance.removeSlots(index);
        return this;
      }

      // @@protoc_insertion_point(builder_scope:salto.nebula.openingmodeschedule.v1.OpeningModeSchedule.Day)
    }
    @java.lang.Override
    @java.lang.SuppressWarnings({"unchecked", "fallthrough"})
    protected final java.lang.Object dynamicMethod(
        com.google.protobuf.GeneratedMessageLite.MethodToInvoke method,
        java.lang.Object arg0, java.lang.Object arg1) {
      switch (method) {
        case NEW_MUTABLE_INSTANCE: {
          return new com.saltoapis.nebula.openingmodeschedule.v1.OpeningModeSchedule.Day();
        }
        case NEW_BUILDER: {
          return new Builder();
        }
        case BUILD_MESSAGE_INFO: {
            java.lang.Object[] objects = new java.lang.Object[] {
              "dayType_",
              "dayOfWeek_",
              "slots_",
              com.saltoapis.nebula.openingmodeschedule.v1.OpeningModeSchedule.Day.Slot.class,
            };
            java.lang.String info =
                "\u0000\u0003\u0000\u0000\u0001\u0003\u0003\u0000\u0001\u0000\u0001\f\u0002\f\u0003" +
                "\u001b";
            return newMessageInfo(DEFAULT_INSTANCE, info, objects);
        }
        // fall through
        case GET_DEFAULT_INSTANCE: {
          return DEFAULT_INSTANCE;
        }
        case GET_PARSER: {
          com.google.protobuf.Parser<com.saltoapis.nebula.openingmodeschedule.v1.OpeningModeSchedule.Day> parser = PARSER;
          if (parser == null) {
            synchronized (com.saltoapis.nebula.openingmodeschedule.v1.OpeningModeSchedule.Day.class) {
              parser = PARSER;
              if (parser == null) {
                parser =
                    new DefaultInstanceBasedParser<com.saltoapis.nebula.openingmodeschedule.v1.OpeningModeSchedule.Day>(
                        DEFAULT_INSTANCE);
                PARSER = parser;
              }
            }
          }
          return parser;
      }
      case GET_MEMOIZED_IS_INITIALIZED: {
        return (byte) 1;
      }
      case SET_MEMOIZED_IS_INITIALIZED: {
        return null;
      }
      }
      throw new UnsupportedOperationException();
    }


    // @@protoc_insertion_point(class_scope:salto.nebula.openingmodeschedule.v1.OpeningModeSchedule.Day)
    private static final com.saltoapis.nebula.openingmodeschedule.v1.OpeningModeSchedule.Day DEFAULT_INSTANCE;
    static {
      Day defaultInstance = new Day();
      // New instances are implicitly immutable so no need to make
      // immutable.
      DEFAULT_INSTANCE = defaultInstance;
      com.google.protobuf.GeneratedMessageLite.registerDefaultInstance(
        Day.class, defaultInstance);
    }

    public static com.saltoapis.nebula.openingmodeschedule.v1.OpeningModeSchedule.Day getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static volatile com.google.protobuf.Parser<Day> PARSER;

    public static com.google.protobuf.Parser<Day> parser() {
      return DEFAULT_INSTANCE.getParserForType();
    }
  }

  public static final int NAME_FIELD_NUMBER = 1;
  private java.lang.String name_;
  /**
   * <pre>
   *  Resource name of the opening mode schedule. It must have the format of
   * `installations/&#42;&#47;opening-mode-schedules/&#42;`. For example:
   * `installations/surelock-homes-hq/opening-mode-schedules/office-24-7`.
   * </pre>
   *
   * <code>string name = 1;</code>
   * @return The name.
   */
  @java.lang.Override
  public java.lang.String getName() {
    return name_;
  }
  /**
   * <pre>
   *  Resource name of the opening mode schedule. It must have the format of
   * `installations/&#42;&#47;opening-mode-schedules/&#42;`. For example:
   * `installations/surelock-homes-hq/opening-mode-schedules/office-24-7`.
   * </pre>
   *
   * <code>string name = 1;</code>
   * @return The bytes for name.
   */
  @java.lang.Override
  public com.google.protobuf.ByteString
      getNameBytes() {
    return com.google.protobuf.ByteString.copyFromUtf8(name_);
  }
  /**
   * <pre>
   *  Resource name of the opening mode schedule. It must have the format of
   * `installations/&#42;&#47;opening-mode-schedules/&#42;`. For example:
   * `installations/surelock-homes-hq/opening-mode-schedules/office-24-7`.
   * </pre>
   *
   * <code>string name = 1;</code>
   * @param value The name to set.
   */
  private void setName(
      java.lang.String value) {
    java.lang.Class<?> valueClass = value.getClass();
  
    name_ = value;
  }
  /**
   * <pre>
   *  Resource name of the opening mode schedule. It must have the format of
   * `installations/&#42;&#47;opening-mode-schedules/&#42;`. For example:
   * `installations/surelock-homes-hq/opening-mode-schedules/office-24-7`.
   * </pre>
   *
   * <code>string name = 1;</code>
   */
  private void clearName() {

    name_ = getDefaultInstance().getName();
  }
  /**
   * <pre>
   *  Resource name of the opening mode schedule. It must have the format of
   * `installations/&#42;&#47;opening-mode-schedules/&#42;`. For example:
   * `installations/surelock-homes-hq/opening-mode-schedules/office-24-7`.
   * </pre>
   *
   * <code>string name = 1;</code>
   * @param value The bytes for name to set.
   */
  private void setNameBytes(
      com.google.protobuf.ByteString value) {
    checkByteStringIsUtf8(value);
    name_ = value.toStringUtf8();

  }

  public static final int DISPLAY_NAME_FIELD_NUMBER = 2;
  private java.lang.String displayName_;
  /**
   * <pre>
   * Display name of the opening mode schedule.
   * </pre>
   *
   * <code>string display_name = 2;</code>
   * @return The displayName.
   */
  @java.lang.Override
  public java.lang.String getDisplayName() {
    return displayName_;
  }
  /**
   * <pre>
   * Display name of the opening mode schedule.
   * </pre>
   *
   * <code>string display_name = 2;</code>
   * @return The bytes for displayName.
   */
  @java.lang.Override
  public com.google.protobuf.ByteString
      getDisplayNameBytes() {
    return com.google.protobuf.ByteString.copyFromUtf8(displayName_);
  }
  /**
   * <pre>
   * Display name of the opening mode schedule.
   * </pre>
   *
   * <code>string display_name = 2;</code>
   * @param value The displayName to set.
   */
  private void setDisplayName(
      java.lang.String value) {
    java.lang.Class<?> valueClass = value.getClass();
  
    displayName_ = value;
  }
  /**
   * <pre>
   * Display name of the opening mode schedule.
   * </pre>
   *
   * <code>string display_name = 2;</code>
   */
  private void clearDisplayName() {

    displayName_ = getDefaultInstance().getDisplayName();
  }
  /**
   * <pre>
   * Display name of the opening mode schedule.
   * </pre>
   *
   * <code>string display_name = 2;</code>
   * @param value The bytes for displayName to set.
   */
  private void setDisplayNameBytes(
      com.google.protobuf.ByteString value) {
    checkByteStringIsUtf8(value);
    displayName_ = value.toStringUtf8();

  }

  public static final int DAYS_FIELD_NUMBER = 3;
  private com.google.protobuf.Internal.ProtobufList<com.saltoapis.nebula.openingmodeschedule.v1.OpeningModeSchedule.Day> days_;
  /**
   * <pre>
   * Days when the opening mode schedule is valid.
   * </pre>
   *
   * <code>repeated .salto.nebula.openingmodeschedule.v1.OpeningModeSchedule.Day days = 3;</code>
   */
  @java.lang.Override
  public java.util.List<com.saltoapis.nebula.openingmodeschedule.v1.OpeningModeSchedule.Day> getDaysList() {
    return days_;
  }
  /**
   * <pre>
   * Days when the opening mode schedule is valid.
   * </pre>
   *
   * <code>repeated .salto.nebula.openingmodeschedule.v1.OpeningModeSchedule.Day days = 3;</code>
   */
  public java.util.List<? extends com.saltoapis.nebula.openingmodeschedule.v1.OpeningModeSchedule.DayOrBuilder> 
      getDaysOrBuilderList() {
    return days_;
  }
  /**
   * <pre>
   * Days when the opening mode schedule is valid.
   * </pre>
   *
   * <code>repeated .salto.nebula.openingmodeschedule.v1.OpeningModeSchedule.Day days = 3;</code>
   */
  @java.lang.Override
  public int getDaysCount() {
    return days_.size();
  }
  /**
   * <pre>
   * Days when the opening mode schedule is valid.
   * </pre>
   *
   * <code>repeated .salto.nebula.openingmodeschedule.v1.OpeningModeSchedule.Day days = 3;</code>
   */
  @java.lang.Override
  public com.saltoapis.nebula.openingmodeschedule.v1.OpeningModeSchedule.Day getDays(int index) {
    return days_.get(index);
  }
  /**
   * <pre>
   * Days when the opening mode schedule is valid.
   * </pre>
   *
   * <code>repeated .salto.nebula.openingmodeschedule.v1.OpeningModeSchedule.Day days = 3;</code>
   */
  public com.saltoapis.nebula.openingmodeschedule.v1.OpeningModeSchedule.DayOrBuilder getDaysOrBuilder(
      int index) {
    return days_.get(index);
  }
  private void ensureDaysIsMutable() {
    com.google.protobuf.Internal.ProtobufList<com.saltoapis.nebula.openingmodeschedule.v1.OpeningModeSchedule.Day> tmp = days_;
    if (!tmp.isModifiable()) {
      days_ =
          com.google.protobuf.GeneratedMessageLite.mutableCopy(tmp);
     }
  }

  /**
   * <pre>
   * Days when the opening mode schedule is valid.
   * </pre>
   *
   * <code>repeated .salto.nebula.openingmodeschedule.v1.OpeningModeSchedule.Day days = 3;</code>
   */
  private void setDays(
      int index, com.saltoapis.nebula.openingmodeschedule.v1.OpeningModeSchedule.Day value) {
    value.getClass();
  ensureDaysIsMutable();
    days_.set(index, value);
  }
  /**
   * <pre>
   * Days when the opening mode schedule is valid.
   * </pre>
   *
   * <code>repeated .salto.nebula.openingmodeschedule.v1.OpeningModeSchedule.Day days = 3;</code>
   */
  private void addDays(com.saltoapis.nebula.openingmodeschedule.v1.OpeningModeSchedule.Day value) {
    value.getClass();
  ensureDaysIsMutable();
    days_.add(value);
  }
  /**
   * <pre>
   * Days when the opening mode schedule is valid.
   * </pre>
   *
   * <code>repeated .salto.nebula.openingmodeschedule.v1.OpeningModeSchedule.Day days = 3;</code>
   */
  private void addDays(
      int index, com.saltoapis.nebula.openingmodeschedule.v1.OpeningModeSchedule.Day value) {
    value.getClass();
  ensureDaysIsMutable();
    days_.add(index, value);
  }
  /**
   * <pre>
   * Days when the opening mode schedule is valid.
   * </pre>
   *
   * <code>repeated .salto.nebula.openingmodeschedule.v1.OpeningModeSchedule.Day days = 3;</code>
   */
  private void addAllDays(
      java.lang.Iterable<? extends com.saltoapis.nebula.openingmodeschedule.v1.OpeningModeSchedule.Day> values) {
    ensureDaysIsMutable();
    com.google.protobuf.AbstractMessageLite.addAll(
        values, days_);
  }
  /**
   * <pre>
   * Days when the opening mode schedule is valid.
   * </pre>
   *
   * <code>repeated .salto.nebula.openingmodeschedule.v1.OpeningModeSchedule.Day days = 3;</code>
   */
  private void clearDays() {
    days_ = emptyProtobufList();
  }
  /**
   * <pre>
   * Days when the opening mode schedule is valid.
   * </pre>
   *
   * <code>repeated .salto.nebula.openingmodeschedule.v1.OpeningModeSchedule.Day days = 3;</code>
   */
  private void removeDays(int index) {
    ensureDaysIsMutable();
    days_.remove(index);
  }

  public static com.saltoapis.nebula.openingmodeschedule.v1.OpeningModeSchedule parseFrom(
      java.nio.ByteBuffer data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return com.google.protobuf.GeneratedMessageLite.parseFrom(
        DEFAULT_INSTANCE, data);
  }
  public static com.saltoapis.nebula.openingmodeschedule.v1.OpeningModeSchedule parseFrom(
      java.nio.ByteBuffer data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return com.google.protobuf.GeneratedMessageLite.parseFrom(
        DEFAULT_INSTANCE, data, extensionRegistry);
  }
  public static com.saltoapis.nebula.openingmodeschedule.v1.OpeningModeSchedule parseFrom(
      com.google.protobuf.ByteString data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return com.google.protobuf.GeneratedMessageLite.parseFrom(
        DEFAULT_INSTANCE, data);
  }
  public static com.saltoapis.nebula.openingmodeschedule.v1.OpeningModeSchedule parseFrom(
      com.google.protobuf.ByteString data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return com.google.protobuf.GeneratedMessageLite.parseFrom(
        DEFAULT_INSTANCE, data, extensionRegistry);
  }
  public static com.saltoapis.nebula.openingmodeschedule.v1.OpeningModeSchedule parseFrom(byte[] data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return com.google.protobuf.GeneratedMessageLite.parseFrom(
        DEFAULT_INSTANCE, data);
  }
  public static com.saltoapis.nebula.openingmodeschedule.v1.OpeningModeSchedule parseFrom(
      byte[] data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return com.google.protobuf.GeneratedMessageLite.parseFrom(
        DEFAULT_INSTANCE, data, extensionRegistry);
  }
  public static com.saltoapis.nebula.openingmodeschedule.v1.OpeningModeSchedule parseFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageLite.parseFrom(
        DEFAULT_INSTANCE, input);
  }
  public static com.saltoapis.nebula.openingmodeschedule.v1.OpeningModeSchedule parseFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageLite.parseFrom(
        DEFAULT_INSTANCE, input, extensionRegistry);
  }

  public static com.saltoapis.nebula.openingmodeschedule.v1.OpeningModeSchedule parseDelimitedFrom(java.io.InputStream input)
      throws java.io.IOException {
    return parseDelimitedFrom(DEFAULT_INSTANCE, input);
  }

  public static com.saltoapis.nebula.openingmodeschedule.v1.OpeningModeSchedule parseDelimitedFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return parseDelimitedFrom(DEFAULT_INSTANCE, input, extensionRegistry);
  }
  public static com.saltoapis.nebula.openingmodeschedule.v1.OpeningModeSchedule parseFrom(
      com.google.protobuf.CodedInputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageLite.parseFrom(
        DEFAULT_INSTANCE, input);
  }
  public static com.saltoapis.nebula.openingmodeschedule.v1.OpeningModeSchedule parseFrom(
      com.google.protobuf.CodedInputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageLite.parseFrom(
        DEFAULT_INSTANCE, input, extensionRegistry);
  }

  public static Builder newBuilder() {
    return (Builder) DEFAULT_INSTANCE.createBuilder();
  }
  public static Builder newBuilder(com.saltoapis.nebula.openingmodeschedule.v1.OpeningModeSchedule prototype) {
    return DEFAULT_INSTANCE.createBuilder(prototype);
  }

  /**
   * <pre>
   * The opening mode schedule object
   * </pre>
   *
   * Protobuf type {@code salto.nebula.openingmodeschedule.v1.OpeningModeSchedule}
   */
  public static final class Builder extends
      com.google.protobuf.GeneratedMessageLite.Builder<
        com.saltoapis.nebula.openingmodeschedule.v1.OpeningModeSchedule, Builder> implements
      // @@protoc_insertion_point(builder_implements:salto.nebula.openingmodeschedule.v1.OpeningModeSchedule)
      com.saltoapis.nebula.openingmodeschedule.v1.OpeningModeScheduleOrBuilder {
    // Construct using com.saltoapis.nebula.openingmodeschedule.v1.OpeningModeSchedule.newBuilder()
    private Builder() {
      super(DEFAULT_INSTANCE);
    }


    /**
     * <pre>
     *  Resource name of the opening mode schedule. It must have the format of
     * `installations/&#42;&#47;opening-mode-schedules/&#42;`. For example:
     * `installations/surelock-homes-hq/opening-mode-schedules/office-24-7`.
     * </pre>
     *
     * <code>string name = 1;</code>
     * @return The name.
     */
    @java.lang.Override
    public java.lang.String getName() {
      return instance.getName();
    }
    /**
     * <pre>
     *  Resource name of the opening mode schedule. It must have the format of
     * `installations/&#42;&#47;opening-mode-schedules/&#42;`. For example:
     * `installations/surelock-homes-hq/opening-mode-schedules/office-24-7`.
     * </pre>
     *
     * <code>string name = 1;</code>
     * @return The bytes for name.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString
        getNameBytes() {
      return instance.getNameBytes();
    }
    /**
     * <pre>
     *  Resource name of the opening mode schedule. It must have the format of
     * `installations/&#42;&#47;opening-mode-schedules/&#42;`. For example:
     * `installations/surelock-homes-hq/opening-mode-schedules/office-24-7`.
     * </pre>
     *
     * <code>string name = 1;</code>
     * @param value The name to set.
     * @return This builder for chaining.
     */
    public Builder setName(
        java.lang.String value) {
      copyOnWrite();
      instance.setName(value);
      return this;
    }
    /**
     * <pre>
     *  Resource name of the opening mode schedule. It must have the format of
     * `installations/&#42;&#47;opening-mode-schedules/&#42;`. For example:
     * `installations/surelock-homes-hq/opening-mode-schedules/office-24-7`.
     * </pre>
     *
     * <code>string name = 1;</code>
     * @return This builder for chaining.
     */
    public Builder clearName() {
      copyOnWrite();
      instance.clearName();
      return this;
    }
    /**
     * <pre>
     *  Resource name of the opening mode schedule. It must have the format of
     * `installations/&#42;&#47;opening-mode-schedules/&#42;`. For example:
     * `installations/surelock-homes-hq/opening-mode-schedules/office-24-7`.
     * </pre>
     *
     * <code>string name = 1;</code>
     * @param value The bytes for name to set.
     * @return This builder for chaining.
     */
    public Builder setNameBytes(
        com.google.protobuf.ByteString value) {
      copyOnWrite();
      instance.setNameBytes(value);
      return this;
    }

    /**
     * <pre>
     * Display name of the opening mode schedule.
     * </pre>
     *
     * <code>string display_name = 2;</code>
     * @return The displayName.
     */
    @java.lang.Override
    public java.lang.String getDisplayName() {
      return instance.getDisplayName();
    }
    /**
     * <pre>
     * Display name of the opening mode schedule.
     * </pre>
     *
     * <code>string display_name = 2;</code>
     * @return The bytes for displayName.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString
        getDisplayNameBytes() {
      return instance.getDisplayNameBytes();
    }
    /**
     * <pre>
     * Display name of the opening mode schedule.
     * </pre>
     *
     * <code>string display_name = 2;</code>
     * @param value The displayName to set.
     * @return This builder for chaining.
     */
    public Builder setDisplayName(
        java.lang.String value) {
      copyOnWrite();
      instance.setDisplayName(value);
      return this;
    }
    /**
     * <pre>
     * Display name of the opening mode schedule.
     * </pre>
     *
     * <code>string display_name = 2;</code>
     * @return This builder for chaining.
     */
    public Builder clearDisplayName() {
      copyOnWrite();
      instance.clearDisplayName();
      return this;
    }
    /**
     * <pre>
     * Display name of the opening mode schedule.
     * </pre>
     *
     * <code>string display_name = 2;</code>
     * @param value The bytes for displayName to set.
     * @return This builder for chaining.
     */
    public Builder setDisplayNameBytes(
        com.google.protobuf.ByteString value) {
      copyOnWrite();
      instance.setDisplayNameBytes(value);
      return this;
    }

    /**
     * <pre>
     * Days when the opening mode schedule is valid.
     * </pre>
     *
     * <code>repeated .salto.nebula.openingmodeschedule.v1.OpeningModeSchedule.Day days = 3;</code>
     */
    @java.lang.Override
    public java.util.List<com.saltoapis.nebula.openingmodeschedule.v1.OpeningModeSchedule.Day> getDaysList() {
      return java.util.Collections.unmodifiableList(
          instance.getDaysList());
    }
    /**
     * <pre>
     * Days when the opening mode schedule is valid.
     * </pre>
     *
     * <code>repeated .salto.nebula.openingmodeschedule.v1.OpeningModeSchedule.Day days = 3;</code>
     */
    @java.lang.Override
    public int getDaysCount() {
      return instance.getDaysCount();
    }/**
     * <pre>
     * Days when the opening mode schedule is valid.
     * </pre>
     *
     * <code>repeated .salto.nebula.openingmodeschedule.v1.OpeningModeSchedule.Day days = 3;</code>
     */
    @java.lang.Override
    public com.saltoapis.nebula.openingmodeschedule.v1.OpeningModeSchedule.Day getDays(int index) {
      return instance.getDays(index);
    }
    /**
     * <pre>
     * Days when the opening mode schedule is valid.
     * </pre>
     *
     * <code>repeated .salto.nebula.openingmodeschedule.v1.OpeningModeSchedule.Day days = 3;</code>
     */
    public Builder setDays(
        int index, com.saltoapis.nebula.openingmodeschedule.v1.OpeningModeSchedule.Day value) {
      copyOnWrite();
      instance.setDays(index, value);
      return this;
    }
    /**
     * <pre>
     * Days when the opening mode schedule is valid.
     * </pre>
     *
     * <code>repeated .salto.nebula.openingmodeschedule.v1.OpeningModeSchedule.Day days = 3;</code>
     */
    public Builder setDays(
        int index, com.saltoapis.nebula.openingmodeschedule.v1.OpeningModeSchedule.Day.Builder builderForValue) {
      copyOnWrite();
      instance.setDays(index,
          builderForValue.build());
      return this;
    }
    /**
     * <pre>
     * Days when the opening mode schedule is valid.
     * </pre>
     *
     * <code>repeated .salto.nebula.openingmodeschedule.v1.OpeningModeSchedule.Day days = 3;</code>
     */
    public Builder addDays(com.saltoapis.nebula.openingmodeschedule.v1.OpeningModeSchedule.Day value) {
      copyOnWrite();
      instance.addDays(value);
      return this;
    }
    /**
     * <pre>
     * Days when the opening mode schedule is valid.
     * </pre>
     *
     * <code>repeated .salto.nebula.openingmodeschedule.v1.OpeningModeSchedule.Day days = 3;</code>
     */
    public Builder addDays(
        int index, com.saltoapis.nebula.openingmodeschedule.v1.OpeningModeSchedule.Day value) {
      copyOnWrite();
      instance.addDays(index, value);
      return this;
    }
    /**
     * <pre>
     * Days when the opening mode schedule is valid.
     * </pre>
     *
     * <code>repeated .salto.nebula.openingmodeschedule.v1.OpeningModeSchedule.Day days = 3;</code>
     */
    public Builder addDays(
        com.saltoapis.nebula.openingmodeschedule.v1.OpeningModeSchedule.Day.Builder builderForValue) {
      copyOnWrite();
      instance.addDays(builderForValue.build());
      return this;
    }
    /**
     * <pre>
     * Days when the opening mode schedule is valid.
     * </pre>
     *
     * <code>repeated .salto.nebula.openingmodeschedule.v1.OpeningModeSchedule.Day days = 3;</code>
     */
    public Builder addDays(
        int index, com.saltoapis.nebula.openingmodeschedule.v1.OpeningModeSchedule.Day.Builder builderForValue) {
      copyOnWrite();
      instance.addDays(index,
          builderForValue.build());
      return this;
    }
    /**
     * <pre>
     * Days when the opening mode schedule is valid.
     * </pre>
     *
     * <code>repeated .salto.nebula.openingmodeschedule.v1.OpeningModeSchedule.Day days = 3;</code>
     */
    public Builder addAllDays(
        java.lang.Iterable<? extends com.saltoapis.nebula.openingmodeschedule.v1.OpeningModeSchedule.Day> values) {
      copyOnWrite();
      instance.addAllDays(values);
      return this;
    }
    /**
     * <pre>
     * Days when the opening mode schedule is valid.
     * </pre>
     *
     * <code>repeated .salto.nebula.openingmodeschedule.v1.OpeningModeSchedule.Day days = 3;</code>
     */
    public Builder clearDays() {
      copyOnWrite();
      instance.clearDays();
      return this;
    }
    /**
     * <pre>
     * Days when the opening mode schedule is valid.
     * </pre>
     *
     * <code>repeated .salto.nebula.openingmodeschedule.v1.OpeningModeSchedule.Day days = 3;</code>
     */
    public Builder removeDays(int index) {
      copyOnWrite();
      instance.removeDays(index);
      return this;
    }

    // @@protoc_insertion_point(builder_scope:salto.nebula.openingmodeschedule.v1.OpeningModeSchedule)
  }
  @java.lang.Override
  @java.lang.SuppressWarnings({"unchecked", "fallthrough"})
  protected final java.lang.Object dynamicMethod(
      com.google.protobuf.GeneratedMessageLite.MethodToInvoke method,
      java.lang.Object arg0, java.lang.Object arg1) {
    switch (method) {
      case NEW_MUTABLE_INSTANCE: {
        return new com.saltoapis.nebula.openingmodeschedule.v1.OpeningModeSchedule();
      }
      case NEW_BUILDER: {
        return new Builder();
      }
      case BUILD_MESSAGE_INFO: {
          java.lang.Object[] objects = new java.lang.Object[] {
            "name_",
            "displayName_",
            "days_",
            com.saltoapis.nebula.openingmodeschedule.v1.OpeningModeSchedule.Day.class,
          };
          java.lang.String info =
              "\u0000\u0003\u0000\u0000\u0001\u0003\u0003\u0000\u0001\u0000\u0001\u0208\u0002\u0208" +
              "\u0003\u001b";
          return newMessageInfo(DEFAULT_INSTANCE, info, objects);
      }
      // fall through
      case GET_DEFAULT_INSTANCE: {
        return DEFAULT_INSTANCE;
      }
      case GET_PARSER: {
        com.google.protobuf.Parser<com.saltoapis.nebula.openingmodeschedule.v1.OpeningModeSchedule> parser = PARSER;
        if (parser == null) {
          synchronized (com.saltoapis.nebula.openingmodeschedule.v1.OpeningModeSchedule.class) {
            parser = PARSER;
            if (parser == null) {
              parser =
                  new DefaultInstanceBasedParser<com.saltoapis.nebula.openingmodeschedule.v1.OpeningModeSchedule>(
                      DEFAULT_INSTANCE);
              PARSER = parser;
            }
          }
        }
        return parser;
    }
    case GET_MEMOIZED_IS_INITIALIZED: {
      return (byte) 1;
    }
    case SET_MEMOIZED_IS_INITIALIZED: {
      return null;
    }
    }
    throw new UnsupportedOperationException();
  }


  // @@protoc_insertion_point(class_scope:salto.nebula.openingmodeschedule.v1.OpeningModeSchedule)
  private static final com.saltoapis.nebula.openingmodeschedule.v1.OpeningModeSchedule DEFAULT_INSTANCE;
  static {
    OpeningModeSchedule defaultInstance = new OpeningModeSchedule();
    // New instances are implicitly immutable so no need to make
    // immutable.
    DEFAULT_INSTANCE = defaultInstance;
    com.google.protobuf.GeneratedMessageLite.registerDefaultInstance(
      OpeningModeSchedule.class, defaultInstance);
  }

  public static com.saltoapis.nebula.openingmodeschedule.v1.OpeningModeSchedule getDefaultInstance() {
    return DEFAULT_INSTANCE;
  }

  private static volatile com.google.protobuf.Parser<OpeningModeSchedule> PARSER;

  public static com.google.protobuf.Parser<OpeningModeSchedule> parser() {
    return DEFAULT_INSTANCE.getParserForType();
  }
}

