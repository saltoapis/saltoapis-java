// Generated by the protocol buffer compiler.  DO NOT EDIT!
// NO CHECKED-IN PROTOBUF GENCODE
// source: salto/nebula/type/day_type.proto
// Protobuf Java Version: 4.29.2

package com.saltoapis.nebula.type;

/**
 * <pre>
 * Represents the day types.
 * </pre>
 *
 * Protobuf enum {@code salto.nebula.type.DayType}
 */
public enum DayType
    implements com.google.protobuf.ProtocolMessageEnum {
  /**
   * <pre>
   * Unspecified
   * </pre>
   *
   * <code>DAY_TYPE_UNSPECIFIED = 0;</code>
   */
  DAY_TYPE_UNSPECIFIED(0),
  /**
   * <pre>
   * Normal day
   * </pre>
   *
   * <code>NORMAL = 1;</code>
   */
  NORMAL(1),
  /**
   * <pre>
   * Holidays
   * </pre>
   *
   * <code>HOLIDAY = 2;</code>
   */
  HOLIDAY(2),
  /**
   * <pre>
   * Special day type 1
   * </pre>
   *
   * <code>SPECIAL_1 = 3;</code>
   */
  SPECIAL_1(3),
  /**
   * <pre>
   * Special day type 2
   * </pre>
   *
   * <code>SPECIAL_2 = 4;</code>
   */
  SPECIAL_2(4),
  UNRECOGNIZED(-1),
  ;

  static {
    com.google.protobuf.RuntimeVersion.validateProtobufGencodeVersion(
      com.google.protobuf.RuntimeVersion.RuntimeDomain.PUBLIC,
      /* major= */ 4,
      /* minor= */ 29,
      /* patch= */ 2,
      /* suffix= */ "",
      DayType.class.getName());
  }
  /**
   * <pre>
   * Unspecified
   * </pre>
   *
   * <code>DAY_TYPE_UNSPECIFIED = 0;</code>
   */
  public static final int DAY_TYPE_UNSPECIFIED_VALUE = 0;
  /**
   * <pre>
   * Normal day
   * </pre>
   *
   * <code>NORMAL = 1;</code>
   */
  public static final int NORMAL_VALUE = 1;
  /**
   * <pre>
   * Holidays
   * </pre>
   *
   * <code>HOLIDAY = 2;</code>
   */
  public static final int HOLIDAY_VALUE = 2;
  /**
   * <pre>
   * Special day type 1
   * </pre>
   *
   * <code>SPECIAL_1 = 3;</code>
   */
  public static final int SPECIAL_1_VALUE = 3;
  /**
   * <pre>
   * Special day type 2
   * </pre>
   *
   * <code>SPECIAL_2 = 4;</code>
   */
  public static final int SPECIAL_2_VALUE = 4;


  public final int getNumber() {
    if (this == UNRECOGNIZED) {
      throw new java.lang.IllegalArgumentException(
          "Can't get the number of an unknown enum value.");
    }
    return value;
  }

  /**
   * @param value The numeric wire value of the corresponding enum entry.
   * @return The enum associated with the given numeric wire value.
   * @deprecated Use {@link #forNumber(int)} instead.
   */
  @java.lang.Deprecated
  public static DayType valueOf(int value) {
    return forNumber(value);
  }

  /**
   * @param value The numeric wire value of the corresponding enum entry.
   * @return The enum associated with the given numeric wire value.
   */
  public static DayType forNumber(int value) {
    switch (value) {
      case 0: return DAY_TYPE_UNSPECIFIED;
      case 1: return NORMAL;
      case 2: return HOLIDAY;
      case 3: return SPECIAL_1;
      case 4: return SPECIAL_2;
      default: return null;
    }
  }

  public static com.google.protobuf.Internal.EnumLiteMap<DayType>
      internalGetValueMap() {
    return internalValueMap;
  }
  private static final com.google.protobuf.Internal.EnumLiteMap<
      DayType> internalValueMap =
        new com.google.protobuf.Internal.EnumLiteMap<DayType>() {
          public DayType findValueByNumber(int number) {
            return DayType.forNumber(number);
          }
        };

  public final com.google.protobuf.Descriptors.EnumValueDescriptor
      getValueDescriptor() {
    if (this == UNRECOGNIZED) {
      throw new java.lang.IllegalStateException(
          "Can't get the descriptor of an unrecognized enum value.");
    }
    return getDescriptor().getValues().get(ordinal());
  }
  public final com.google.protobuf.Descriptors.EnumDescriptor
      getDescriptorForType() {
    return getDescriptor();
  }
  public static final com.google.protobuf.Descriptors.EnumDescriptor
      getDescriptor() {
    return com.saltoapis.nebula.type.DayTypeProto.getDescriptor().getEnumTypes().get(0);
  }

  private static final DayType[] VALUES = values();

  public static DayType valueOf(
      com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
    if (desc.getType() != getDescriptor()) {
      throw new java.lang.IllegalArgumentException(
        "EnumValueDescriptor is not for this type.");
    }
    if (desc.getIndex() == -1) {
      return UNRECOGNIZED;
    }
    return VALUES[desc.getIndex()];
  }

  private final int value;

  private DayType(int value) {
    this.value = value;
  }

  // @@protoc_insertion_point(enum_scope:salto.nebula.type.DayType)
}

