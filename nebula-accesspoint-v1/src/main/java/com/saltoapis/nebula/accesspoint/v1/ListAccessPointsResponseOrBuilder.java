// Generated by the protocol buffer compiler.  DO NOT EDIT!
// NO CHECKED-IN PROTOBUF GENCODE
// source: salto/nebula/accesspoint/v1/access_point.proto
// Protobuf Java Version: 4.29.2

package com.saltoapis.nebula.accesspoint.v1;

public interface ListAccessPointsResponseOrBuilder extends
    // @@protoc_insertion_point(interface_extends:salto.nebula.accesspoint.v1.ListAccessPointsResponse)
    com.google.protobuf.MessageOrBuilder {

  /**
   * <pre>
   * The field name should match the noun `access_points` in the method name.
   * There will be a maximum number of items returned based on the `page_size`
   * field in the request.
   * </pre>
   *
   * <code>repeated .salto.nebula.accesspoint.v1.AccessPoint access_points = 1;</code>
   */
  java.util.List<com.saltoapis.nebula.accesspoint.v1.AccessPoint> 
      getAccessPointsList();
  /**
   * <pre>
   * The field name should match the noun `access_points` in the method name.
   * There will be a maximum number of items returned based on the `page_size`
   * field in the request.
   * </pre>
   *
   * <code>repeated .salto.nebula.accesspoint.v1.AccessPoint access_points = 1;</code>
   */
  com.saltoapis.nebula.accesspoint.v1.AccessPoint getAccessPoints(int index);
  /**
   * <pre>
   * The field name should match the noun `access_points` in the method name.
   * There will be a maximum number of items returned based on the `page_size`
   * field in the request.
   * </pre>
   *
   * <code>repeated .salto.nebula.accesspoint.v1.AccessPoint access_points = 1;</code>
   */
  int getAccessPointsCount();
  /**
   * <pre>
   * The field name should match the noun `access_points` in the method name.
   * There will be a maximum number of items returned based on the `page_size`
   * field in the request.
   * </pre>
   *
   * <code>repeated .salto.nebula.accesspoint.v1.AccessPoint access_points = 1;</code>
   */
  java.util.List<? extends com.saltoapis.nebula.accesspoint.v1.AccessPointOrBuilder> 
      getAccessPointsOrBuilderList();
  /**
   * <pre>
   * The field name should match the noun `access_points` in the method name.
   * There will be a maximum number of items returned based on the `page_size`
   * field in the request.
   * </pre>
   *
   * <code>repeated .salto.nebula.accesspoint.v1.AccessPoint access_points = 1;</code>
   */
  com.saltoapis.nebula.accesspoint.v1.AccessPointOrBuilder getAccessPointsOrBuilder(
      int index);

  /**
   * <pre>
   * Token to retrieve the next page of results, or empty if there are no more
   * results in the list.
   * </pre>
   *
   * <code>string next_page_token = 2;</code>
   * @return The nextPageToken.
   */
  java.lang.String getNextPageToken();
  /**
   * <pre>
   * Token to retrieve the next page of results, or empty if there are no more
   * results in the list.
   * </pre>
   *
   * <code>string next_page_token = 2;</code>
   * @return The bytes for nextPageToken.
   */
  com.google.protobuf.ByteString
      getNextPageTokenBytes();

  /**
   * <pre>
   * The total number of access points in all pages, irrespective of any pagination.
   * This is an estimated number based on the requested filter, and it may change in
   * subsequent pages.
   * </pre>
   *
   * <code>int32 total_size = 3;</code>
   * @return The totalSize.
   */
  int getTotalSize();
}
